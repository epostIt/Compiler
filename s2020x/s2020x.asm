
// *********************************************************
// ASM File: s2020x.asm
// *********************************************************


// *********************************************************
// BOOTSTRAP CODE:
// *********************************************************

@ 256                                        // ROM[00000]
D = A                                        // ROM[00001]
@ SP                                         // ROM[00002]
M = D                                        // ROM[00003]

// -------------------------------------
// CALL: Sys.init(0 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 0                                          // ROM[00004]
D = A                                        // ROM[00005]
@ R13                                        // ROM[00006]
M = D                                        // ROM[00007]
// ---------------------------
// Push RA
@ ..BOOT..:0                                 // ROM[00008]
D = A                                        // ROM[00009]
// ---------------------------
// push D
@ SP                                         // ROM[00010]
AM = M+1                                     // ROM[00011]
A = A-1                                      // ROM[00012]
M = D                                        // ROM[00013]
// ---------------------------
// call
@ ..BOOT..:1                                 // ROM[00014]
D = A                                        // ROM[00015]
@ R15                                        // ROM[00016]
M = D                                        // ROM[00017]
@ :call                                      // ROM[00018]
0; JMP                                       // ROM[00019]
( ..BOOT..:1)
// ---------------------------
// goto functionName
@ Sys.init                                   // ROM[00020]
0; JMP                                       // ROM[00021]
// ---------------------------
// ( RA )
( ..BOOT..:0) 

// *********************************************************
// Translation of: ./Map.vm
// *********************************************************


// =========================================================
// FUNCTION: Map.new(2 locals)
// =========================================================

( Map.new )
// ---------------------------
// clear local segment
D = 0                                        // ROM[00022]
// ---------------------------
// push D
@ SP                                         // ROM[00023]
AM = M+1                                     // ROM[00024]
A = A-1                                      // ROM[00025]
M = D                                        // ROM[00026]
// ---------------------------
// push D
@ SP                                         // ROM[00027]
AM = M+1                                     // ROM[00028]
A = A-1                                      // ROM[00029]
M = D                                        // ROM[00030]

// -------------------------------------
// PUSH: <constant, 1>
// -------------------------------------
@ 1                                          // ROM[00031]
D = A                                        // ROM[00032]
// ---------------------------
// push D
@ SP                                         // ROM[00033]
AM = M+1                                     // ROM[00034]
A = A-1                                      // ROM[00035]
M = D                                        // ROM[00036]

// -------------------------------------
// CALL: Memory.alloc(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[00037]
D = A                                        // ROM[00038]
@ R13                                        // ROM[00039]
M = D                                        // ROM[00040]
// ---------------------------
// Push RA
@ Map.new:0                                  // ROM[00041]
D = A                                        // ROM[00042]
// ---------------------------
// push D
@ SP                                         // ROM[00043]
AM = M+1                                     // ROM[00044]
A = A-1                                      // ROM[00045]
M = D                                        // ROM[00046]
// ---------------------------
// call
@ Map.new:1                                  // ROM[00047]
D = A                                        // ROM[00048]
@ R15                                        // ROM[00049]
M = D                                        // ROM[00050]
@ :call                                      // ROM[00051]
0; JMP                                       // ROM[00052]
( Map.new:1)
// ---------------------------
// goto functionName
@ Memory.alloc                               // ROM[00053]
0; JMP                                       // ROM[00054]
// ---------------------------
// ( RA )
( Map.new:0) 

// -------------------------------------
// POP: <pointer, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00055]
AM = M-1                                     // ROM[00056]
D = M                                        // ROM[00057]
// ---------------------------
@ 3                                          // ROM[00058]
M = D                                        // ROM[00059]

// -------------------------------------
// PUSH: <argument, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00060]
D = A                                        // ROM[00061]
@ R13                                        // ROM[00062]
M = D                                        // ROM[00063]
// ---------------------------
// call
@ Map.new:2                                  // ROM[00064]
D = A                                        // ROM[00065]
@ R15                                        // ROM[00066]
M = D                                        // ROM[00067]
@ :push_argument                             // ROM[00068]
0; JMP                                       // ROM[00069]
( Map.new:2)

// -------------------------------------
// POP: <static, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00070]
AM = M-1                                     // ROM[00071]
D = M                                        // ROM[00072]
// ---------------------------
// static[index] = D
@ Map.0                                      // ROM[00073]
M = D                                        // ROM[00074]

// -------------------------------------
// PUSH: <argument, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[00075]
D = A                                        // ROM[00076]
@ R13                                        // ROM[00077]
M = D                                        // ROM[00078]
// ---------------------------
// call
@ Map.new:3                                  // ROM[00079]
D = A                                        // ROM[00080]
@ R15                                        // ROM[00081]
M = D                                        // ROM[00082]
@ :push_argument                             // ROM[00083]
0; JMP                                       // ROM[00084]
( Map.new:3)

// -------------------------------------
// POP: <static, 1>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00085]
AM = M-1                                     // ROM[00086]
D = M                                        // ROM[00087]
// ---------------------------
// static[index] = D
@ Map.1                                      // ROM[00088]
M = D                                        // ROM[00089]

// -------------------------------------
// PUSH: <argument, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[00090]
D = A                                        // ROM[00091]
@ R13                                        // ROM[00092]
M = D                                        // ROM[00093]
// ---------------------------
// call
@ Map.new:4                                  // ROM[00094]
D = A                                        // ROM[00095]
@ R15                                        // ROM[00096]
M = D                                        // ROM[00097]
@ :push_argument                             // ROM[00098]
0; JMP                                       // ROM[00099]
( Map.new:4)

// -------------------------------------
// POP: <static, 2>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00100]
AM = M-1                                     // ROM[00101]
D = M                                        // ROM[00102]
// ---------------------------
// static[index] = D
@ Map.2                                      // ROM[00103]
M = D                                        // ROM[00104]

// -------------------------------------
// PUSH: <argument, 3>
// -------------------------------------
// ---------------------------
// R13 = index
@ 3                                          // ROM[00105]
D = A                                        // ROM[00106]
@ R13                                        // ROM[00107]
M = D                                        // ROM[00108]
// ---------------------------
// call
@ Map.new:5                                  // ROM[00109]
D = A                                        // ROM[00110]
@ R15                                        // ROM[00111]
M = D                                        // ROM[00112]
@ :push_argument                             // ROM[00113]
0; JMP                                       // ROM[00114]
( Map.new:5)

// -------------------------------------
// POP: <static, 3>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00115]
AM = M-1                                     // ROM[00116]
D = M                                        // ROM[00117]
// ---------------------------
// static[index] = D
@ Map.3                                      // ROM[00118]
M = D                                        // ROM[00119]

// -------------------------------------
// PUSH: <constant, 3>
// -------------------------------------
@ 3                                          // ROM[00120]
D = A                                        // ROM[00121]
// ---------------------------
// push D
@ SP                                         // ROM[00122]
AM = M+1                                     // ROM[00123]
A = A-1                                      // ROM[00124]
M = D                                        // ROM[00125]

// -------------------------------------
// POP: <static, 4>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00126]
AM = M-1                                     // ROM[00127]
D = M                                        // ROM[00128]
// ---------------------------
// static[index] = D
@ Map.4                                      // ROM[00129]
M = D                                        // ROM[00130]

// -------------------------------------
// PUSH: <static, 0>
// -------------------------------------
// ---------------------------
// D = static[index]
@ Map.0                                      // ROM[00131]
D = M                                        // ROM[00132]
// ---------------------------
// push D
@ SP                                         // ROM[00133]
AM = M+1                                     // ROM[00134]
A = A-1                                      // ROM[00135]
M = D                                        // ROM[00136]

// -------------------------------------
// PUSH: <static, 1>
// -------------------------------------
// ---------------------------
// D = static[index]
@ Map.1                                      // ROM[00137]
D = M                                        // ROM[00138]
// ---------------------------
// push D
@ SP                                         // ROM[00139]
AM = M+1                                     // ROM[00140]
A = A-1                                      // ROM[00141]
M = D                                        // ROM[00142]

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[00143]
D = A                                        // ROM[00144]
@ R13                                        // ROM[00145]
M = D                                        // ROM[00146]
// ---------------------------
// Push RA
@ Map.new:6                                  // ROM[00147]
D = A                                        // ROM[00148]
// ---------------------------
// push D
@ SP                                         // ROM[00149]
AM = M+1                                     // ROM[00150]
A = A-1                                      // ROM[00151]
M = D                                        // ROM[00152]
// ---------------------------
// call
@ Map.new:7                                  // ROM[00153]
D = A                                        // ROM[00154]
@ R15                                        // ROM[00155]
M = D                                        // ROM[00156]
@ :call                                      // ROM[00157]
0; JMP                                       // ROM[00158]
( Map.new:7)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[00159]
0; JMP                                       // ROM[00160]
// ---------------------------
// ( RA )
( Map.new:6) 

// -------------------------------------
// CALL: Memory.alloc(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[00161]
D = A                                        // ROM[00162]
@ R13                                        // ROM[00163]
M = D                                        // ROM[00164]
// ---------------------------
// Push RA
@ Map.new:8                                  // ROM[00165]
D = A                                        // ROM[00166]
// ---------------------------
// push D
@ SP                                         // ROM[00167]
AM = M+1                                     // ROM[00168]
A = A-1                                      // ROM[00169]
M = D                                        // ROM[00170]
// ---------------------------
// call
@ Map.new:9                                  // ROM[00171]
D = A                                        // ROM[00172]
@ R15                                        // ROM[00173]
M = D                                        // ROM[00174]
@ :call                                      // ROM[00175]
0; JMP                                       // ROM[00176]
( Map.new:9)
// ---------------------------
// goto functionName
@ Memory.alloc                               // ROM[00177]
0; JMP                                       // ROM[00178]
// ---------------------------
// ( RA )
( Map.new:8) 

// -------------------------------------
// POP: <this, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00179]
D = A                                        // ROM[00180]
@ R13                                        // ROM[00181]
M = D                                        // ROM[00182]
// ---------------------------
// call
@ Map.new:10                                 // ROM[00183]
D = A                                        // ROM[00184]
@ R15                                        // ROM[00185]
M = D                                        // ROM[00186]
@ :pop_this                                  // ROM[00187]
0; JMP                                       // ROM[00188]
( Map.new:10)

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[00189]
D = A                                        // ROM[00190]
// ---------------------------
// push D
@ SP                                         // ROM[00191]
AM = M+1                                     // ROM[00192]
A = A-1                                      // ROM[00193]
M = D                                        // ROM[00194]

// -------------------------------------
// POP: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00195]
D = A                                        // ROM[00196]
@ R13                                        // ROM[00197]
M = D                                        // ROM[00198]
// ---------------------------
// call
@ Map.new:11                                 // ROM[00199]
D = A                                        // ROM[00200]
@ R15                                        // ROM[00201]
M = D                                        // ROM[00202]
@ :pop_local                                 // ROM[00203]
0; JMP                                       // ROM[00204]
( Map.new:11)

// -------------------------------------
// LABEL: LOOP0
// -------------------------------------
( Map.new$LOOP0 )

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00205]
D = A                                        // ROM[00206]
@ R13                                        // ROM[00207]
M = D                                        // ROM[00208]
// ---------------------------
// call
@ Map.new:12                                 // ROM[00209]
D = A                                        // ROM[00210]
@ R15                                        // ROM[00211]
M = D                                        // ROM[00212]
@ :push_local                                // ROM[00213]
0; JMP                                       // ROM[00214]
( Map.new:12)

// -------------------------------------
// PUSH: <static, 0>
// -------------------------------------
// ---------------------------
// D = static[index]
@ Map.0                                      // ROM[00215]
D = M                                        // ROM[00216]
// ---------------------------
// push D
@ SP                                         // ROM[00217]
AM = M+1                                     // ROM[00218]
A = A-1                                      // ROM[00219]
M = D                                        // ROM[00220]

// -------------------------------------
// ARITHMETIC: lt
// -------------------------------------
// ---------------------------
// call
@ Map.new:13                                 // ROM[00221]
D = A                                        // ROM[00222]
@ R15                                        // ROM[00223]
M = D                                        // ROM[00224]
@ :lt                                        // ROM[00225]
0; JMP                                       // ROM[00226]
( Map.new:13)

// -------------------------------------
// ARITHMETIC: not
// -------------------------------------
@ SP                                         // ROM[00227]
A = M-1                                      // ROM[00228]
M = !M                                       // ROM[00229]

// -------------------------------------
// IF-GOTO: END0
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00230]
AM = M-1                                     // ROM[00231]
D = M                                        // ROM[00232]
// ---------------------------
@ Map.new$END0                               // ROM[00233]
D; JNE                                       // ROM[00234]

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[00235]
D = A                                        // ROM[00236]
// ---------------------------
// push D
@ SP                                         // ROM[00237]
AM = M+1                                     // ROM[00238]
A = A-1                                      // ROM[00239]
M = D                                        // ROM[00240]

// -------------------------------------
// POP: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[00241]
D = A                                        // ROM[00242]
@ R13                                        // ROM[00243]
M = D                                        // ROM[00244]
// ---------------------------
// call
@ Map.new:14                                 // ROM[00245]
D = A                                        // ROM[00246]
@ R15                                        // ROM[00247]
M = D                                        // ROM[00248]
@ :pop_local                                 // ROM[00249]
0; JMP                                       // ROM[00250]
( Map.new:14)

// -------------------------------------
// LABEL: LOOP1
// -------------------------------------
( Map.new$LOOP1 )

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[00251]
D = A                                        // ROM[00252]
@ R13                                        // ROM[00253]
M = D                                        // ROM[00254]
// ---------------------------
// call
@ Map.new:15                                 // ROM[00255]
D = A                                        // ROM[00256]
@ R15                                        // ROM[00257]
M = D                                        // ROM[00258]
@ :push_local                                // ROM[00259]
0; JMP                                       // ROM[00260]
( Map.new:15)

// -------------------------------------
// PUSH: <static, 1>
// -------------------------------------
// ---------------------------
// D = static[index]
@ Map.1                                      // ROM[00261]
D = M                                        // ROM[00262]
// ---------------------------
// push D
@ SP                                         // ROM[00263]
AM = M+1                                     // ROM[00264]
A = A-1                                      // ROM[00265]
M = D                                        // ROM[00266]

// -------------------------------------
// ARITHMETIC: lt
// -------------------------------------
// ---------------------------
// call
@ Map.new:16                                 // ROM[00267]
D = A                                        // ROM[00268]
@ R15                                        // ROM[00269]
M = D                                        // ROM[00270]
@ :lt                                        // ROM[00271]
0; JMP                                       // ROM[00272]
( Map.new:16)

// -------------------------------------
// ARITHMETIC: not
// -------------------------------------
@ SP                                         // ROM[00273]
A = M-1                                      // ROM[00274]
M = !M                                       // ROM[00275]

// -------------------------------------
// IF-GOTO: END1
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00276]
AM = M-1                                     // ROM[00277]
D = M                                        // ROM[00278]
// ---------------------------
@ Map.new$END1                               // ROM[00279]
D; JNE                                       // ROM[00280]

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00281]
D = A                                        // ROM[00282]
@ R13                                        // ROM[00283]
M = D                                        // ROM[00284]
// ---------------------------
// call
@ Map.new:17                                 // ROM[00285]
D = A                                        // ROM[00286]
@ R15                                        // ROM[00287]
M = D                                        // ROM[00288]
@ :push_local                                // ROM[00289]
0; JMP                                       // ROM[00290]
( Map.new:17)

// -------------------------------------
// PUSH: <static, 1>
// -------------------------------------
// ---------------------------
// D = static[index]
@ Map.1                                      // ROM[00291]
D = M                                        // ROM[00292]
// ---------------------------
// push D
@ SP                                         // ROM[00293]
AM = M+1                                     // ROM[00294]
A = A-1                                      // ROM[00295]
M = D                                        // ROM[00296]

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[00297]
D = A                                        // ROM[00298]
@ R13                                        // ROM[00299]
M = D                                        // ROM[00300]
// ---------------------------
// Push RA
@ Map.new:18                                 // ROM[00301]
D = A                                        // ROM[00302]
// ---------------------------
// push D
@ SP                                         // ROM[00303]
AM = M+1                                     // ROM[00304]
A = A-1                                      // ROM[00305]
M = D                                        // ROM[00306]
// ---------------------------
// call
@ Map.new:19                                 // ROM[00307]
D = A                                        // ROM[00308]
@ R15                                        // ROM[00309]
M = D                                        // ROM[00310]
@ :call                                      // ROM[00311]
0; JMP                                       // ROM[00312]
( Map.new:19)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[00313]
0; JMP                                       // ROM[00314]
// ---------------------------
// ( RA )
( Map.new:18) 

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[00315]
D = A                                        // ROM[00316]
@ R13                                        // ROM[00317]
M = D                                        // ROM[00318]
// ---------------------------
// call
@ Map.new:20                                 // ROM[00319]
D = A                                        // ROM[00320]
@ R15                                        // ROM[00321]
M = D                                        // ROM[00322]
@ :push_local                                // ROM[00323]
0; JMP                                       // ROM[00324]
( Map.new:20)

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Map.new:21                                 // ROM[00325]
D = A                                        // ROM[00326]
@ R15                                        // ROM[00327]
M = D                                        // ROM[00328]
@ :add                                       // ROM[00329]
0; JMP                                       // ROM[00330]
( Map.new:21)

// -------------------------------------
// PUSH: <this, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00331]
D = A                                        // ROM[00332]
@ R13                                        // ROM[00333]
M = D                                        // ROM[00334]
// ---------------------------
// call
@ Map.new:22                                 // ROM[00335]
D = A                                        // ROM[00336]
@ R15                                        // ROM[00337]
M = D                                        // ROM[00338]
@ :push_this                                 // ROM[00339]
0; JMP                                       // ROM[00340]
( Map.new:22)

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Map.new:23                                 // ROM[00341]
D = A                                        // ROM[00342]
@ R15                                        // ROM[00343]
M = D                                        // ROM[00344]
@ :add                                       // ROM[00345]
0; JMP                                       // ROM[00346]
( Map.new:23)

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00347]
D = A                                        // ROM[00348]
@ R13                                        // ROM[00349]
M = D                                        // ROM[00350]
// ---------------------------
// call
@ Map.new:24                                 // ROM[00351]
D = A                                        // ROM[00352]
@ R15                                        // ROM[00353]
M = D                                        // ROM[00354]
@ :push_local                                // ROM[00355]
0; JMP                                       // ROM[00356]
( Map.new:24)

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[00357]
D = A                                        // ROM[00358]
@ R13                                        // ROM[00359]
M = D                                        // ROM[00360]
// ---------------------------
// call
@ Map.new:25                                 // ROM[00361]
D = A                                        // ROM[00362]
@ R15                                        // ROM[00363]
M = D                                        // ROM[00364]
@ :push_local                                // ROM[00365]
0; JMP                                       // ROM[00366]
( Map.new:25)

// -------------------------------------
// CALL: Cell.new(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[00367]
D = A                                        // ROM[00368]
@ R13                                        // ROM[00369]
M = D                                        // ROM[00370]
// ---------------------------
// Push RA
@ Map.new:26                                 // ROM[00371]
D = A                                        // ROM[00372]
// ---------------------------
// push D
@ SP                                         // ROM[00373]
AM = M+1                                     // ROM[00374]
A = A-1                                      // ROM[00375]
M = D                                        // ROM[00376]
// ---------------------------
// call
@ Map.new:27                                 // ROM[00377]
D = A                                        // ROM[00378]
@ R15                                        // ROM[00379]
M = D                                        // ROM[00380]
@ :call                                      // ROM[00381]
0; JMP                                       // ROM[00382]
( Map.new:27)
// ---------------------------
// goto functionName
@ Cell.new                                   // ROM[00383]
0; JMP                                       // ROM[00384]
// ---------------------------
// ( RA )
( Map.new:26) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00385]
AM = M-1                                     // ROM[00386]
D = M                                        // ROM[00387]
// ---------------------------
@ 5                                          // ROM[00388]
M = D                                        // ROM[00389]

// -------------------------------------
// POP: <pointer, 1>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00390]
AM = M-1                                     // ROM[00391]
D = M                                        // ROM[00392]
// ---------------------------
@ 4                                          // ROM[00393]
M = D                                        // ROM[00394]

// -------------------------------------
// PUSH: <temp, 0>
// -------------------------------------
@ 5                                          // ROM[00395]
D = M                                        // ROM[00396]
// ---------------------------
// push D
@ SP                                         // ROM[00397]
AM = M+1                                     // ROM[00398]
A = A-1                                      // ROM[00399]
M = D                                        // ROM[00400]

// -------------------------------------
// POP: <that, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00401]
D = A                                        // ROM[00402]
@ R13                                        // ROM[00403]
M = D                                        // ROM[00404]
// ---------------------------
// call
@ Map.new:28                                 // ROM[00405]
D = A                                        // ROM[00406]
@ R15                                        // ROM[00407]
M = D                                        // ROM[00408]
@ :pop_that                                  // ROM[00409]
0; JMP                                       // ROM[00410]
( Map.new:28)

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[00411]
D = A                                        // ROM[00412]
@ R13                                        // ROM[00413]
M = D                                        // ROM[00414]
// ---------------------------
// call
@ Map.new:29                                 // ROM[00415]
D = A                                        // ROM[00416]
@ R15                                        // ROM[00417]
M = D                                        // ROM[00418]
@ :push_local                                // ROM[00419]
0; JMP                                       // ROM[00420]
( Map.new:29)

// -------------------------------------
// PUSH: <constant, 1>
// -------------------------------------
@ 1                                          // ROM[00421]
D = A                                        // ROM[00422]
// ---------------------------
// push D
@ SP                                         // ROM[00423]
AM = M+1                                     // ROM[00424]
A = A-1                                      // ROM[00425]
M = D                                        // ROM[00426]

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Map.new:30                                 // ROM[00427]
D = A                                        // ROM[00428]
@ R15                                        // ROM[00429]
M = D                                        // ROM[00430]
@ :add                                       // ROM[00431]
0; JMP                                       // ROM[00432]
( Map.new:30)

// -------------------------------------
// POP: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[00433]
D = A                                        // ROM[00434]
@ R13                                        // ROM[00435]
M = D                                        // ROM[00436]
// ---------------------------
// call
@ Map.new:31                                 // ROM[00437]
D = A                                        // ROM[00438]
@ R15                                        // ROM[00439]
M = D                                        // ROM[00440]
@ :pop_local                                 // ROM[00441]
0; JMP                                       // ROM[00442]
( Map.new:31)

// -------------------------------------
// GOTO: LOOP1
// -------------------------------------
@ Map.new$LOOP1                              // ROM[00443]
0; JMP                                       // ROM[00444]

// -------------------------------------
// LABEL: END1
// -------------------------------------
( Map.new$END1 )

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00445]
D = A                                        // ROM[00446]
@ R13                                        // ROM[00447]
M = D                                        // ROM[00448]
// ---------------------------
// call
@ Map.new:32                                 // ROM[00449]
D = A                                        // ROM[00450]
@ R15                                        // ROM[00451]
M = D                                        // ROM[00452]
@ :push_local                                // ROM[00453]
0; JMP                                       // ROM[00454]
( Map.new:32)

// -------------------------------------
// PUSH: <constant, 1>
// -------------------------------------
@ 1                                          // ROM[00455]
D = A                                        // ROM[00456]
// ---------------------------
// push D
@ SP                                         // ROM[00457]
AM = M+1                                     // ROM[00458]
A = A-1                                      // ROM[00459]
M = D                                        // ROM[00460]

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Map.new:33                                 // ROM[00461]
D = A                                        // ROM[00462]
@ R15                                        // ROM[00463]
M = D                                        // ROM[00464]
@ :add                                       // ROM[00465]
0; JMP                                       // ROM[00466]
( Map.new:33)

// -------------------------------------
// POP: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00467]
D = A                                        // ROM[00468]
@ R13                                        // ROM[00469]
M = D                                        // ROM[00470]
// ---------------------------
// call
@ Map.new:34                                 // ROM[00471]
D = A                                        // ROM[00472]
@ R15                                        // ROM[00473]
M = D                                        // ROM[00474]
@ :pop_local                                 // ROM[00475]
0; JMP                                       // ROM[00476]
( Map.new:34)

// -------------------------------------
// GOTO: LOOP0
// -------------------------------------
@ Map.new$LOOP0                              // ROM[00477]
0; JMP                                       // ROM[00478]

// -------------------------------------
// LABEL: END0
// -------------------------------------
( Map.new$END0 )

// -------------------------------------
// PUSH: <pointer, 0>
// -------------------------------------
@ 3                                          // ROM[00479]
D = M                                        // ROM[00480]
// ---------------------------
// push D
@ SP                                         // ROM[00481]
AM = M+1                                     // ROM[00482]
A = A-1                                      // ROM[00483]
M = D                                        // ROM[00484]

// -------------------------------------
// RETURN: 
// -------------------------------------
// ---------------------------
// call
@ Map.new:35                                 // ROM[00485]
D = A                                        // ROM[00486]
@ R15                                        // ROM[00487]
M = D                                        // ROM[00488]
@ :return                                    // ROM[00489]
0; JMP                                       // ROM[00490]
( Map.new:35)

// =========================================================
// FUNCTION: Map.dispose(3 locals)
// =========================================================

( Map.dispose )
// ---------------------------
// clear local segment
D = 0                                        // ROM[00491]
// ---------------------------
// push D
@ SP                                         // ROM[00492]
AM = M+1                                     // ROM[00493]
A = A-1                                      // ROM[00494]
M = D                                        // ROM[00495]
// ---------------------------
// push D
@ SP                                         // ROM[00496]
AM = M+1                                     // ROM[00497]
A = A-1                                      // ROM[00498]
M = D                                        // ROM[00499]
// ---------------------------
// push D
@ SP                                         // ROM[00500]
AM = M+1                                     // ROM[00501]
A = A-1                                      // ROM[00502]
M = D                                        // ROM[00503]

// -------------------------------------
// PUSH: <argument, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00504]
D = A                                        // ROM[00505]
@ R13                                        // ROM[00506]
M = D                                        // ROM[00507]
// ---------------------------
// call
@ Map.dispose:36                             // ROM[00508]
D = A                                        // ROM[00509]
@ R15                                        // ROM[00510]
M = D                                        // ROM[00511]
@ :push_argument                             // ROM[00512]
0; JMP                                       // ROM[00513]
( Map.dispose:36)

// -------------------------------------
// POP: <pointer, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00514]
AM = M-1                                     // ROM[00515]
D = M                                        // ROM[00516]
// ---------------------------
@ 3                                          // ROM[00517]
M = D                                        // ROM[00518]

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[00519]
D = A                                        // ROM[00520]
// ---------------------------
// push D
@ SP                                         // ROM[00521]
AM = M+1                                     // ROM[00522]
A = A-1                                      // ROM[00523]
M = D                                        // ROM[00524]

// -------------------------------------
// POP: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00525]
D = A                                        // ROM[00526]
@ R13                                        // ROM[00527]
M = D                                        // ROM[00528]
// ---------------------------
// call
@ Map.dispose:37                             // ROM[00529]
D = A                                        // ROM[00530]
@ R15                                        // ROM[00531]
M = D                                        // ROM[00532]
@ :pop_local                                 // ROM[00533]
0; JMP                                       // ROM[00534]
( Map.dispose:37)

// -------------------------------------
// LABEL: LOOP2
// -------------------------------------
( Map.dispose$LOOP2 )

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00535]
D = A                                        // ROM[00536]
@ R13                                        // ROM[00537]
M = D                                        // ROM[00538]
// ---------------------------
// call
@ Map.dispose:38                             // ROM[00539]
D = A                                        // ROM[00540]
@ R15                                        // ROM[00541]
M = D                                        // ROM[00542]
@ :push_local                                // ROM[00543]
0; JMP                                       // ROM[00544]
( Map.dispose:38)

// -------------------------------------
// PUSH: <static, 0>
// -------------------------------------
// ---------------------------
// D = static[index]
@ Map.0                                      // ROM[00545]
D = M                                        // ROM[00546]
// ---------------------------
// push D
@ SP                                         // ROM[00547]
AM = M+1                                     // ROM[00548]
A = A-1                                      // ROM[00549]
M = D                                        // ROM[00550]

// -------------------------------------
// ARITHMETIC: lt
// -------------------------------------
// ---------------------------
// call
@ Map.dispose:39                             // ROM[00551]
D = A                                        // ROM[00552]
@ R15                                        // ROM[00553]
M = D                                        // ROM[00554]
@ :lt                                        // ROM[00555]
0; JMP                                       // ROM[00556]
( Map.dispose:39)

// -------------------------------------
// ARITHMETIC: not
// -------------------------------------
@ SP                                         // ROM[00557]
A = M-1                                      // ROM[00558]
M = !M                                       // ROM[00559]

// -------------------------------------
// IF-GOTO: END2
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00560]
AM = M-1                                     // ROM[00561]
D = M                                        // ROM[00562]
// ---------------------------
@ Map.dispose$END2                           // ROM[00563]
D; JNE                                       // ROM[00564]

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[00565]
D = A                                        // ROM[00566]
// ---------------------------
// push D
@ SP                                         // ROM[00567]
AM = M+1                                     // ROM[00568]
A = A-1                                      // ROM[00569]
M = D                                        // ROM[00570]

// -------------------------------------
// POP: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[00571]
D = A                                        // ROM[00572]
@ R13                                        // ROM[00573]
M = D                                        // ROM[00574]
// ---------------------------
// call
@ Map.dispose:40                             // ROM[00575]
D = A                                        // ROM[00576]
@ R15                                        // ROM[00577]
M = D                                        // ROM[00578]
@ :pop_local                                 // ROM[00579]
0; JMP                                       // ROM[00580]
( Map.dispose:40)

// -------------------------------------
// LABEL: LOOP3
// -------------------------------------
( Map.dispose$LOOP3 )

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[00581]
D = A                                        // ROM[00582]
@ R13                                        // ROM[00583]
M = D                                        // ROM[00584]
// ---------------------------
// call
@ Map.dispose:41                             // ROM[00585]
D = A                                        // ROM[00586]
@ R15                                        // ROM[00587]
M = D                                        // ROM[00588]
@ :push_local                                // ROM[00589]
0; JMP                                       // ROM[00590]
( Map.dispose:41)

// -------------------------------------
// PUSH: <static, 1>
// -------------------------------------
// ---------------------------
// D = static[index]
@ Map.1                                      // ROM[00591]
D = M                                        // ROM[00592]
// ---------------------------
// push D
@ SP                                         // ROM[00593]
AM = M+1                                     // ROM[00594]
A = A-1                                      // ROM[00595]
M = D                                        // ROM[00596]

// -------------------------------------
// ARITHMETIC: lt
// -------------------------------------
// ---------------------------
// call
@ Map.dispose:42                             // ROM[00597]
D = A                                        // ROM[00598]
@ R15                                        // ROM[00599]
M = D                                        // ROM[00600]
@ :lt                                        // ROM[00601]
0; JMP                                       // ROM[00602]
( Map.dispose:42)

// -------------------------------------
// ARITHMETIC: not
// -------------------------------------
@ SP                                         // ROM[00603]
A = M-1                                      // ROM[00604]
M = !M                                       // ROM[00605]

// -------------------------------------
// IF-GOTO: END3
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00606]
AM = M-1                                     // ROM[00607]
D = M                                        // ROM[00608]
// ---------------------------
@ Map.dispose$END3                           // ROM[00609]
D; JNE                                       // ROM[00610]

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[00611]
D = A                                        // ROM[00612]
@ R13                                        // ROM[00613]
M = D                                        // ROM[00614]
// ---------------------------
// call
@ Map.dispose:43                             // ROM[00615]
D = A                                        // ROM[00616]
@ R15                                        // ROM[00617]
M = D                                        // ROM[00618]
@ :push_local                                // ROM[00619]
0; JMP                                       // ROM[00620]
( Map.dispose:43)

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00621]
D = A                                        // ROM[00622]
@ R13                                        // ROM[00623]
M = D                                        // ROM[00624]
// ---------------------------
// call
@ Map.dispose:44                             // ROM[00625]
D = A                                        // ROM[00626]
@ R15                                        // ROM[00627]
M = D                                        // ROM[00628]
@ :push_local                                // ROM[00629]
0; JMP                                       // ROM[00630]
( Map.dispose:44)

// -------------------------------------
// PUSH: <static, 1>
// -------------------------------------
// ---------------------------
// D = static[index]
@ Map.1                                      // ROM[00631]
D = M                                        // ROM[00632]
// ---------------------------
// push D
@ SP                                         // ROM[00633]
AM = M+1                                     // ROM[00634]
A = A-1                                      // ROM[00635]
M = D                                        // ROM[00636]

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[00637]
D = A                                        // ROM[00638]
@ R13                                        // ROM[00639]
M = D                                        // ROM[00640]
// ---------------------------
// Push RA
@ Map.dispose:45                             // ROM[00641]
D = A                                        // ROM[00642]
// ---------------------------
// push D
@ SP                                         // ROM[00643]
AM = M+1                                     // ROM[00644]
A = A-1                                      // ROM[00645]
M = D                                        // ROM[00646]
// ---------------------------
// call
@ Map.dispose:46                             // ROM[00647]
D = A                                        // ROM[00648]
@ R15                                        // ROM[00649]
M = D                                        // ROM[00650]
@ :call                                      // ROM[00651]
0; JMP                                       // ROM[00652]
( Map.dispose:46)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[00653]
0; JMP                                       // ROM[00654]
// ---------------------------
// ( RA )
( Map.dispose:45) 

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Map.dispose:47                             // ROM[00655]
D = A                                        // ROM[00656]
@ R15                                        // ROM[00657]
M = D                                        // ROM[00658]
@ :add                                       // ROM[00659]
0; JMP                                       // ROM[00660]
( Map.dispose:47)

// -------------------------------------
// PUSH: <this, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00661]
D = A                                        // ROM[00662]
@ R13                                        // ROM[00663]
M = D                                        // ROM[00664]
// ---------------------------
// call
@ Map.dispose:48                             // ROM[00665]
D = A                                        // ROM[00666]
@ R15                                        // ROM[00667]
M = D                                        // ROM[00668]
@ :push_this                                 // ROM[00669]
0; JMP                                       // ROM[00670]
( Map.dispose:48)

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Map.dispose:49                             // ROM[00671]
D = A                                        // ROM[00672]
@ R15                                        // ROM[00673]
M = D                                        // ROM[00674]
@ :add                                       // ROM[00675]
0; JMP                                       // ROM[00676]
( Map.dispose:49)

// -------------------------------------
// POP: <pointer, 1>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00677]
AM = M-1                                     // ROM[00678]
D = M                                        // ROM[00679]
// ---------------------------
@ 4                                          // ROM[00680]
M = D                                        // ROM[00681]

// -------------------------------------
// PUSH: <that, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00682]
D = A                                        // ROM[00683]
@ R13                                        // ROM[00684]
M = D                                        // ROM[00685]
// ---------------------------
// call
@ Map.dispose:50                             // ROM[00686]
D = A                                        // ROM[00687]
@ R15                                        // ROM[00688]
M = D                                        // ROM[00689]
@ :push_that                                 // ROM[00690]
0; JMP                                       // ROM[00691]
( Map.dispose:50)

// -------------------------------------
// POP: <local, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[00692]
D = A                                        // ROM[00693]
@ R13                                        // ROM[00694]
M = D                                        // ROM[00695]
// ---------------------------
// call
@ Map.dispose:51                             // ROM[00696]
D = A                                        // ROM[00697]
@ R15                                        // ROM[00698]
M = D                                        // ROM[00699]
@ :pop_local                                 // ROM[00700]
0; JMP                                       // ROM[00701]
( Map.dispose:51)

// -------------------------------------
// PUSH: <local, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[00702]
D = A                                        // ROM[00703]
@ R13                                        // ROM[00704]
M = D                                        // ROM[00705]
// ---------------------------
// call
@ Map.dispose:52                             // ROM[00706]
D = A                                        // ROM[00707]
@ R15                                        // ROM[00708]
M = D                                        // ROM[00709]
@ :push_local                                // ROM[00710]
0; JMP                                       // ROM[00711]
( Map.dispose:52)

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[00712]
D = A                                        // ROM[00713]
// ---------------------------
// push D
@ SP                                         // ROM[00714]
AM = M+1                                     // ROM[00715]
A = A-1                                      // ROM[00716]
M = D                                        // ROM[00717]

// -------------------------------------
// ARITHMETIC: eq
// -------------------------------------
// ---------------------------
// call
@ Map.dispose:53                             // ROM[00718]
D = A                                        // ROM[00719]
@ R15                                        // ROM[00720]
M = D                                        // ROM[00721]
@ :eq                                        // ROM[00722]
0; JMP                                       // ROM[00723]
( Map.dispose:53)

// -------------------------------------
// ARITHMETIC: not
// -------------------------------------
@ SP                                         // ROM[00724]
A = M-1                                      // ROM[00725]
M = !M                                       // ROM[00726]

// -------------------------------------
// IF-GOTO: IF_TRUE4
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00727]
AM = M-1                                     // ROM[00728]
D = M                                        // ROM[00729]
// ---------------------------
@ Map.dispose$IF_TRUE4                       // ROM[00730]
D; JNE                                       // ROM[00731]

// -------------------------------------
// GOTO: IF_FALSE4
// -------------------------------------
@ Map.dispose$IF_FALSE4                      // ROM[00732]
0; JMP                                       // ROM[00733]

// -------------------------------------
// LABEL: IF_TRUE4
// -------------------------------------
( Map.dispose$IF_TRUE4 )

// -------------------------------------
// PUSH: <local, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[00734]
D = A                                        // ROM[00735]
@ R13                                        // ROM[00736]
M = D                                        // ROM[00737]
// ---------------------------
// call
@ Map.dispose:54                             // ROM[00738]
D = A                                        // ROM[00739]
@ R15                                        // ROM[00740]
M = D                                        // ROM[00741]
@ :push_local                                // ROM[00742]
0; JMP                                       // ROM[00743]
( Map.dispose:54)

// -------------------------------------
// CALL: Cell.dispose(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[00744]
D = A                                        // ROM[00745]
@ R13                                        // ROM[00746]
M = D                                        // ROM[00747]
// ---------------------------
// Push RA
@ Map.dispose:55                             // ROM[00748]
D = A                                        // ROM[00749]
// ---------------------------
// push D
@ SP                                         // ROM[00750]
AM = M+1                                     // ROM[00751]
A = A-1                                      // ROM[00752]
M = D                                        // ROM[00753]
// ---------------------------
// call
@ Map.dispose:56                             // ROM[00754]
D = A                                        // ROM[00755]
@ R15                                        // ROM[00756]
M = D                                        // ROM[00757]
@ :call                                      // ROM[00758]
0; JMP                                       // ROM[00759]
( Map.dispose:56)
// ---------------------------
// goto functionName
@ Cell.dispose                               // ROM[00760]
0; JMP                                       // ROM[00761]
// ---------------------------
// ( RA )
( Map.dispose:55) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00762]
AM = M-1                                     // ROM[00763]
D = M                                        // ROM[00764]
// ---------------------------
@ 5                                          // ROM[00765]
M = D                                        // ROM[00766]

// -------------------------------------
// LABEL: IF_FALSE4
// -------------------------------------
( Map.dispose$IF_FALSE4 )

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[00767]
D = A                                        // ROM[00768]
@ R13                                        // ROM[00769]
M = D                                        // ROM[00770]
// ---------------------------
// call
@ Map.dispose:57                             // ROM[00771]
D = A                                        // ROM[00772]
@ R15                                        // ROM[00773]
M = D                                        // ROM[00774]
@ :push_local                                // ROM[00775]
0; JMP                                       // ROM[00776]
( Map.dispose:57)

// -------------------------------------
// PUSH: <constant, 1>
// -------------------------------------
@ 1                                          // ROM[00777]
D = A                                        // ROM[00778]
// ---------------------------
// push D
@ SP                                         // ROM[00779]
AM = M+1                                     // ROM[00780]
A = A-1                                      // ROM[00781]
M = D                                        // ROM[00782]

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Map.dispose:58                             // ROM[00783]
D = A                                        // ROM[00784]
@ R15                                        // ROM[00785]
M = D                                        // ROM[00786]
@ :add                                       // ROM[00787]
0; JMP                                       // ROM[00788]
( Map.dispose:58)

// -------------------------------------
// POP: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[00789]
D = A                                        // ROM[00790]
@ R13                                        // ROM[00791]
M = D                                        // ROM[00792]
// ---------------------------
// call
@ Map.dispose:59                             // ROM[00793]
D = A                                        // ROM[00794]
@ R15                                        // ROM[00795]
M = D                                        // ROM[00796]
@ :pop_local                                 // ROM[00797]
0; JMP                                       // ROM[00798]
( Map.dispose:59)

// -------------------------------------
// GOTO: LOOP3
// -------------------------------------
@ Map.dispose$LOOP3                          // ROM[00799]
0; JMP                                       // ROM[00800]

// -------------------------------------
// LABEL: END3
// -------------------------------------
( Map.dispose$END3 )

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00801]
D = A                                        // ROM[00802]
@ R13                                        // ROM[00803]
M = D                                        // ROM[00804]
// ---------------------------
// call
@ Map.dispose:60                             // ROM[00805]
D = A                                        // ROM[00806]
@ R15                                        // ROM[00807]
M = D                                        // ROM[00808]
@ :push_local                                // ROM[00809]
0; JMP                                       // ROM[00810]
( Map.dispose:60)

// -------------------------------------
// PUSH: <constant, 1>
// -------------------------------------
@ 1                                          // ROM[00811]
D = A                                        // ROM[00812]
// ---------------------------
// push D
@ SP                                         // ROM[00813]
AM = M+1                                     // ROM[00814]
A = A-1                                      // ROM[00815]
M = D                                        // ROM[00816]

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Map.dispose:61                             // ROM[00817]
D = A                                        // ROM[00818]
@ R15                                        // ROM[00819]
M = D                                        // ROM[00820]
@ :add                                       // ROM[00821]
0; JMP                                       // ROM[00822]
( Map.dispose:61)

// -------------------------------------
// POP: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00823]
D = A                                        // ROM[00824]
@ R13                                        // ROM[00825]
M = D                                        // ROM[00826]
// ---------------------------
// call
@ Map.dispose:62                             // ROM[00827]
D = A                                        // ROM[00828]
@ R15                                        // ROM[00829]
M = D                                        // ROM[00830]
@ :pop_local                                 // ROM[00831]
0; JMP                                       // ROM[00832]
( Map.dispose:62)

// -------------------------------------
// GOTO: LOOP2
// -------------------------------------
@ Map.dispose$LOOP2                          // ROM[00833]
0; JMP                                       // ROM[00834]

// -------------------------------------
// LABEL: END2
// -------------------------------------
( Map.dispose$END2 )

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[00835]
D = A                                        // ROM[00836]
// ---------------------------
// push D
@ SP                                         // ROM[00837]
AM = M+1                                     // ROM[00838]
A = A-1                                      // ROM[00839]
M = D                                        // ROM[00840]

// -------------------------------------
// RETURN: 
// -------------------------------------
// ---------------------------
// call
@ Map.dispose:63                             // ROM[00841]
D = A                                        // ROM[00842]
@ R15                                        // ROM[00843]
M = D                                        // ROM[00844]
@ :return                                    // ROM[00845]
0; JMP                                       // ROM[00846]
( Map.dispose:63)

// =========================================================
// FUNCTION: Map.draw(3 locals)
// =========================================================

( Map.draw )
// ---------------------------
// clear local segment
D = 0                                        // ROM[00847]
// ---------------------------
// push D
@ SP                                         // ROM[00848]
AM = M+1                                     // ROM[00849]
A = A-1                                      // ROM[00850]
M = D                                        // ROM[00851]
// ---------------------------
// push D
@ SP                                         // ROM[00852]
AM = M+1                                     // ROM[00853]
A = A-1                                      // ROM[00854]
M = D                                        // ROM[00855]
// ---------------------------
// push D
@ SP                                         // ROM[00856]
AM = M+1                                     // ROM[00857]
A = A-1                                      // ROM[00858]
M = D                                        // ROM[00859]

// -------------------------------------
// PUSH: <argument, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00860]
D = A                                        // ROM[00861]
@ R13                                        // ROM[00862]
M = D                                        // ROM[00863]
// ---------------------------
// call
@ Map.draw:64                                // ROM[00864]
D = A                                        // ROM[00865]
@ R15                                        // ROM[00866]
M = D                                        // ROM[00867]
@ :push_argument                             // ROM[00868]
0; JMP                                       // ROM[00869]
( Map.draw:64)

// -------------------------------------
// POP: <pointer, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00870]
AM = M-1                                     // ROM[00871]
D = M                                        // ROM[00872]
// ---------------------------
@ 3                                          // ROM[00873]
M = D                                        // ROM[00874]

// -------------------------------------
// CALL: Screen.clearScreen(0 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 0                                          // ROM[00875]
D = A                                        // ROM[00876]
@ R13                                        // ROM[00877]
M = D                                        // ROM[00878]
// ---------------------------
// Push RA
@ Map.draw:65                                // ROM[00879]
D = A                                        // ROM[00880]
// ---------------------------
// push D
@ SP                                         // ROM[00881]
AM = M+1                                     // ROM[00882]
A = A-1                                      // ROM[00883]
M = D                                        // ROM[00884]
// ---------------------------
// call
@ Map.draw:66                                // ROM[00885]
D = A                                        // ROM[00886]
@ R15                                        // ROM[00887]
M = D                                        // ROM[00888]
@ :call                                      // ROM[00889]
0; JMP                                       // ROM[00890]
( Map.draw:66)
// ---------------------------
// goto functionName
@ Screen.clearScreen                         // ROM[00891]
0; JMP                                       // ROM[00892]
// ---------------------------
// ( RA )
( Map.draw:65) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00893]
AM = M-1                                     // ROM[00894]
D = M                                        // ROM[00895]
// ---------------------------
@ 5                                          // ROM[00896]
M = D                                        // ROM[00897]

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[00898]
D = A                                        // ROM[00899]
// ---------------------------
// push D
@ SP                                         // ROM[00900]
AM = M+1                                     // ROM[00901]
A = A-1                                      // ROM[00902]
M = D                                        // ROM[00903]

// -------------------------------------
// POP: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00904]
D = A                                        // ROM[00905]
@ R13                                        // ROM[00906]
M = D                                        // ROM[00907]
// ---------------------------
// call
@ Map.draw:67                                // ROM[00908]
D = A                                        // ROM[00909]
@ R15                                        // ROM[00910]
M = D                                        // ROM[00911]
@ :pop_local                                 // ROM[00912]
0; JMP                                       // ROM[00913]
( Map.draw:67)

// -------------------------------------
// LABEL: LOOP5
// -------------------------------------
( Map.draw$LOOP5 )

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00914]
D = A                                        // ROM[00915]
@ R13                                        // ROM[00916]
M = D                                        // ROM[00917]
// ---------------------------
// call
@ Map.draw:68                                // ROM[00918]
D = A                                        // ROM[00919]
@ R15                                        // ROM[00920]
M = D                                        // ROM[00921]
@ :push_local                                // ROM[00922]
0; JMP                                       // ROM[00923]
( Map.draw:68)

// -------------------------------------
// PUSH: <static, 0>
// -------------------------------------
// ---------------------------
// D = static[index]
@ Map.0                                      // ROM[00924]
D = M                                        // ROM[00925]
// ---------------------------
// push D
@ SP                                         // ROM[00926]
AM = M+1                                     // ROM[00927]
A = A-1                                      // ROM[00928]
M = D                                        // ROM[00929]

// -------------------------------------
// ARITHMETIC: lt
// -------------------------------------
// ---------------------------
// call
@ Map.draw:69                                // ROM[00930]
D = A                                        // ROM[00931]
@ R15                                        // ROM[00932]
M = D                                        // ROM[00933]
@ :lt                                        // ROM[00934]
0; JMP                                       // ROM[00935]
( Map.draw:69)

// -------------------------------------
// ARITHMETIC: not
// -------------------------------------
@ SP                                         // ROM[00936]
A = M-1                                      // ROM[00937]
M = !M                                       // ROM[00938]

// -------------------------------------
// IF-GOTO: END5
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00939]
AM = M-1                                     // ROM[00940]
D = M                                        // ROM[00941]
// ---------------------------
@ Map.draw$END5                              // ROM[00942]
D; JNE                                       // ROM[00943]

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[00944]
D = A                                        // ROM[00945]
// ---------------------------
// push D
@ SP                                         // ROM[00946]
AM = M+1                                     // ROM[00947]
A = A-1                                      // ROM[00948]
M = D                                        // ROM[00949]

// -------------------------------------
// POP: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[00950]
D = A                                        // ROM[00951]
@ R13                                        // ROM[00952]
M = D                                        // ROM[00953]
// ---------------------------
// call
@ Map.draw:70                                // ROM[00954]
D = A                                        // ROM[00955]
@ R15                                        // ROM[00956]
M = D                                        // ROM[00957]
@ :pop_local                                 // ROM[00958]
0; JMP                                       // ROM[00959]
( Map.draw:70)

// -------------------------------------
// LABEL: LOOP6
// -------------------------------------
( Map.draw$LOOP6 )

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[00960]
D = A                                        // ROM[00961]
@ R13                                        // ROM[00962]
M = D                                        // ROM[00963]
// ---------------------------
// call
@ Map.draw:71                                // ROM[00964]
D = A                                        // ROM[00965]
@ R15                                        // ROM[00966]
M = D                                        // ROM[00967]
@ :push_local                                // ROM[00968]
0; JMP                                       // ROM[00969]
( Map.draw:71)

// -------------------------------------
// PUSH: <static, 1>
// -------------------------------------
// ---------------------------
// D = static[index]
@ Map.1                                      // ROM[00970]
D = M                                        // ROM[00971]
// ---------------------------
// push D
@ SP                                         // ROM[00972]
AM = M+1                                     // ROM[00973]
A = A-1                                      // ROM[00974]
M = D                                        // ROM[00975]

// -------------------------------------
// ARITHMETIC: lt
// -------------------------------------
// ---------------------------
// call
@ Map.draw:72                                // ROM[00976]
D = A                                        // ROM[00977]
@ R15                                        // ROM[00978]
M = D                                        // ROM[00979]
@ :lt                                        // ROM[00980]
0; JMP                                       // ROM[00981]
( Map.draw:72)

// -------------------------------------
// ARITHMETIC: not
// -------------------------------------
@ SP                                         // ROM[00982]
A = M-1                                      // ROM[00983]
M = !M                                       // ROM[00984]

// -------------------------------------
// IF-GOTO: END6
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[00985]
AM = M-1                                     // ROM[00986]
D = M                                        // ROM[00987]
// ---------------------------
@ Map.draw$END6                              // ROM[00988]
D; JNE                                       // ROM[00989]

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[00990]
D = A                                        // ROM[00991]
@ R13                                        // ROM[00992]
M = D                                        // ROM[00993]
// ---------------------------
// call
@ Map.draw:73                                // ROM[00994]
D = A                                        // ROM[00995]
@ R15                                        // ROM[00996]
M = D                                        // ROM[00997]
@ :push_local                                // ROM[00998]
0; JMP                                       // ROM[00999]
( Map.draw:73)

// -------------------------------------
// PUSH: <static, 1>
// -------------------------------------
// ---------------------------
// D = static[index]
@ Map.1                                      // ROM[01000]
D = M                                        // ROM[01001]
// ---------------------------
// push D
@ SP                                         // ROM[01002]
AM = M+1                                     // ROM[01003]
A = A-1                                      // ROM[01004]
M = D                                        // ROM[01005]

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01006]
D = A                                        // ROM[01007]
@ R13                                        // ROM[01008]
M = D                                        // ROM[01009]
// ---------------------------
// Push RA
@ Map.draw:74                                // ROM[01010]
D = A                                        // ROM[01011]
// ---------------------------
// push D
@ SP                                         // ROM[01012]
AM = M+1                                     // ROM[01013]
A = A-1                                      // ROM[01014]
M = D                                        // ROM[01015]
// ---------------------------
// call
@ Map.draw:75                                // ROM[01016]
D = A                                        // ROM[01017]
@ R15                                        // ROM[01018]
M = D                                        // ROM[01019]
@ :call                                      // ROM[01020]
0; JMP                                       // ROM[01021]
( Map.draw:75)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[01022]
0; JMP                                       // ROM[01023]
// ---------------------------
// ( RA )
( Map.draw:74) 

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[01024]
D = A                                        // ROM[01025]
@ R13                                        // ROM[01026]
M = D                                        // ROM[01027]
// ---------------------------
// call
@ Map.draw:76                                // ROM[01028]
D = A                                        // ROM[01029]
@ R15                                        // ROM[01030]
M = D                                        // ROM[01031]
@ :push_local                                // ROM[01032]
0; JMP                                       // ROM[01033]
( Map.draw:76)

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Map.draw:77                                // ROM[01034]
D = A                                        // ROM[01035]
@ R15                                        // ROM[01036]
M = D                                        // ROM[01037]
@ :add                                       // ROM[01038]
0; JMP                                       // ROM[01039]
( Map.draw:77)

// -------------------------------------
// PUSH: <this, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[01040]
D = A                                        // ROM[01041]
@ R13                                        // ROM[01042]
M = D                                        // ROM[01043]
// ---------------------------
// call
@ Map.draw:78                                // ROM[01044]
D = A                                        // ROM[01045]
@ R15                                        // ROM[01046]
M = D                                        // ROM[01047]
@ :push_this                                 // ROM[01048]
0; JMP                                       // ROM[01049]
( Map.draw:78)

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Map.draw:79                                // ROM[01050]
D = A                                        // ROM[01051]
@ R15                                        // ROM[01052]
M = D                                        // ROM[01053]
@ :add                                       // ROM[01054]
0; JMP                                       // ROM[01055]
( Map.draw:79)

// -------------------------------------
// POP: <pointer, 1>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[01056]
AM = M-1                                     // ROM[01057]
D = M                                        // ROM[01058]
// ---------------------------
@ 4                                          // ROM[01059]
M = D                                        // ROM[01060]

// -------------------------------------
// PUSH: <that, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[01061]
D = A                                        // ROM[01062]
@ R13                                        // ROM[01063]
M = D                                        // ROM[01064]
// ---------------------------
// call
@ Map.draw:80                                // ROM[01065]
D = A                                        // ROM[01066]
@ R15                                        // ROM[01067]
M = D                                        // ROM[01068]
@ :push_that                                 // ROM[01069]
0; JMP                                       // ROM[01070]
( Map.draw:80)

// -------------------------------------
// POP: <local, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[01071]
D = A                                        // ROM[01072]
@ R13                                        // ROM[01073]
M = D                                        // ROM[01074]
// ---------------------------
// call
@ Map.draw:81                                // ROM[01075]
D = A                                        // ROM[01076]
@ R15                                        // ROM[01077]
M = D                                        // ROM[01078]
@ :pop_local                                 // ROM[01079]
0; JMP                                       // ROM[01080]
( Map.draw:81)

// -------------------------------------
// PUSH: <local, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[01081]
D = A                                        // ROM[01082]
@ R13                                        // ROM[01083]
M = D                                        // ROM[01084]
// ---------------------------
// call
@ Map.draw:82                                // ROM[01085]
D = A                                        // ROM[01086]
@ R15                                        // ROM[01087]
M = D                                        // ROM[01088]
@ :push_local                                // ROM[01089]
0; JMP                                       // ROM[01090]
( Map.draw:82)

// -------------------------------------
// PUSH: <static, 2>
// -------------------------------------
// ---------------------------
// D = static[index]
@ Map.2                                      // ROM[01091]
D = M                                        // ROM[01092]
// ---------------------------
// push D
@ SP                                         // ROM[01093]
AM = M+1                                     // ROM[01094]
A = A-1                                      // ROM[01095]
M = D                                        // ROM[01096]

// -------------------------------------
// PUSH: <static, 3>
// -------------------------------------
// ---------------------------
// D = static[index]
@ Map.3                                      // ROM[01097]
D = M                                        // ROM[01098]
// ---------------------------
// push D
@ SP                                         // ROM[01099]
AM = M+1                                     // ROM[01100]
A = A-1                                      // ROM[01101]
M = D                                        // ROM[01102]

// -------------------------------------
// PUSH: <static, 4>
// -------------------------------------
// ---------------------------
// D = static[index]
@ Map.4                                      // ROM[01103]
D = M                                        // ROM[01104]
// ---------------------------
// push D
@ SP                                         // ROM[01105]
AM = M+1                                     // ROM[01106]
A = A-1                                      // ROM[01107]
M = D                                        // ROM[01108]

// -------------------------------------
// CALL: Cell.draw(4 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 4                                          // ROM[01109]
D = A                                        // ROM[01110]
@ R13                                        // ROM[01111]
M = D                                        // ROM[01112]
// ---------------------------
// Push RA
@ Map.draw:83                                // ROM[01113]
D = A                                        // ROM[01114]
// ---------------------------
// push D
@ SP                                         // ROM[01115]
AM = M+1                                     // ROM[01116]
A = A-1                                      // ROM[01117]
M = D                                        // ROM[01118]
// ---------------------------
// call
@ Map.draw:84                                // ROM[01119]
D = A                                        // ROM[01120]
@ R15                                        // ROM[01121]
M = D                                        // ROM[01122]
@ :call                                      // ROM[01123]
0; JMP                                       // ROM[01124]
( Map.draw:84)
// ---------------------------
// goto functionName
@ Cell.draw                                  // ROM[01125]
0; JMP                                       // ROM[01126]
// ---------------------------
// ( RA )
( Map.draw:83) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[01127]
AM = M-1                                     // ROM[01128]
D = M                                        // ROM[01129]
// ---------------------------
@ 5                                          // ROM[01130]
M = D                                        // ROM[01131]

// -------------------------------------
// PUSH: <constant, 3>
// -------------------------------------
@ 3                                          // ROM[01132]
D = A                                        // ROM[01133]
// ---------------------------
// push D
@ SP                                         // ROM[01134]
AM = M+1                                     // ROM[01135]
A = A-1                                      // ROM[01136]
M = D                                        // ROM[01137]

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[01138]
D = A                                        // ROM[01139]
@ R13                                        // ROM[01140]
M = D                                        // ROM[01141]
// ---------------------------
// call
@ Map.draw:85                                // ROM[01142]
D = A                                        // ROM[01143]
@ R15                                        // ROM[01144]
M = D                                        // ROM[01145]
@ :push_local                                // ROM[01146]
0; JMP                                       // ROM[01147]
( Map.draw:85)

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01148]
D = A                                        // ROM[01149]
@ R13                                        // ROM[01150]
M = D                                        // ROM[01151]
// ---------------------------
// Push RA
@ Map.draw:86                                // ROM[01152]
D = A                                        // ROM[01153]
// ---------------------------
// push D
@ SP                                         // ROM[01154]
AM = M+1                                     // ROM[01155]
A = A-1                                      // ROM[01156]
M = D                                        // ROM[01157]
// ---------------------------
// call
@ Map.draw:87                                // ROM[01158]
D = A                                        // ROM[01159]
@ R15                                        // ROM[01160]
M = D                                        // ROM[01161]
@ :call                                      // ROM[01162]
0; JMP                                       // ROM[01163]
( Map.draw:87)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[01164]
0; JMP                                       // ROM[01165]
// ---------------------------
// ( RA )
( Map.draw:86) 

// -------------------------------------
// PUSH: <constant, 57>
// -------------------------------------
@ 57                                         // ROM[01166]
D = A                                        // ROM[01167]
// ---------------------------
// push D
@ SP                                         // ROM[01168]
AM = M+1                                     // ROM[01169]
A = A-1                                      // ROM[01170]
M = D                                        // ROM[01171]

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[01172]
D = A                                        // ROM[01173]
@ R13                                        // ROM[01174]
M = D                                        // ROM[01175]
// ---------------------------
// call
@ Map.draw:88                                // ROM[01176]
D = A                                        // ROM[01177]
@ R15                                        // ROM[01178]
M = D                                        // ROM[01179]
@ :push_local                                // ROM[01180]
0; JMP                                       // ROM[01181]
( Map.draw:88)

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Map.draw:89                                // ROM[01182]
D = A                                        // ROM[01183]
@ R15                                        // ROM[01184]
M = D                                        // ROM[01185]
@ :add                                       // ROM[01186]
0; JMP                                       // ROM[01187]
( Map.draw:89)

// -------------------------------------
// CALL: Output.moveCursor(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01188]
D = A                                        // ROM[01189]
@ R13                                        // ROM[01190]
M = D                                        // ROM[01191]
// ---------------------------
// Push RA
@ Map.draw:90                                // ROM[01192]
D = A                                        // ROM[01193]
// ---------------------------
// push D
@ SP                                         // ROM[01194]
AM = M+1                                     // ROM[01195]
A = A-1                                      // ROM[01196]
M = D                                        // ROM[01197]
// ---------------------------
// call
@ Map.draw:91                                // ROM[01198]
D = A                                        // ROM[01199]
@ R15                                        // ROM[01200]
M = D                                        // ROM[01201]
@ :call                                      // ROM[01202]
0; JMP                                       // ROM[01203]
( Map.draw:91)
// ---------------------------
// goto functionName
@ Output.moveCursor                          // ROM[01204]
0; JMP                                       // ROM[01205]
// ---------------------------
// ( RA )
( Map.draw:90) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[01206]
AM = M-1                                     // ROM[01207]
D = M                                        // ROM[01208]
// ---------------------------
@ 5                                          // ROM[01209]
M = D                                        // ROM[01210]

// -------------------------------------
// PUSH: <constant, 1>
// -------------------------------------
@ 1                                          // ROM[01211]
D = A                                        // ROM[01212]
// ---------------------------
// push D
@ SP                                         // ROM[01213]
AM = M+1                                     // ROM[01214]
A = A-1                                      // ROM[01215]
M = D                                        // ROM[01216]

// -------------------------------------
// CALL: String.new(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[01217]
D = A                                        // ROM[01218]
@ R13                                        // ROM[01219]
M = D                                        // ROM[01220]
// ---------------------------
// Push RA
@ Map.draw:92                                // ROM[01221]
D = A                                        // ROM[01222]
// ---------------------------
// push D
@ SP                                         // ROM[01223]
AM = M+1                                     // ROM[01224]
A = A-1                                      // ROM[01225]
M = D                                        // ROM[01226]
// ---------------------------
// call
@ Map.draw:93                                // ROM[01227]
D = A                                        // ROM[01228]
@ R15                                        // ROM[01229]
M = D                                        // ROM[01230]
@ :call                                      // ROM[01231]
0; JMP                                       // ROM[01232]
( Map.draw:93)
// ---------------------------
// goto functionName
@ String.new                                 // ROM[01233]
0; JMP                                       // ROM[01234]
// ---------------------------
// ( RA )
( Map.draw:92) 

// -------------------------------------
// PUSH: <constant, 36>
// -------------------------------------
@ 36                                         // ROM[01235]
D = A                                        // ROM[01236]
// ---------------------------
// push D
@ SP                                         // ROM[01237]
AM = M+1                                     // ROM[01238]
A = A-1                                      // ROM[01239]
M = D                                        // ROM[01240]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01241]
D = A                                        // ROM[01242]
@ R13                                        // ROM[01243]
M = D                                        // ROM[01244]
// ---------------------------
// Push RA
@ Map.draw:94                                // ROM[01245]
D = A                                        // ROM[01246]
// ---------------------------
// push D
@ SP                                         // ROM[01247]
AM = M+1                                     // ROM[01248]
A = A-1                                      // ROM[01249]
M = D                                        // ROM[01250]
// ---------------------------
// call
@ Map.draw:95                                // ROM[01251]
D = A                                        // ROM[01252]
@ R15                                        // ROM[01253]
M = D                                        // ROM[01254]
@ :call                                      // ROM[01255]
0; JMP                                       // ROM[01256]
( Map.draw:95)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01257]
0; JMP                                       // ROM[01258]
// ---------------------------
// ( RA )
( Map.draw:94) 

// -------------------------------------
// CALL: Output.printString(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[01259]
D = A                                        // ROM[01260]
@ R13                                        // ROM[01261]
M = D                                        // ROM[01262]
// ---------------------------
// Push RA
@ Map.draw:96                                // ROM[01263]
D = A                                        // ROM[01264]
// ---------------------------
// push D
@ SP                                         // ROM[01265]
AM = M+1                                     // ROM[01266]
A = A-1                                      // ROM[01267]
M = D                                        // ROM[01268]
// ---------------------------
// call
@ Map.draw:97                                // ROM[01269]
D = A                                        // ROM[01270]
@ R15                                        // ROM[01271]
M = D                                        // ROM[01272]
@ :call                                      // ROM[01273]
0; JMP                                       // ROM[01274]
( Map.draw:97)
// ---------------------------
// goto functionName
@ Output.printString                         // ROM[01275]
0; JMP                                       // ROM[01276]
// ---------------------------
// ( RA )
( Map.draw:96) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[01277]
AM = M-1                                     // ROM[01278]
D = M                                        // ROM[01279]
// ---------------------------
@ 5                                          // ROM[01280]
M = D                                        // ROM[01281]

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[01282]
D = A                                        // ROM[01283]
@ R13                                        // ROM[01284]
M = D                                        // ROM[01285]
// ---------------------------
// call
@ Map.draw:98                                // ROM[01286]
D = A                                        // ROM[01287]
@ R15                                        // ROM[01288]
M = D                                        // ROM[01289]
@ :push_local                                // ROM[01290]
0; JMP                                       // ROM[01291]
( Map.draw:98)

// -------------------------------------
// PUSH: <constant, 1>
// -------------------------------------
@ 1                                          // ROM[01292]
D = A                                        // ROM[01293]
// ---------------------------
// push D
@ SP                                         // ROM[01294]
AM = M+1                                     // ROM[01295]
A = A-1                                      // ROM[01296]
M = D                                        // ROM[01297]

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Map.draw:99                                // ROM[01298]
D = A                                        // ROM[01299]
@ R15                                        // ROM[01300]
M = D                                        // ROM[01301]
@ :add                                       // ROM[01302]
0; JMP                                       // ROM[01303]
( Map.draw:99)

// -------------------------------------
// POP: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[01304]
D = A                                        // ROM[01305]
@ R13                                        // ROM[01306]
M = D                                        // ROM[01307]
// ---------------------------
// call
@ Map.draw:100                               // ROM[01308]
D = A                                        // ROM[01309]
@ R15                                        // ROM[01310]
M = D                                        // ROM[01311]
@ :pop_local                                 // ROM[01312]
0; JMP                                       // ROM[01313]
( Map.draw:100)

// -------------------------------------
// GOTO: LOOP6
// -------------------------------------
@ Map.draw$LOOP6                             // ROM[01314]
0; JMP                                       // ROM[01315]

// -------------------------------------
// LABEL: END6
// -------------------------------------
( Map.draw$END6 )

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[01316]
D = A                                        // ROM[01317]
@ R13                                        // ROM[01318]
M = D                                        // ROM[01319]
// ---------------------------
// call
@ Map.draw:101                               // ROM[01320]
D = A                                        // ROM[01321]
@ R15                                        // ROM[01322]
M = D                                        // ROM[01323]
@ :push_local                                // ROM[01324]
0; JMP                                       // ROM[01325]
( Map.draw:101)

// -------------------------------------
// PUSH: <constant, 1>
// -------------------------------------
@ 1                                          // ROM[01326]
D = A                                        // ROM[01327]
// ---------------------------
// push D
@ SP                                         // ROM[01328]
AM = M+1                                     // ROM[01329]
A = A-1                                      // ROM[01330]
M = D                                        // ROM[01331]

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Map.draw:102                               // ROM[01332]
D = A                                        // ROM[01333]
@ R15                                        // ROM[01334]
M = D                                        // ROM[01335]
@ :add                                       // ROM[01336]
0; JMP                                       // ROM[01337]
( Map.draw:102)

// -------------------------------------
// POP: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[01338]
D = A                                        // ROM[01339]
@ R13                                        // ROM[01340]
M = D                                        // ROM[01341]
// ---------------------------
// call
@ Map.draw:103                               // ROM[01342]
D = A                                        // ROM[01343]
@ R15                                        // ROM[01344]
M = D                                        // ROM[01345]
@ :pop_local                                 // ROM[01346]
0; JMP                                       // ROM[01347]
( Map.draw:103)

// -------------------------------------
// GOTO: LOOP5
// -------------------------------------
@ Map.draw$LOOP5                             // ROM[01348]
0; JMP                                       // ROM[01349]

// -------------------------------------
// LABEL: END5
// -------------------------------------
( Map.draw$END5 )

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[01350]
D = A                                        // ROM[01351]
// ---------------------------
// push D
@ SP                                         // ROM[01352]
AM = M+1                                     // ROM[01353]
A = A-1                                      // ROM[01354]
M = D                                        // ROM[01355]

// -------------------------------------
// RETURN: 
// -------------------------------------
// ---------------------------
// call
@ Map.draw:104                               // ROM[01356]
D = A                                        // ROM[01357]
@ R15                                        // ROM[01358]
M = D                                        // ROM[01359]
@ :return                                    // ROM[01360]
0; JMP                                       // ROM[01361]
( Map.draw:104)

// *********************************************************
// Translation of: ./Main.vm
// *********************************************************


// =========================================================
// FUNCTION: Main.main(3 locals)
// =========================================================

( Main.main )
// ---------------------------
// clear local segment
D = 0                                        // ROM[01362]
// ---------------------------
// push D
@ SP                                         // ROM[01363]
AM = M+1                                     // ROM[01364]
A = A-1                                      // ROM[01365]
M = D                                        // ROM[01366]
// ---------------------------
// push D
@ SP                                         // ROM[01367]
AM = M+1                                     // ROM[01368]
A = A-1                                      // ROM[01369]
M = D                                        // ROM[01370]
// ---------------------------
// push D
@ SP                                         // ROM[01371]
AM = M+1                                     // ROM[01372]
A = A-1                                      // ROM[01373]
M = D                                        // ROM[01374]

// -------------------------------------
// PUSH: <constant, 16383>
// -------------------------------------
@ 16383                                      // ROM[01375]
D = A                                        // ROM[01376]
// ---------------------------
// push D
@ SP                                         // ROM[01377]
AM = M+1                                     // ROM[01378]
A = A-1                                      // ROM[01379]
M = D                                        // ROM[01380]

// -------------------------------------
// POP: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[01381]
D = A                                        // ROM[01382]
@ R13                                        // ROM[01383]
M = D                                        // ROM[01384]
// ---------------------------
// call
@ Main.main:0                                // ROM[01385]
D = A                                        // ROM[01386]
@ R15                                        // ROM[01387]
M = D                                        // ROM[01388]
@ :pop_local                                 // ROM[01389]
0; JMP                                       // ROM[01390]
( Main.main:0)

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[01391]
D = A                                        // ROM[01392]
// ---------------------------
// push D
@ SP                                         // ROM[01393]
AM = M+1                                     // ROM[01394]
A = A-1                                      // ROM[01395]
M = D                                        // ROM[01396]

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[01397]
D = A                                        // ROM[01398]
@ R13                                        // ROM[01399]
M = D                                        // ROM[01400]
// ---------------------------
// call
@ Main.main:1                                // ROM[01401]
D = A                                        // ROM[01402]
@ R15                                        // ROM[01403]
M = D                                        // ROM[01404]
@ :push_local                                // ROM[01405]
0; JMP                                       // ROM[01406]
( Main.main:1)

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Main.main:2                                // ROM[01407]
D = A                                        // ROM[01408]
@ R15                                        // ROM[01409]
M = D                                        // ROM[01410]
@ :add                                       // ROM[01411]
0; JMP                                       // ROM[01412]
( Main.main:2)

// -------------------------------------
// PUSH: <constant, 2424>
// -------------------------------------
@ 2424                                       // ROM[01413]
D = A                                        // ROM[01414]
// ---------------------------
// push D
@ SP                                         // ROM[01415]
AM = M+1                                     // ROM[01416]
A = A-1                                      // ROM[01417]
M = D                                        // ROM[01418]

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[01419]
AM = M-1                                     // ROM[01420]
D = M                                        // ROM[01421]
// ---------------------------
@ 5                                          // ROM[01422]
M = D                                        // ROM[01423]

// -------------------------------------
// POP: <pointer, 1>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[01424]
AM = M-1                                     // ROM[01425]
D = M                                        // ROM[01426]
// ---------------------------
@ 4                                          // ROM[01427]
M = D                                        // ROM[01428]

// -------------------------------------
// PUSH: <temp, 0>
// -------------------------------------
@ 5                                          // ROM[01429]
D = M                                        // ROM[01430]
// ---------------------------
// push D
@ SP                                         // ROM[01431]
AM = M+1                                     // ROM[01432]
A = A-1                                      // ROM[01433]
M = D                                        // ROM[01434]

// -------------------------------------
// POP: <that, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[01435]
D = A                                        // ROM[01436]
@ R13                                        // ROM[01437]
M = D                                        // ROM[01438]
// ---------------------------
// call
@ Main.main:3                                // ROM[01439]
D = A                                        // ROM[01440]
@ R15                                        // ROM[01441]
M = D                                        // ROM[01442]
@ :pop_that                                  // ROM[01443]
0; JMP                                       // ROM[01444]
( Main.main:3)

// -------------------------------------
// PUSH: <constant, 28>
// -------------------------------------
@ 28                                         // ROM[01445]
D = A                                        // ROM[01446]
// ---------------------------
// push D
@ SP                                         // ROM[01447]
AM = M+1                                     // ROM[01448]
A = A-1                                      // ROM[01449]
M = D                                        // ROM[01450]

// -------------------------------------
// CALL: String.new(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[01451]
D = A                                        // ROM[01452]
@ R13                                        // ROM[01453]
M = D                                        // ROM[01454]
// ---------------------------
// Push RA
@ Main.main:4                                // ROM[01455]
D = A                                        // ROM[01456]
// ---------------------------
// push D
@ SP                                         // ROM[01457]
AM = M+1                                     // ROM[01458]
A = A-1                                      // ROM[01459]
M = D                                        // ROM[01460]
// ---------------------------
// call
@ Main.main:5                                // ROM[01461]
D = A                                        // ROM[01462]
@ R15                                        // ROM[01463]
M = D                                        // ROM[01464]
@ :call                                      // ROM[01465]
0; JMP                                       // ROM[01466]
( Main.main:5)
// ---------------------------
// goto functionName
@ String.new                                 // ROM[01467]
0; JMP                                       // ROM[01468]
// ---------------------------
// ( RA )
( Main.main:4) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[01469]
D = A                                        // ROM[01470]
// ---------------------------
// push D
@ SP                                         // ROM[01471]
AM = M+1                                     // ROM[01472]
A = A-1                                      // ROM[01473]
M = D                                        // ROM[01474]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01475]
D = A                                        // ROM[01476]
@ R13                                        // ROM[01477]
M = D                                        // ROM[01478]
// ---------------------------
// Push RA
@ Main.main:6                                // ROM[01479]
D = A                                        // ROM[01480]
// ---------------------------
// push D
@ SP                                         // ROM[01481]
AM = M+1                                     // ROM[01482]
A = A-1                                      // ROM[01483]
M = D                                        // ROM[01484]
// ---------------------------
// call
@ Main.main:7                                // ROM[01485]
D = A                                        // ROM[01486]
@ R15                                        // ROM[01487]
M = D                                        // ROM[01488]
@ :call                                      // ROM[01489]
0; JMP                                       // ROM[01490]
( Main.main:7)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01491]
0; JMP                                       // ROM[01492]
// ---------------------------
// ( RA )
( Main.main:6) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[01493]
D = A                                        // ROM[01494]
// ---------------------------
// push D
@ SP                                         // ROM[01495]
AM = M+1                                     // ROM[01496]
A = A-1                                      // ROM[01497]
M = D                                        // ROM[01498]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01499]
D = A                                        // ROM[01500]
@ R13                                        // ROM[01501]
M = D                                        // ROM[01502]
// ---------------------------
// Push RA
@ Main.main:8                                // ROM[01503]
D = A                                        // ROM[01504]
// ---------------------------
// push D
@ SP                                         // ROM[01505]
AM = M+1                                     // ROM[01506]
A = A-1                                      // ROM[01507]
M = D                                        // ROM[01508]
// ---------------------------
// call
@ Main.main:9                                // ROM[01509]
D = A                                        // ROM[01510]
@ R15                                        // ROM[01511]
M = D                                        // ROM[01512]
@ :call                                      // ROM[01513]
0; JMP                                       // ROM[01514]
( Main.main:9)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01515]
0; JMP                                       // ROM[01516]
// ---------------------------
// ( RA )
( Main.main:8) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[01517]
D = A                                        // ROM[01518]
// ---------------------------
// push D
@ SP                                         // ROM[01519]
AM = M+1                                     // ROM[01520]
A = A-1                                      // ROM[01521]
M = D                                        // ROM[01522]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01523]
D = A                                        // ROM[01524]
@ R13                                        // ROM[01525]
M = D                                        // ROM[01526]
// ---------------------------
// Push RA
@ Main.main:10                               // ROM[01527]
D = A                                        // ROM[01528]
// ---------------------------
// push D
@ SP                                         // ROM[01529]
AM = M+1                                     // ROM[01530]
A = A-1                                      // ROM[01531]
M = D                                        // ROM[01532]
// ---------------------------
// call
@ Main.main:11                               // ROM[01533]
D = A                                        // ROM[01534]
@ R15                                        // ROM[01535]
M = D                                        // ROM[01536]
@ :call                                      // ROM[01537]
0; JMP                                       // ROM[01538]
( Main.main:11)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01539]
0; JMP                                       // ROM[01540]
// ---------------------------
// ( RA )
( Main.main:10) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[01541]
D = A                                        // ROM[01542]
// ---------------------------
// push D
@ SP                                         // ROM[01543]
AM = M+1                                     // ROM[01544]
A = A-1                                      // ROM[01545]
M = D                                        // ROM[01546]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01547]
D = A                                        // ROM[01548]
@ R13                                        // ROM[01549]
M = D                                        // ROM[01550]
// ---------------------------
// Push RA
@ Main.main:12                               // ROM[01551]
D = A                                        // ROM[01552]
// ---------------------------
// push D
@ SP                                         // ROM[01553]
AM = M+1                                     // ROM[01554]
A = A-1                                      // ROM[01555]
M = D                                        // ROM[01556]
// ---------------------------
// call
@ Main.main:13                               // ROM[01557]
D = A                                        // ROM[01558]
@ R15                                        // ROM[01559]
M = D                                        // ROM[01560]
@ :call                                      // ROM[01561]
0; JMP                                       // ROM[01562]
( Main.main:13)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01563]
0; JMP                                       // ROM[01564]
// ---------------------------
// ( RA )
( Main.main:12) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[01565]
D = A                                        // ROM[01566]
// ---------------------------
// push D
@ SP                                         // ROM[01567]
AM = M+1                                     // ROM[01568]
A = A-1                                      // ROM[01569]
M = D                                        // ROM[01570]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01571]
D = A                                        // ROM[01572]
@ R13                                        // ROM[01573]
M = D                                        // ROM[01574]
// ---------------------------
// Push RA
@ Main.main:14                               // ROM[01575]
D = A                                        // ROM[01576]
// ---------------------------
// push D
@ SP                                         // ROM[01577]
AM = M+1                                     // ROM[01578]
A = A-1                                      // ROM[01579]
M = D                                        // ROM[01580]
// ---------------------------
// call
@ Main.main:15                               // ROM[01581]
D = A                                        // ROM[01582]
@ R15                                        // ROM[01583]
M = D                                        // ROM[01584]
@ :call                                      // ROM[01585]
0; JMP                                       // ROM[01586]
( Main.main:15)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01587]
0; JMP                                       // ROM[01588]
// ---------------------------
// ( RA )
( Main.main:14) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[01589]
D = A                                        // ROM[01590]
// ---------------------------
// push D
@ SP                                         // ROM[01591]
AM = M+1                                     // ROM[01592]
A = A-1                                      // ROM[01593]
M = D                                        // ROM[01594]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01595]
D = A                                        // ROM[01596]
@ R13                                        // ROM[01597]
M = D                                        // ROM[01598]
// ---------------------------
// Push RA
@ Main.main:16                               // ROM[01599]
D = A                                        // ROM[01600]
// ---------------------------
// push D
@ SP                                         // ROM[01601]
AM = M+1                                     // ROM[01602]
A = A-1                                      // ROM[01603]
M = D                                        // ROM[01604]
// ---------------------------
// call
@ Main.main:17                               // ROM[01605]
D = A                                        // ROM[01606]
@ R15                                        // ROM[01607]
M = D                                        // ROM[01608]
@ :call                                      // ROM[01609]
0; JMP                                       // ROM[01610]
( Main.main:17)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01611]
0; JMP                                       // ROM[01612]
// ---------------------------
// ( RA )
( Main.main:16) 

// -------------------------------------
// PUSH: <constant, 32>
// -------------------------------------
@ 32                                         // ROM[01613]
D = A                                        // ROM[01614]
// ---------------------------
// push D
@ SP                                         // ROM[01615]
AM = M+1                                     // ROM[01616]
A = A-1                                      // ROM[01617]
M = D                                        // ROM[01618]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01619]
D = A                                        // ROM[01620]
@ R13                                        // ROM[01621]
M = D                                        // ROM[01622]
// ---------------------------
// Push RA
@ Main.main:18                               // ROM[01623]
D = A                                        // ROM[01624]
// ---------------------------
// push D
@ SP                                         // ROM[01625]
AM = M+1                                     // ROM[01626]
A = A-1                                      // ROM[01627]
M = D                                        // ROM[01628]
// ---------------------------
// call
@ Main.main:19                               // ROM[01629]
D = A                                        // ROM[01630]
@ R15                                        // ROM[01631]
M = D                                        // ROM[01632]
@ :call                                      // ROM[01633]
0; JMP                                       // ROM[01634]
( Main.main:19)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01635]
0; JMP                                       // ROM[01636]
// ---------------------------
// ( RA )
( Main.main:18) 

// -------------------------------------
// PUSH: <constant, 82>
// -------------------------------------
@ 82                                         // ROM[01637]
D = A                                        // ROM[01638]
// ---------------------------
// push D
@ SP                                         // ROM[01639]
AM = M+1                                     // ROM[01640]
A = A-1                                      // ROM[01641]
M = D                                        // ROM[01642]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01643]
D = A                                        // ROM[01644]
@ R13                                        // ROM[01645]
M = D                                        // ROM[01646]
// ---------------------------
// Push RA
@ Main.main:20                               // ROM[01647]
D = A                                        // ROM[01648]
// ---------------------------
// push D
@ SP                                         // ROM[01649]
AM = M+1                                     // ROM[01650]
A = A-1                                      // ROM[01651]
M = D                                        // ROM[01652]
// ---------------------------
// call
@ Main.main:21                               // ROM[01653]
D = A                                        // ROM[01654]
@ R15                                        // ROM[01655]
M = D                                        // ROM[01656]
@ :call                                      // ROM[01657]
0; JMP                                       // ROM[01658]
( Main.main:21)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01659]
0; JMP                                       // ROM[01660]
// ---------------------------
// ( RA )
( Main.main:20) 

// -------------------------------------
// PUSH: <constant, 117>
// -------------------------------------
@ 117                                        // ROM[01661]
D = A                                        // ROM[01662]
// ---------------------------
// push D
@ SP                                         // ROM[01663]
AM = M+1                                     // ROM[01664]
A = A-1                                      // ROM[01665]
M = D                                        // ROM[01666]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01667]
D = A                                        // ROM[01668]
@ R13                                        // ROM[01669]
M = D                                        // ROM[01670]
// ---------------------------
// Push RA
@ Main.main:22                               // ROM[01671]
D = A                                        // ROM[01672]
// ---------------------------
// push D
@ SP                                         // ROM[01673]
AM = M+1                                     // ROM[01674]
A = A-1                                      // ROM[01675]
M = D                                        // ROM[01676]
// ---------------------------
// call
@ Main.main:23                               // ROM[01677]
D = A                                        // ROM[01678]
@ R15                                        // ROM[01679]
M = D                                        // ROM[01680]
@ :call                                      // ROM[01681]
0; JMP                                       // ROM[01682]
( Main.main:23)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01683]
0; JMP                                       // ROM[01684]
// ---------------------------
// ( RA )
( Main.main:22) 

// -------------------------------------
// PUSH: <constant, 110>
// -------------------------------------
@ 110                                        // ROM[01685]
D = A                                        // ROM[01686]
// ---------------------------
// push D
@ SP                                         // ROM[01687]
AM = M+1                                     // ROM[01688]
A = A-1                                      // ROM[01689]
M = D                                        // ROM[01690]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01691]
D = A                                        // ROM[01692]
@ R13                                        // ROM[01693]
M = D                                        // ROM[01694]
// ---------------------------
// Push RA
@ Main.main:24                               // ROM[01695]
D = A                                        // ROM[01696]
// ---------------------------
// push D
@ SP                                         // ROM[01697]
AM = M+1                                     // ROM[01698]
A = A-1                                      // ROM[01699]
M = D                                        // ROM[01700]
// ---------------------------
// call
@ Main.main:25                               // ROM[01701]
D = A                                        // ROM[01702]
@ R15                                        // ROM[01703]
M = D                                        // ROM[01704]
@ :call                                      // ROM[01705]
0; JMP                                       // ROM[01706]
( Main.main:25)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01707]
0; JMP                                       // ROM[01708]
// ---------------------------
// ( RA )
( Main.main:24) 

// -------------------------------------
// PUSH: <constant, 32>
// -------------------------------------
@ 32                                         // ROM[01709]
D = A                                        // ROM[01710]
// ---------------------------
// push D
@ SP                                         // ROM[01711]
AM = M+1                                     // ROM[01712]
A = A-1                                      // ROM[01713]
M = D                                        // ROM[01714]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01715]
D = A                                        // ROM[01716]
@ R13                                        // ROM[01717]
M = D                                        // ROM[01718]
// ---------------------------
// Push RA
@ Main.main:26                               // ROM[01719]
D = A                                        // ROM[01720]
// ---------------------------
// push D
@ SP                                         // ROM[01721]
AM = M+1                                     // ROM[01722]
A = A-1                                      // ROM[01723]
M = D                                        // ROM[01724]
// ---------------------------
// call
@ Main.main:27                               // ROM[01725]
D = A                                        // ROM[01726]
@ R15                                        // ROM[01727]
M = D                                        // ROM[01728]
@ :call                                      // ROM[01729]
0; JMP                                       // ROM[01730]
( Main.main:27)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01731]
0; JMP                                       // ROM[01732]
// ---------------------------
// ( RA )
( Main.main:26) 

// -------------------------------------
// PUSH: <constant, 99>
// -------------------------------------
@ 99                                         // ROM[01733]
D = A                                        // ROM[01734]
// ---------------------------
// push D
@ SP                                         // ROM[01735]
AM = M+1                                     // ROM[01736]
A = A-1                                      // ROM[01737]
M = D                                        // ROM[01738]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01739]
D = A                                        // ROM[01740]
@ R13                                        // ROM[01741]
M = D                                        // ROM[01742]
// ---------------------------
// Push RA
@ Main.main:28                               // ROM[01743]
D = A                                        // ROM[01744]
// ---------------------------
// push D
@ SP                                         // ROM[01745]
AM = M+1                                     // ROM[01746]
A = A-1                                      // ROM[01747]
M = D                                        // ROM[01748]
// ---------------------------
// call
@ Main.main:29                               // ROM[01749]
D = A                                        // ROM[01750]
@ R15                                        // ROM[01751]
M = D                                        // ROM[01752]
@ :call                                      // ROM[01753]
0; JMP                                       // ROM[01754]
( Main.main:29)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01755]
0; JMP                                       // ROM[01756]
// ---------------------------
// ( RA )
( Main.main:28) 

// -------------------------------------
// PUSH: <constant, 111>
// -------------------------------------
@ 111                                        // ROM[01757]
D = A                                        // ROM[01758]
// ---------------------------
// push D
@ SP                                         // ROM[01759]
AM = M+1                                     // ROM[01760]
A = A-1                                      // ROM[01761]
M = D                                        // ROM[01762]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01763]
D = A                                        // ROM[01764]
@ R13                                        // ROM[01765]
M = D                                        // ROM[01766]
// ---------------------------
// Push RA
@ Main.main:30                               // ROM[01767]
D = A                                        // ROM[01768]
// ---------------------------
// push D
@ SP                                         // ROM[01769]
AM = M+1                                     // ROM[01770]
A = A-1                                      // ROM[01771]
M = D                                        // ROM[01772]
// ---------------------------
// call
@ Main.main:31                               // ROM[01773]
D = A                                        // ROM[01774]
@ R15                                        // ROM[01775]
M = D                                        // ROM[01776]
@ :call                                      // ROM[01777]
0; JMP                                       // ROM[01778]
( Main.main:31)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01779]
0; JMP                                       // ROM[01780]
// ---------------------------
// ( RA )
( Main.main:30) 

// -------------------------------------
// PUSH: <constant, 109>
// -------------------------------------
@ 109                                        // ROM[01781]
D = A                                        // ROM[01782]
// ---------------------------
// push D
@ SP                                         // ROM[01783]
AM = M+1                                     // ROM[01784]
A = A-1                                      // ROM[01785]
M = D                                        // ROM[01786]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01787]
D = A                                        // ROM[01788]
@ R13                                        // ROM[01789]
M = D                                        // ROM[01790]
// ---------------------------
// Push RA
@ Main.main:32                               // ROM[01791]
D = A                                        // ROM[01792]
// ---------------------------
// push D
@ SP                                         // ROM[01793]
AM = M+1                                     // ROM[01794]
A = A-1                                      // ROM[01795]
M = D                                        // ROM[01796]
// ---------------------------
// call
@ Main.main:33                               // ROM[01797]
D = A                                        // ROM[01798]
@ R15                                        // ROM[01799]
M = D                                        // ROM[01800]
@ :call                                      // ROM[01801]
0; JMP                                       // ROM[01802]
( Main.main:33)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01803]
0; JMP                                       // ROM[01804]
// ---------------------------
// ( RA )
( Main.main:32) 

// -------------------------------------
// PUSH: <constant, 109>
// -------------------------------------
@ 109                                        // ROM[01805]
D = A                                        // ROM[01806]
// ---------------------------
// push D
@ SP                                         // ROM[01807]
AM = M+1                                     // ROM[01808]
A = A-1                                      // ROM[01809]
M = D                                        // ROM[01810]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01811]
D = A                                        // ROM[01812]
@ R13                                        // ROM[01813]
M = D                                        // ROM[01814]
// ---------------------------
// Push RA
@ Main.main:34                               // ROM[01815]
D = A                                        // ROM[01816]
// ---------------------------
// push D
@ SP                                         // ROM[01817]
AM = M+1                                     // ROM[01818]
A = A-1                                      // ROM[01819]
M = D                                        // ROM[01820]
// ---------------------------
// call
@ Main.main:35                               // ROM[01821]
D = A                                        // ROM[01822]
@ R15                                        // ROM[01823]
M = D                                        // ROM[01824]
@ :call                                      // ROM[01825]
0; JMP                                       // ROM[01826]
( Main.main:35)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01827]
0; JMP                                       // ROM[01828]
// ---------------------------
// ( RA )
( Main.main:34) 

// -------------------------------------
// PUSH: <constant, 101>
// -------------------------------------
@ 101                                        // ROM[01829]
D = A                                        // ROM[01830]
// ---------------------------
// push D
@ SP                                         // ROM[01831]
AM = M+1                                     // ROM[01832]
A = A-1                                      // ROM[01833]
M = D                                        // ROM[01834]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01835]
D = A                                        // ROM[01836]
@ R13                                        // ROM[01837]
M = D                                        // ROM[01838]
// ---------------------------
// Push RA
@ Main.main:36                               // ROM[01839]
D = A                                        // ROM[01840]
// ---------------------------
// push D
@ SP                                         // ROM[01841]
AM = M+1                                     // ROM[01842]
A = A-1                                      // ROM[01843]
M = D                                        // ROM[01844]
// ---------------------------
// call
@ Main.main:37                               // ROM[01845]
D = A                                        // ROM[01846]
@ R15                                        // ROM[01847]
M = D                                        // ROM[01848]
@ :call                                      // ROM[01849]
0; JMP                                       // ROM[01850]
( Main.main:37)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01851]
0; JMP                                       // ROM[01852]
// ---------------------------
// ( RA )
( Main.main:36) 

// -------------------------------------
// PUSH: <constant, 110>
// -------------------------------------
@ 110                                        // ROM[01853]
D = A                                        // ROM[01854]
// ---------------------------
// push D
@ SP                                         // ROM[01855]
AM = M+1                                     // ROM[01856]
A = A-1                                      // ROM[01857]
M = D                                        // ROM[01858]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01859]
D = A                                        // ROM[01860]
@ R13                                        // ROM[01861]
M = D                                        // ROM[01862]
// ---------------------------
// Push RA
@ Main.main:38                               // ROM[01863]
D = A                                        // ROM[01864]
// ---------------------------
// push D
@ SP                                         // ROM[01865]
AM = M+1                                     // ROM[01866]
A = A-1                                      // ROM[01867]
M = D                                        // ROM[01868]
// ---------------------------
// call
@ Main.main:39                               // ROM[01869]
D = A                                        // ROM[01870]
@ R15                                        // ROM[01871]
M = D                                        // ROM[01872]
@ :call                                      // ROM[01873]
0; JMP                                       // ROM[01874]
( Main.main:39)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01875]
0; JMP                                       // ROM[01876]
// ---------------------------
// ( RA )
( Main.main:38) 

// -------------------------------------
// PUSH: <constant, 99>
// -------------------------------------
@ 99                                         // ROM[01877]
D = A                                        // ROM[01878]
// ---------------------------
// push D
@ SP                                         // ROM[01879]
AM = M+1                                     // ROM[01880]
A = A-1                                      // ROM[01881]
M = D                                        // ROM[01882]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01883]
D = A                                        // ROM[01884]
@ R13                                        // ROM[01885]
M = D                                        // ROM[01886]
// ---------------------------
// Push RA
@ Main.main:40                               // ROM[01887]
D = A                                        // ROM[01888]
// ---------------------------
// push D
@ SP                                         // ROM[01889]
AM = M+1                                     // ROM[01890]
A = A-1                                      // ROM[01891]
M = D                                        // ROM[01892]
// ---------------------------
// call
@ Main.main:41                               // ROM[01893]
D = A                                        // ROM[01894]
@ R15                                        // ROM[01895]
M = D                                        // ROM[01896]
@ :call                                      // ROM[01897]
0; JMP                                       // ROM[01898]
( Main.main:41)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01899]
0; JMP                                       // ROM[01900]
// ---------------------------
// ( RA )
( Main.main:40) 

// -------------------------------------
// PUSH: <constant, 105>
// -------------------------------------
@ 105                                        // ROM[01901]
D = A                                        // ROM[01902]
// ---------------------------
// push D
@ SP                                         // ROM[01903]
AM = M+1                                     // ROM[01904]
A = A-1                                      // ROM[01905]
M = D                                        // ROM[01906]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01907]
D = A                                        // ROM[01908]
@ R13                                        // ROM[01909]
M = D                                        // ROM[01910]
// ---------------------------
// Push RA
@ Main.main:42                               // ROM[01911]
D = A                                        // ROM[01912]
// ---------------------------
// push D
@ SP                                         // ROM[01913]
AM = M+1                                     // ROM[01914]
A = A-1                                      // ROM[01915]
M = D                                        // ROM[01916]
// ---------------------------
// call
@ Main.main:43                               // ROM[01917]
D = A                                        // ROM[01918]
@ R15                                        // ROM[01919]
M = D                                        // ROM[01920]
@ :call                                      // ROM[01921]
0; JMP                                       // ROM[01922]
( Main.main:43)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01923]
0; JMP                                       // ROM[01924]
// ---------------------------
// ( RA )
( Main.main:42) 

// -------------------------------------
// PUSH: <constant, 110>
// -------------------------------------
@ 110                                        // ROM[01925]
D = A                                        // ROM[01926]
// ---------------------------
// push D
@ SP                                         // ROM[01927]
AM = M+1                                     // ROM[01928]
A = A-1                                      // ROM[01929]
M = D                                        // ROM[01930]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01931]
D = A                                        // ROM[01932]
@ R13                                        // ROM[01933]
M = D                                        // ROM[01934]
// ---------------------------
// Push RA
@ Main.main:44                               // ROM[01935]
D = A                                        // ROM[01936]
// ---------------------------
// push D
@ SP                                         // ROM[01937]
AM = M+1                                     // ROM[01938]
A = A-1                                      // ROM[01939]
M = D                                        // ROM[01940]
// ---------------------------
// call
@ Main.main:45                               // ROM[01941]
D = A                                        // ROM[01942]
@ R15                                        // ROM[01943]
M = D                                        // ROM[01944]
@ :call                                      // ROM[01945]
0; JMP                                       // ROM[01946]
( Main.main:45)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01947]
0; JMP                                       // ROM[01948]
// ---------------------------
// ( RA )
( Main.main:44) 

// -------------------------------------
// PUSH: <constant, 103>
// -------------------------------------
@ 103                                        // ROM[01949]
D = A                                        // ROM[01950]
// ---------------------------
// push D
@ SP                                         // ROM[01951]
AM = M+1                                     // ROM[01952]
A = A-1                                      // ROM[01953]
M = D                                        // ROM[01954]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01955]
D = A                                        // ROM[01956]
@ R13                                        // ROM[01957]
M = D                                        // ROM[01958]
// ---------------------------
// Push RA
@ Main.main:46                               // ROM[01959]
D = A                                        // ROM[01960]
// ---------------------------
// push D
@ SP                                         // ROM[01961]
AM = M+1                                     // ROM[01962]
A = A-1                                      // ROM[01963]
M = D                                        // ROM[01964]
// ---------------------------
// call
@ Main.main:47                               // ROM[01965]
D = A                                        // ROM[01966]
@ R15                                        // ROM[01967]
M = D                                        // ROM[01968]
@ :call                                      // ROM[01969]
0; JMP                                       // ROM[01970]
( Main.main:47)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01971]
0; JMP                                       // ROM[01972]
// ---------------------------
// ( RA )
( Main.main:46) 

// -------------------------------------
// PUSH: <constant, 32>
// -------------------------------------
@ 32                                         // ROM[01973]
D = A                                        // ROM[01974]
// ---------------------------
// push D
@ SP                                         // ROM[01975]
AM = M+1                                     // ROM[01976]
A = A-1                                      // ROM[01977]
M = D                                        // ROM[01978]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[01979]
D = A                                        // ROM[01980]
@ R13                                        // ROM[01981]
M = D                                        // ROM[01982]
// ---------------------------
// Push RA
@ Main.main:48                               // ROM[01983]
D = A                                        // ROM[01984]
// ---------------------------
// push D
@ SP                                         // ROM[01985]
AM = M+1                                     // ROM[01986]
A = A-1                                      // ROM[01987]
M = D                                        // ROM[01988]
// ---------------------------
// call
@ Main.main:49                               // ROM[01989]
D = A                                        // ROM[01990]
@ R15                                        // ROM[01991]
M = D                                        // ROM[01992]
@ :call                                      // ROM[01993]
0; JMP                                       // ROM[01994]
( Main.main:49)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[01995]
0; JMP                                       // ROM[01996]
// ---------------------------
// ( RA )
( Main.main:48) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[01997]
D = A                                        // ROM[01998]
// ---------------------------
// push D
@ SP                                         // ROM[01999]
AM = M+1                                     // ROM[02000]
A = A-1                                      // ROM[02001]
M = D                                        // ROM[02002]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02003]
D = A                                        // ROM[02004]
@ R13                                        // ROM[02005]
M = D                                        // ROM[02006]
// ---------------------------
// Push RA
@ Main.main:50                               // ROM[02007]
D = A                                        // ROM[02008]
// ---------------------------
// push D
@ SP                                         // ROM[02009]
AM = M+1                                     // ROM[02010]
A = A-1                                      // ROM[02011]
M = D                                        // ROM[02012]
// ---------------------------
// call
@ Main.main:51                               // ROM[02013]
D = A                                        // ROM[02014]
@ R15                                        // ROM[02015]
M = D                                        // ROM[02016]
@ :call                                      // ROM[02017]
0; JMP                                       // ROM[02018]
( Main.main:51)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02019]
0; JMP                                       // ROM[02020]
// ---------------------------
// ( RA )
( Main.main:50) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[02021]
D = A                                        // ROM[02022]
// ---------------------------
// push D
@ SP                                         // ROM[02023]
AM = M+1                                     // ROM[02024]
A = A-1                                      // ROM[02025]
M = D                                        // ROM[02026]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02027]
D = A                                        // ROM[02028]
@ R13                                        // ROM[02029]
M = D                                        // ROM[02030]
// ---------------------------
// Push RA
@ Main.main:52                               // ROM[02031]
D = A                                        // ROM[02032]
// ---------------------------
// push D
@ SP                                         // ROM[02033]
AM = M+1                                     // ROM[02034]
A = A-1                                      // ROM[02035]
M = D                                        // ROM[02036]
// ---------------------------
// call
@ Main.main:53                               // ROM[02037]
D = A                                        // ROM[02038]
@ R15                                        // ROM[02039]
M = D                                        // ROM[02040]
@ :call                                      // ROM[02041]
0; JMP                                       // ROM[02042]
( Main.main:53)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02043]
0; JMP                                       // ROM[02044]
// ---------------------------
// ( RA )
( Main.main:52) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[02045]
D = A                                        // ROM[02046]
// ---------------------------
// push D
@ SP                                         // ROM[02047]
AM = M+1                                     // ROM[02048]
A = A-1                                      // ROM[02049]
M = D                                        // ROM[02050]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02051]
D = A                                        // ROM[02052]
@ R13                                        // ROM[02053]
M = D                                        // ROM[02054]
// ---------------------------
// Push RA
@ Main.main:54                               // ROM[02055]
D = A                                        // ROM[02056]
// ---------------------------
// push D
@ SP                                         // ROM[02057]
AM = M+1                                     // ROM[02058]
A = A-1                                      // ROM[02059]
M = D                                        // ROM[02060]
// ---------------------------
// call
@ Main.main:55                               // ROM[02061]
D = A                                        // ROM[02062]
@ R15                                        // ROM[02063]
M = D                                        // ROM[02064]
@ :call                                      // ROM[02065]
0; JMP                                       // ROM[02066]
( Main.main:55)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02067]
0; JMP                                       // ROM[02068]
// ---------------------------
// ( RA )
( Main.main:54) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[02069]
D = A                                        // ROM[02070]
// ---------------------------
// push D
@ SP                                         // ROM[02071]
AM = M+1                                     // ROM[02072]
A = A-1                                      // ROM[02073]
M = D                                        // ROM[02074]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02075]
D = A                                        // ROM[02076]
@ R13                                        // ROM[02077]
M = D                                        // ROM[02078]
// ---------------------------
// Push RA
@ Main.main:56                               // ROM[02079]
D = A                                        // ROM[02080]
// ---------------------------
// push D
@ SP                                         // ROM[02081]
AM = M+1                                     // ROM[02082]
A = A-1                                      // ROM[02083]
M = D                                        // ROM[02084]
// ---------------------------
// call
@ Main.main:57                               // ROM[02085]
D = A                                        // ROM[02086]
@ R15                                        // ROM[02087]
M = D                                        // ROM[02088]
@ :call                                      // ROM[02089]
0; JMP                                       // ROM[02090]
( Main.main:57)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02091]
0; JMP                                       // ROM[02092]
// ---------------------------
// ( RA )
( Main.main:56) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[02093]
D = A                                        // ROM[02094]
// ---------------------------
// push D
@ SP                                         // ROM[02095]
AM = M+1                                     // ROM[02096]
A = A-1                                      // ROM[02097]
M = D                                        // ROM[02098]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02099]
D = A                                        // ROM[02100]
@ R13                                        // ROM[02101]
M = D                                        // ROM[02102]
// ---------------------------
// Push RA
@ Main.main:58                               // ROM[02103]
D = A                                        // ROM[02104]
// ---------------------------
// push D
@ SP                                         // ROM[02105]
AM = M+1                                     // ROM[02106]
A = A-1                                      // ROM[02107]
M = D                                        // ROM[02108]
// ---------------------------
// call
@ Main.main:59                               // ROM[02109]
D = A                                        // ROM[02110]
@ R15                                        // ROM[02111]
M = D                                        // ROM[02112]
@ :call                                      // ROM[02113]
0; JMP                                       // ROM[02114]
( Main.main:59)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02115]
0; JMP                                       // ROM[02116]
// ---------------------------
// ( RA )
( Main.main:58) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[02117]
D = A                                        // ROM[02118]
// ---------------------------
// push D
@ SP                                         // ROM[02119]
AM = M+1                                     // ROM[02120]
A = A-1                                      // ROM[02121]
M = D                                        // ROM[02122]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02123]
D = A                                        // ROM[02124]
@ R13                                        // ROM[02125]
M = D                                        // ROM[02126]
// ---------------------------
// Push RA
@ Main.main:60                               // ROM[02127]
D = A                                        // ROM[02128]
// ---------------------------
// push D
@ SP                                         // ROM[02129]
AM = M+1                                     // ROM[02130]
A = A-1                                      // ROM[02131]
M = D                                        // ROM[02132]
// ---------------------------
// call
@ Main.main:61                               // ROM[02133]
D = A                                        // ROM[02134]
@ R15                                        // ROM[02135]
M = D                                        // ROM[02136]
@ :call                                      // ROM[02137]
0; JMP                                       // ROM[02138]
( Main.main:61)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02139]
0; JMP                                       // ROM[02140]
// ---------------------------
// ( RA )
( Main.main:60) 

// -------------------------------------
// CALL: Main.message(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[02141]
D = A                                        // ROM[02142]
@ R13                                        // ROM[02143]
M = D                                        // ROM[02144]
// ---------------------------
// Push RA
@ Main.main:62                               // ROM[02145]
D = A                                        // ROM[02146]
// ---------------------------
// push D
@ SP                                         // ROM[02147]
AM = M+1                                     // ROM[02148]
A = A-1                                      // ROM[02149]
M = D                                        // ROM[02150]
// ---------------------------
// call
@ Main.main:63                               // ROM[02151]
D = A                                        // ROM[02152]
@ R15                                        // ROM[02153]
M = D                                        // ROM[02154]
@ :call                                      // ROM[02155]
0; JMP                                       // ROM[02156]
( Main.main:63)
// ---------------------------
// goto functionName
@ Main.message                               // ROM[02157]
0; JMP                                       // ROM[02158]
// ---------------------------
// ( RA )
( Main.main:62) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[02159]
AM = M-1                                     // ROM[02160]
D = M                                        // ROM[02161]
// ---------------------------
@ 5                                          // ROM[02162]
M = D                                        // ROM[02163]

// -------------------------------------
// PUSH: <constant, 4>
// -------------------------------------
@ 4                                          // ROM[02164]
D = A                                        // ROM[02165]
// ---------------------------
// push D
@ SP                                         // ROM[02166]
AM = M+1                                     // ROM[02167]
A = A-1                                      // ROM[02168]
M = D                                        // ROM[02169]

// -------------------------------------
// PUSH: <constant, 7>
// -------------------------------------
@ 7                                          // ROM[02170]
D = A                                        // ROM[02171]
// ---------------------------
// push D
@ SP                                         // ROM[02172]
AM = M+1                                     // ROM[02173]
A = A-1                                      // ROM[02174]
M = D                                        // ROM[02175]

// -------------------------------------
// PUSH: <constant, 8>
// -------------------------------------
@ 8                                          // ROM[02176]
D = A                                        // ROM[02177]
// ---------------------------
// push D
@ SP                                         // ROM[02178]
AM = M+1                                     // ROM[02179]
A = A-1                                      // ROM[02180]
M = D                                        // ROM[02181]

// -------------------------------------
// PUSH: <constant, 5>
// -------------------------------------
@ 5                                          // ROM[02182]
D = A                                        // ROM[02183]
// ---------------------------
// push D
@ SP                                         // ROM[02184]
AM = M+1                                     // ROM[02185]
A = A-1                                      // ROM[02186]
M = D                                        // ROM[02187]

// -------------------------------------
// CALL: Map.new(4 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 4                                          // ROM[02188]
D = A                                        // ROM[02189]
@ R13                                        // ROM[02190]
M = D                                        // ROM[02191]
// ---------------------------
// Push RA
@ Main.main:64                               // ROM[02192]
D = A                                        // ROM[02193]
// ---------------------------
// push D
@ SP                                         // ROM[02194]
AM = M+1                                     // ROM[02195]
A = A-1                                      // ROM[02196]
M = D                                        // ROM[02197]
// ---------------------------
// call
@ Main.main:65                               // ROM[02198]
D = A                                        // ROM[02199]
@ R15                                        // ROM[02200]
M = D                                        // ROM[02201]
@ :call                                      // ROM[02202]
0; JMP                                       // ROM[02203]
( Main.main:65)
// ---------------------------
// goto functionName
@ Map.new                                    // ROM[02204]
0; JMP                                       // ROM[02205]
// ---------------------------
// ( RA )
( Main.main:64) 

// -------------------------------------
// POP: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[02206]
D = A                                        // ROM[02207]
@ R13                                        // ROM[02208]
M = D                                        // ROM[02209]
// ---------------------------
// call
@ Main.main:66                               // ROM[02210]
D = A                                        // ROM[02211]
@ R15                                        // ROM[02212]
M = D                                        // ROM[02213]
@ :pop_local                                 // ROM[02214]
0; JMP                                       // ROM[02215]
( Main.main:66)

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[02216]
D = A                                        // ROM[02217]
@ R13                                        // ROM[02218]
M = D                                        // ROM[02219]
// ---------------------------
// call
@ Main.main:67                               // ROM[02220]
D = A                                        // ROM[02221]
@ R15                                        // ROM[02222]
M = D                                        // ROM[02223]
@ :push_local                                // ROM[02224]
0; JMP                                       // ROM[02225]
( Main.main:67)

// -------------------------------------
// CALL: Map.draw(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[02226]
D = A                                        // ROM[02227]
@ R13                                        // ROM[02228]
M = D                                        // ROM[02229]
// ---------------------------
// Push RA
@ Main.main:68                               // ROM[02230]
D = A                                        // ROM[02231]
// ---------------------------
// push D
@ SP                                         // ROM[02232]
AM = M+1                                     // ROM[02233]
A = A-1                                      // ROM[02234]
M = D                                        // ROM[02235]
// ---------------------------
// call
@ Main.main:69                               // ROM[02236]
D = A                                        // ROM[02237]
@ R15                                        // ROM[02238]
M = D                                        // ROM[02239]
@ :call                                      // ROM[02240]
0; JMP                                       // ROM[02241]
( Main.main:69)
// ---------------------------
// goto functionName
@ Map.draw                                   // ROM[02242]
0; JMP                                       // ROM[02243]
// ---------------------------
// ( RA )
( Main.main:68) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[02244]
AM = M-1                                     // ROM[02245]
D = M                                        // ROM[02246]
// ---------------------------
@ 5                                          // ROM[02247]
M = D                                        // ROM[02248]

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[02249]
D = A                                        // ROM[02250]
@ R13                                        // ROM[02251]
M = D                                        // ROM[02252]
// ---------------------------
// call
@ Main.main:70                               // ROM[02253]
D = A                                        // ROM[02254]
@ R15                                        // ROM[02255]
M = D                                        // ROM[02256]
@ :push_local                                // ROM[02257]
0; JMP                                       // ROM[02258]
( Main.main:70)

// -------------------------------------
// CALL: Map.dispose(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[02259]
D = A                                        // ROM[02260]
@ R13                                        // ROM[02261]
M = D                                        // ROM[02262]
// ---------------------------
// Push RA
@ Main.main:71                               // ROM[02263]
D = A                                        // ROM[02264]
// ---------------------------
// push D
@ SP                                         // ROM[02265]
AM = M+1                                     // ROM[02266]
A = A-1                                      // ROM[02267]
M = D                                        // ROM[02268]
// ---------------------------
// call
@ Main.main:72                               // ROM[02269]
D = A                                        // ROM[02270]
@ R15                                        // ROM[02271]
M = D                                        // ROM[02272]
@ :call                                      // ROM[02273]
0; JMP                                       // ROM[02274]
( Main.main:72)
// ---------------------------
// goto functionName
@ Map.dispose                                // ROM[02275]
0; JMP                                       // ROM[02276]
// ---------------------------
// ( RA )
( Main.main:71) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[02277]
AM = M-1                                     // ROM[02278]
D = M                                        // ROM[02279]
// ---------------------------
@ 5                                          // ROM[02280]
M = D                                        // ROM[02281]

// -------------------------------------
// PUSH: <constant, 28>
// -------------------------------------
@ 28                                         // ROM[02282]
D = A                                        // ROM[02283]
// ---------------------------
// push D
@ SP                                         // ROM[02284]
AM = M+1                                     // ROM[02285]
A = A-1                                      // ROM[02286]
M = D                                        // ROM[02287]

// -------------------------------------
// CALL: String.new(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[02288]
D = A                                        // ROM[02289]
@ R13                                        // ROM[02290]
M = D                                        // ROM[02291]
// ---------------------------
// Push RA
@ Main.main:73                               // ROM[02292]
D = A                                        // ROM[02293]
// ---------------------------
// push D
@ SP                                         // ROM[02294]
AM = M+1                                     // ROM[02295]
A = A-1                                      // ROM[02296]
M = D                                        // ROM[02297]
// ---------------------------
// call
@ Main.main:74                               // ROM[02298]
D = A                                        // ROM[02299]
@ R15                                        // ROM[02300]
M = D                                        // ROM[02301]
@ :call                                      // ROM[02302]
0; JMP                                       // ROM[02303]
( Main.main:74)
// ---------------------------
// goto functionName
@ String.new                                 // ROM[02304]
0; JMP                                       // ROM[02305]
// ---------------------------
// ( RA )
( Main.main:73) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[02306]
D = A                                        // ROM[02307]
// ---------------------------
// push D
@ SP                                         // ROM[02308]
AM = M+1                                     // ROM[02309]
A = A-1                                      // ROM[02310]
M = D                                        // ROM[02311]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02312]
D = A                                        // ROM[02313]
@ R13                                        // ROM[02314]
M = D                                        // ROM[02315]
// ---------------------------
// Push RA
@ Main.main:75                               // ROM[02316]
D = A                                        // ROM[02317]
// ---------------------------
// push D
@ SP                                         // ROM[02318]
AM = M+1                                     // ROM[02319]
A = A-1                                      // ROM[02320]
M = D                                        // ROM[02321]
// ---------------------------
// call
@ Main.main:76                               // ROM[02322]
D = A                                        // ROM[02323]
@ R15                                        // ROM[02324]
M = D                                        // ROM[02325]
@ :call                                      // ROM[02326]
0; JMP                                       // ROM[02327]
( Main.main:76)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02328]
0; JMP                                       // ROM[02329]
// ---------------------------
// ( RA )
( Main.main:75) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[02330]
D = A                                        // ROM[02331]
// ---------------------------
// push D
@ SP                                         // ROM[02332]
AM = M+1                                     // ROM[02333]
A = A-1                                      // ROM[02334]
M = D                                        // ROM[02335]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02336]
D = A                                        // ROM[02337]
@ R13                                        // ROM[02338]
M = D                                        // ROM[02339]
// ---------------------------
// Push RA
@ Main.main:77                               // ROM[02340]
D = A                                        // ROM[02341]
// ---------------------------
// push D
@ SP                                         // ROM[02342]
AM = M+1                                     // ROM[02343]
A = A-1                                      // ROM[02344]
M = D                                        // ROM[02345]
// ---------------------------
// call
@ Main.main:78                               // ROM[02346]
D = A                                        // ROM[02347]
@ R15                                        // ROM[02348]
M = D                                        // ROM[02349]
@ :call                                      // ROM[02350]
0; JMP                                       // ROM[02351]
( Main.main:78)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02352]
0; JMP                                       // ROM[02353]
// ---------------------------
// ( RA )
( Main.main:77) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[02354]
D = A                                        // ROM[02355]
// ---------------------------
// push D
@ SP                                         // ROM[02356]
AM = M+1                                     // ROM[02357]
A = A-1                                      // ROM[02358]
M = D                                        // ROM[02359]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02360]
D = A                                        // ROM[02361]
@ R13                                        // ROM[02362]
M = D                                        // ROM[02363]
// ---------------------------
// Push RA
@ Main.main:79                               // ROM[02364]
D = A                                        // ROM[02365]
// ---------------------------
// push D
@ SP                                         // ROM[02366]
AM = M+1                                     // ROM[02367]
A = A-1                                      // ROM[02368]
M = D                                        // ROM[02369]
// ---------------------------
// call
@ Main.main:80                               // ROM[02370]
D = A                                        // ROM[02371]
@ R15                                        // ROM[02372]
M = D                                        // ROM[02373]
@ :call                                      // ROM[02374]
0; JMP                                       // ROM[02375]
( Main.main:80)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02376]
0; JMP                                       // ROM[02377]
// ---------------------------
// ( RA )
( Main.main:79) 

// -------------------------------------
// PUSH: <constant, 32>
// -------------------------------------
@ 32                                         // ROM[02378]
D = A                                        // ROM[02379]
// ---------------------------
// push D
@ SP                                         // ROM[02380]
AM = M+1                                     // ROM[02381]
A = A-1                                      // ROM[02382]
M = D                                        // ROM[02383]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02384]
D = A                                        // ROM[02385]
@ R13                                        // ROM[02386]
M = D                                        // ROM[02387]
// ---------------------------
// Push RA
@ Main.main:81                               // ROM[02388]
D = A                                        // ROM[02389]
// ---------------------------
// push D
@ SP                                         // ROM[02390]
AM = M+1                                     // ROM[02391]
A = A-1                                      // ROM[02392]
M = D                                        // ROM[02393]
// ---------------------------
// call
@ Main.main:82                               // ROM[02394]
D = A                                        // ROM[02395]
@ R15                                        // ROM[02396]
M = D                                        // ROM[02397]
@ :call                                      // ROM[02398]
0; JMP                                       // ROM[02399]
( Main.main:82)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02400]
0; JMP                                       // ROM[02401]
// ---------------------------
// ( RA )
( Main.main:81) 

// -------------------------------------
// PUSH: <constant, 83>
// -------------------------------------
@ 83                                         // ROM[02402]
D = A                                        // ROM[02403]
// ---------------------------
// push D
@ SP                                         // ROM[02404]
AM = M+1                                     // ROM[02405]
A = A-1                                      // ROM[02406]
M = D                                        // ROM[02407]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02408]
D = A                                        // ROM[02409]
@ R13                                        // ROM[02410]
M = D                                        // ROM[02411]
// ---------------------------
// Push RA
@ Main.main:83                               // ROM[02412]
D = A                                        // ROM[02413]
// ---------------------------
// push D
@ SP                                         // ROM[02414]
AM = M+1                                     // ROM[02415]
A = A-1                                      // ROM[02416]
M = D                                        // ROM[02417]
// ---------------------------
// call
@ Main.main:84                               // ROM[02418]
D = A                                        // ROM[02419]
@ R15                                        // ROM[02420]
M = D                                        // ROM[02421]
@ :call                                      // ROM[02422]
0; JMP                                       // ROM[02423]
( Main.main:84)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02424]
0; JMP                                       // ROM[02425]
// ---------------------------
// ( RA )
( Main.main:83) 

// -------------------------------------
// PUSH: <constant, 112>
// -------------------------------------
@ 112                                        // ROM[02426]
D = A                                        // ROM[02427]
// ---------------------------
// push D
@ SP                                         // ROM[02428]
AM = M+1                                     // ROM[02429]
A = A-1                                      // ROM[02430]
M = D                                        // ROM[02431]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02432]
D = A                                        // ROM[02433]
@ R13                                        // ROM[02434]
M = D                                        // ROM[02435]
// ---------------------------
// Push RA
@ Main.main:85                               // ROM[02436]
D = A                                        // ROM[02437]
// ---------------------------
// push D
@ SP                                         // ROM[02438]
AM = M+1                                     // ROM[02439]
A = A-1                                      // ROM[02440]
M = D                                        // ROM[02441]
// ---------------------------
// call
@ Main.main:86                               // ROM[02442]
D = A                                        // ROM[02443]
@ R15                                        // ROM[02444]
M = D                                        // ROM[02445]
@ :call                                      // ROM[02446]
0; JMP                                       // ROM[02447]
( Main.main:86)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02448]
0; JMP                                       // ROM[02449]
// ---------------------------
// ( RA )
( Main.main:85) 

// -------------------------------------
// PUSH: <constant, 114>
// -------------------------------------
@ 114                                        // ROM[02450]
D = A                                        // ROM[02451]
// ---------------------------
// push D
@ SP                                         // ROM[02452]
AM = M+1                                     // ROM[02453]
A = A-1                                      // ROM[02454]
M = D                                        // ROM[02455]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02456]
D = A                                        // ROM[02457]
@ R13                                        // ROM[02458]
M = D                                        // ROM[02459]
// ---------------------------
// Push RA
@ Main.main:87                               // ROM[02460]
D = A                                        // ROM[02461]
// ---------------------------
// push D
@ SP                                         // ROM[02462]
AM = M+1                                     // ROM[02463]
A = A-1                                      // ROM[02464]
M = D                                        // ROM[02465]
// ---------------------------
// call
@ Main.main:88                               // ROM[02466]
D = A                                        // ROM[02467]
@ R15                                        // ROM[02468]
M = D                                        // ROM[02469]
@ :call                                      // ROM[02470]
0; JMP                                       // ROM[02471]
( Main.main:88)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02472]
0; JMP                                       // ROM[02473]
// ---------------------------
// ( RA )
( Main.main:87) 

// -------------------------------------
// PUSH: <constant, 105>
// -------------------------------------
@ 105                                        // ROM[02474]
D = A                                        // ROM[02475]
// ---------------------------
// push D
@ SP                                         // ROM[02476]
AM = M+1                                     // ROM[02477]
A = A-1                                      // ROM[02478]
M = D                                        // ROM[02479]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02480]
D = A                                        // ROM[02481]
@ R13                                        // ROM[02482]
M = D                                        // ROM[02483]
// ---------------------------
// Push RA
@ Main.main:89                               // ROM[02484]
D = A                                        // ROM[02485]
// ---------------------------
// push D
@ SP                                         // ROM[02486]
AM = M+1                                     // ROM[02487]
A = A-1                                      // ROM[02488]
M = D                                        // ROM[02489]
// ---------------------------
// call
@ Main.main:90                               // ROM[02490]
D = A                                        // ROM[02491]
@ R15                                        // ROM[02492]
M = D                                        // ROM[02493]
@ :call                                      // ROM[02494]
0; JMP                                       // ROM[02495]
( Main.main:90)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02496]
0; JMP                                       // ROM[02497]
// ---------------------------
// ( RA )
( Main.main:89) 

// -------------------------------------
// PUSH: <constant, 110>
// -------------------------------------
@ 110                                        // ROM[02498]
D = A                                        // ROM[02499]
// ---------------------------
// push D
@ SP                                         // ROM[02500]
AM = M+1                                     // ROM[02501]
A = A-1                                      // ROM[02502]
M = D                                        // ROM[02503]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02504]
D = A                                        // ROM[02505]
@ R13                                        // ROM[02506]
M = D                                        // ROM[02507]
// ---------------------------
// Push RA
@ Main.main:91                               // ROM[02508]
D = A                                        // ROM[02509]
// ---------------------------
// push D
@ SP                                         // ROM[02510]
AM = M+1                                     // ROM[02511]
A = A-1                                      // ROM[02512]
M = D                                        // ROM[02513]
// ---------------------------
// call
@ Main.main:92                               // ROM[02514]
D = A                                        // ROM[02515]
@ R15                                        // ROM[02516]
M = D                                        // ROM[02517]
@ :call                                      // ROM[02518]
0; JMP                                       // ROM[02519]
( Main.main:92)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02520]
0; JMP                                       // ROM[02521]
// ---------------------------
// ( RA )
( Main.main:91) 

// -------------------------------------
// PUSH: <constant, 103>
// -------------------------------------
@ 103                                        // ROM[02522]
D = A                                        // ROM[02523]
// ---------------------------
// push D
@ SP                                         // ROM[02524]
AM = M+1                                     // ROM[02525]
A = A-1                                      // ROM[02526]
M = D                                        // ROM[02527]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02528]
D = A                                        // ROM[02529]
@ R13                                        // ROM[02530]
M = D                                        // ROM[02531]
// ---------------------------
// Push RA
@ Main.main:93                               // ROM[02532]
D = A                                        // ROM[02533]
// ---------------------------
// push D
@ SP                                         // ROM[02534]
AM = M+1                                     // ROM[02535]
A = A-1                                      // ROM[02536]
M = D                                        // ROM[02537]
// ---------------------------
// call
@ Main.main:94                               // ROM[02538]
D = A                                        // ROM[02539]
@ R15                                        // ROM[02540]
M = D                                        // ROM[02541]
@ :call                                      // ROM[02542]
0; JMP                                       // ROM[02543]
( Main.main:94)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02544]
0; JMP                                       // ROM[02545]
// ---------------------------
// ( RA )
( Main.main:93) 

// -------------------------------------
// PUSH: <constant, 32>
// -------------------------------------
@ 32                                         // ROM[02546]
D = A                                        // ROM[02547]
// ---------------------------
// push D
@ SP                                         // ROM[02548]
AM = M+1                                     // ROM[02549]
A = A-1                                      // ROM[02550]
M = D                                        // ROM[02551]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02552]
D = A                                        // ROM[02553]
@ R13                                        // ROM[02554]
M = D                                        // ROM[02555]
// ---------------------------
// Push RA
@ Main.main:95                               // ROM[02556]
D = A                                        // ROM[02557]
// ---------------------------
// push D
@ SP                                         // ROM[02558]
AM = M+1                                     // ROM[02559]
A = A-1                                      // ROM[02560]
M = D                                        // ROM[02561]
// ---------------------------
// call
@ Main.main:96                               // ROM[02562]
D = A                                        // ROM[02563]
@ R15                                        // ROM[02564]
M = D                                        // ROM[02565]
@ :call                                      // ROM[02566]
0; JMP                                       // ROM[02567]
( Main.main:96)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02568]
0; JMP                                       // ROM[02569]
// ---------------------------
// ( RA )
( Main.main:95) 

// -------------------------------------
// PUSH: <constant, 50>
// -------------------------------------
@ 50                                         // ROM[02570]
D = A                                        // ROM[02571]
// ---------------------------
// push D
@ SP                                         // ROM[02572]
AM = M+1                                     // ROM[02573]
A = A-1                                      // ROM[02574]
M = D                                        // ROM[02575]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02576]
D = A                                        // ROM[02577]
@ R13                                        // ROM[02578]
M = D                                        // ROM[02579]
// ---------------------------
// Push RA
@ Main.main:97                               // ROM[02580]
D = A                                        // ROM[02581]
// ---------------------------
// push D
@ SP                                         // ROM[02582]
AM = M+1                                     // ROM[02583]
A = A-1                                      // ROM[02584]
M = D                                        // ROM[02585]
// ---------------------------
// call
@ Main.main:98                               // ROM[02586]
D = A                                        // ROM[02587]
@ R15                                        // ROM[02588]
M = D                                        // ROM[02589]
@ :call                                      // ROM[02590]
0; JMP                                       // ROM[02591]
( Main.main:98)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02592]
0; JMP                                       // ROM[02593]
// ---------------------------
// ( RA )
( Main.main:97) 

// -------------------------------------
// PUSH: <constant, 48>
// -------------------------------------
@ 48                                         // ROM[02594]
D = A                                        // ROM[02595]
// ---------------------------
// push D
@ SP                                         // ROM[02596]
AM = M+1                                     // ROM[02597]
A = A-1                                      // ROM[02598]
M = D                                        // ROM[02599]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02600]
D = A                                        // ROM[02601]
@ R13                                        // ROM[02602]
M = D                                        // ROM[02603]
// ---------------------------
// Push RA
@ Main.main:99                               // ROM[02604]
D = A                                        // ROM[02605]
// ---------------------------
// push D
@ SP                                         // ROM[02606]
AM = M+1                                     // ROM[02607]
A = A-1                                      // ROM[02608]
M = D                                        // ROM[02609]
// ---------------------------
// call
@ Main.main:100                              // ROM[02610]
D = A                                        // ROM[02611]
@ R15                                        // ROM[02612]
M = D                                        // ROM[02613]
@ :call                                      // ROM[02614]
0; JMP                                       // ROM[02615]
( Main.main:100)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02616]
0; JMP                                       // ROM[02617]
// ---------------------------
// ( RA )
( Main.main:99) 

// -------------------------------------
// PUSH: <constant, 50>
// -------------------------------------
@ 50                                         // ROM[02618]
D = A                                        // ROM[02619]
// ---------------------------
// push D
@ SP                                         // ROM[02620]
AM = M+1                                     // ROM[02621]
A = A-1                                      // ROM[02622]
M = D                                        // ROM[02623]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02624]
D = A                                        // ROM[02625]
@ R13                                        // ROM[02626]
M = D                                        // ROM[02627]
// ---------------------------
// Push RA
@ Main.main:101                              // ROM[02628]
D = A                                        // ROM[02629]
// ---------------------------
// push D
@ SP                                         // ROM[02630]
AM = M+1                                     // ROM[02631]
A = A-1                                      // ROM[02632]
M = D                                        // ROM[02633]
// ---------------------------
// call
@ Main.main:102                              // ROM[02634]
D = A                                        // ROM[02635]
@ R15                                        // ROM[02636]
M = D                                        // ROM[02637]
@ :call                                      // ROM[02638]
0; JMP                                       // ROM[02639]
( Main.main:102)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02640]
0; JMP                                       // ROM[02641]
// ---------------------------
// ( RA )
( Main.main:101) 

// -------------------------------------
// PUSH: <constant, 48>
// -------------------------------------
@ 48                                         // ROM[02642]
D = A                                        // ROM[02643]
// ---------------------------
// push D
@ SP                                         // ROM[02644]
AM = M+1                                     // ROM[02645]
A = A-1                                      // ROM[02646]
M = D                                        // ROM[02647]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02648]
D = A                                        // ROM[02649]
@ R13                                        // ROM[02650]
M = D                                        // ROM[02651]
// ---------------------------
// Push RA
@ Main.main:103                              // ROM[02652]
D = A                                        // ROM[02653]
// ---------------------------
// push D
@ SP                                         // ROM[02654]
AM = M+1                                     // ROM[02655]
A = A-1                                      // ROM[02656]
M = D                                        // ROM[02657]
// ---------------------------
// call
@ Main.main:104                              // ROM[02658]
D = A                                        // ROM[02659]
@ R15                                        // ROM[02660]
M = D                                        // ROM[02661]
@ :call                                      // ROM[02662]
0; JMP                                       // ROM[02663]
( Main.main:104)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02664]
0; JMP                                       // ROM[02665]
// ---------------------------
// ( RA )
( Main.main:103) 

// -------------------------------------
// PUSH: <constant, 32>
// -------------------------------------
@ 32                                         // ROM[02666]
D = A                                        // ROM[02667]
// ---------------------------
// push D
@ SP                                         // ROM[02668]
AM = M+1                                     // ROM[02669]
A = A-1                                      // ROM[02670]
M = D                                        // ROM[02671]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02672]
D = A                                        // ROM[02673]
@ R13                                        // ROM[02674]
M = D                                        // ROM[02675]
// ---------------------------
// Push RA
@ Main.main:105                              // ROM[02676]
D = A                                        // ROM[02677]
// ---------------------------
// push D
@ SP                                         // ROM[02678]
AM = M+1                                     // ROM[02679]
A = A-1                                      // ROM[02680]
M = D                                        // ROM[02681]
// ---------------------------
// call
@ Main.main:106                              // ROM[02682]
D = A                                        // ROM[02683]
@ R15                                        // ROM[02684]
M = D                                        // ROM[02685]
@ :call                                      // ROM[02686]
0; JMP                                       // ROM[02687]
( Main.main:106)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02688]
0; JMP                                       // ROM[02689]
// ---------------------------
// ( RA )
( Main.main:105) 

// -------------------------------------
// PUSH: <constant, 99>
// -------------------------------------
@ 99                                         // ROM[02690]
D = A                                        // ROM[02691]
// ---------------------------
// push D
@ SP                                         // ROM[02692]
AM = M+1                                     // ROM[02693]
A = A-1                                      // ROM[02694]
M = D                                        // ROM[02695]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02696]
D = A                                        // ROM[02697]
@ R13                                        // ROM[02698]
M = D                                        // ROM[02699]
// ---------------------------
// Push RA
@ Main.main:107                              // ROM[02700]
D = A                                        // ROM[02701]
// ---------------------------
// push D
@ SP                                         // ROM[02702]
AM = M+1                                     // ROM[02703]
A = A-1                                      // ROM[02704]
M = D                                        // ROM[02705]
// ---------------------------
// call
@ Main.main:108                              // ROM[02706]
D = A                                        // ROM[02707]
@ R15                                        // ROM[02708]
M = D                                        // ROM[02709]
@ :call                                      // ROM[02710]
0; JMP                                       // ROM[02711]
( Main.main:108)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02712]
0; JMP                                       // ROM[02713]
// ---------------------------
// ( RA )
( Main.main:107) 

// -------------------------------------
// PUSH: <constant, 111>
// -------------------------------------
@ 111                                        // ROM[02714]
D = A                                        // ROM[02715]
// ---------------------------
// push D
@ SP                                         // ROM[02716]
AM = M+1                                     // ROM[02717]
A = A-1                                      // ROM[02718]
M = D                                        // ROM[02719]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02720]
D = A                                        // ROM[02721]
@ R13                                        // ROM[02722]
M = D                                        // ROM[02723]
// ---------------------------
// Push RA
@ Main.main:109                              // ROM[02724]
D = A                                        // ROM[02725]
// ---------------------------
// push D
@ SP                                         // ROM[02726]
AM = M+1                                     // ROM[02727]
A = A-1                                      // ROM[02728]
M = D                                        // ROM[02729]
// ---------------------------
// call
@ Main.main:110                              // ROM[02730]
D = A                                        // ROM[02731]
@ R15                                        // ROM[02732]
M = D                                        // ROM[02733]
@ :call                                      // ROM[02734]
0; JMP                                       // ROM[02735]
( Main.main:110)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02736]
0; JMP                                       // ROM[02737]
// ---------------------------
// ( RA )
( Main.main:109) 

// -------------------------------------
// PUSH: <constant, 109>
// -------------------------------------
@ 109                                        // ROM[02738]
D = A                                        // ROM[02739]
// ---------------------------
// push D
@ SP                                         // ROM[02740]
AM = M+1                                     // ROM[02741]
A = A-1                                      // ROM[02742]
M = D                                        // ROM[02743]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02744]
D = A                                        // ROM[02745]
@ R13                                        // ROM[02746]
M = D                                        // ROM[02747]
// ---------------------------
// Push RA
@ Main.main:111                              // ROM[02748]
D = A                                        // ROM[02749]
// ---------------------------
// push D
@ SP                                         // ROM[02750]
AM = M+1                                     // ROM[02751]
A = A-1                                      // ROM[02752]
M = D                                        // ROM[02753]
// ---------------------------
// call
@ Main.main:112                              // ROM[02754]
D = A                                        // ROM[02755]
@ R15                                        // ROM[02756]
M = D                                        // ROM[02757]
@ :call                                      // ROM[02758]
0; JMP                                       // ROM[02759]
( Main.main:112)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02760]
0; JMP                                       // ROM[02761]
// ---------------------------
// ( RA )
( Main.main:111) 

// -------------------------------------
// PUSH: <constant, 112>
// -------------------------------------
@ 112                                        // ROM[02762]
D = A                                        // ROM[02763]
// ---------------------------
// push D
@ SP                                         // ROM[02764]
AM = M+1                                     // ROM[02765]
A = A-1                                      // ROM[02766]
M = D                                        // ROM[02767]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02768]
D = A                                        // ROM[02769]
@ R13                                        // ROM[02770]
M = D                                        // ROM[02771]
// ---------------------------
// Push RA
@ Main.main:113                              // ROM[02772]
D = A                                        // ROM[02773]
// ---------------------------
// push D
@ SP                                         // ROM[02774]
AM = M+1                                     // ROM[02775]
A = A-1                                      // ROM[02776]
M = D                                        // ROM[02777]
// ---------------------------
// call
@ Main.main:114                              // ROM[02778]
D = A                                        // ROM[02779]
@ R15                                        // ROM[02780]
M = D                                        // ROM[02781]
@ :call                                      // ROM[02782]
0; JMP                                       // ROM[02783]
( Main.main:114)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02784]
0; JMP                                       // ROM[02785]
// ---------------------------
// ( RA )
( Main.main:113) 

// -------------------------------------
// PUSH: <constant, 108>
// -------------------------------------
@ 108                                        // ROM[02786]
D = A                                        // ROM[02787]
// ---------------------------
// push D
@ SP                                         // ROM[02788]
AM = M+1                                     // ROM[02789]
A = A-1                                      // ROM[02790]
M = D                                        // ROM[02791]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02792]
D = A                                        // ROM[02793]
@ R13                                        // ROM[02794]
M = D                                        // ROM[02795]
// ---------------------------
// Push RA
@ Main.main:115                              // ROM[02796]
D = A                                        // ROM[02797]
// ---------------------------
// push D
@ SP                                         // ROM[02798]
AM = M+1                                     // ROM[02799]
A = A-1                                      // ROM[02800]
M = D                                        // ROM[02801]
// ---------------------------
// call
@ Main.main:116                              // ROM[02802]
D = A                                        // ROM[02803]
@ R15                                        // ROM[02804]
M = D                                        // ROM[02805]
@ :call                                      // ROM[02806]
0; JMP                                       // ROM[02807]
( Main.main:116)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02808]
0; JMP                                       // ROM[02809]
// ---------------------------
// ( RA )
( Main.main:115) 

// -------------------------------------
// PUSH: <constant, 101>
// -------------------------------------
@ 101                                        // ROM[02810]
D = A                                        // ROM[02811]
// ---------------------------
// push D
@ SP                                         // ROM[02812]
AM = M+1                                     // ROM[02813]
A = A-1                                      // ROM[02814]
M = D                                        // ROM[02815]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02816]
D = A                                        // ROM[02817]
@ R13                                        // ROM[02818]
M = D                                        // ROM[02819]
// ---------------------------
// Push RA
@ Main.main:117                              // ROM[02820]
D = A                                        // ROM[02821]
// ---------------------------
// push D
@ SP                                         // ROM[02822]
AM = M+1                                     // ROM[02823]
A = A-1                                      // ROM[02824]
M = D                                        // ROM[02825]
// ---------------------------
// call
@ Main.main:118                              // ROM[02826]
D = A                                        // ROM[02827]
@ R15                                        // ROM[02828]
M = D                                        // ROM[02829]
@ :call                                      // ROM[02830]
0; JMP                                       // ROM[02831]
( Main.main:118)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02832]
0; JMP                                       // ROM[02833]
// ---------------------------
// ( RA )
( Main.main:117) 

// -------------------------------------
// PUSH: <constant, 116>
// -------------------------------------
@ 116                                        // ROM[02834]
D = A                                        // ROM[02835]
// ---------------------------
// push D
@ SP                                         // ROM[02836]
AM = M+1                                     // ROM[02837]
A = A-1                                      // ROM[02838]
M = D                                        // ROM[02839]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02840]
D = A                                        // ROM[02841]
@ R13                                        // ROM[02842]
M = D                                        // ROM[02843]
// ---------------------------
// Push RA
@ Main.main:119                              // ROM[02844]
D = A                                        // ROM[02845]
// ---------------------------
// push D
@ SP                                         // ROM[02846]
AM = M+1                                     // ROM[02847]
A = A-1                                      // ROM[02848]
M = D                                        // ROM[02849]
// ---------------------------
// call
@ Main.main:120                              // ROM[02850]
D = A                                        // ROM[02851]
@ R15                                        // ROM[02852]
M = D                                        // ROM[02853]
@ :call                                      // ROM[02854]
0; JMP                                       // ROM[02855]
( Main.main:120)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02856]
0; JMP                                       // ROM[02857]
// ---------------------------
// ( RA )
( Main.main:119) 

// -------------------------------------
// PUSH: <constant, 101>
// -------------------------------------
@ 101                                        // ROM[02858]
D = A                                        // ROM[02859]
// ---------------------------
// push D
@ SP                                         // ROM[02860]
AM = M+1                                     // ROM[02861]
A = A-1                                      // ROM[02862]
M = D                                        // ROM[02863]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02864]
D = A                                        // ROM[02865]
@ R13                                        // ROM[02866]
M = D                                        // ROM[02867]
// ---------------------------
// Push RA
@ Main.main:121                              // ROM[02868]
D = A                                        // ROM[02869]
// ---------------------------
// push D
@ SP                                         // ROM[02870]
AM = M+1                                     // ROM[02871]
A = A-1                                      // ROM[02872]
M = D                                        // ROM[02873]
// ---------------------------
// call
@ Main.main:122                              // ROM[02874]
D = A                                        // ROM[02875]
@ R15                                        // ROM[02876]
M = D                                        // ROM[02877]
@ :call                                      // ROM[02878]
0; JMP                                       // ROM[02879]
( Main.main:122)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02880]
0; JMP                                       // ROM[02881]
// ---------------------------
// ( RA )
( Main.main:121) 

// -------------------------------------
// PUSH: <constant, 32>
// -------------------------------------
@ 32                                         // ROM[02882]
D = A                                        // ROM[02883]
// ---------------------------
// push D
@ SP                                         // ROM[02884]
AM = M+1                                     // ROM[02885]
A = A-1                                      // ROM[02886]
M = D                                        // ROM[02887]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02888]
D = A                                        // ROM[02889]
@ R13                                        // ROM[02890]
M = D                                        // ROM[02891]
// ---------------------------
// Push RA
@ Main.main:123                              // ROM[02892]
D = A                                        // ROM[02893]
// ---------------------------
// push D
@ SP                                         // ROM[02894]
AM = M+1                                     // ROM[02895]
A = A-1                                      // ROM[02896]
M = D                                        // ROM[02897]
// ---------------------------
// call
@ Main.main:124                              // ROM[02898]
D = A                                        // ROM[02899]
@ R15                                        // ROM[02900]
M = D                                        // ROM[02901]
@ :call                                      // ROM[02902]
0; JMP                                       // ROM[02903]
( Main.main:124)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02904]
0; JMP                                       // ROM[02905]
// ---------------------------
// ( RA )
( Main.main:123) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[02906]
D = A                                        // ROM[02907]
// ---------------------------
// push D
@ SP                                         // ROM[02908]
AM = M+1                                     // ROM[02909]
A = A-1                                      // ROM[02910]
M = D                                        // ROM[02911]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02912]
D = A                                        // ROM[02913]
@ R13                                        // ROM[02914]
M = D                                        // ROM[02915]
// ---------------------------
// Push RA
@ Main.main:125                              // ROM[02916]
D = A                                        // ROM[02917]
// ---------------------------
// push D
@ SP                                         // ROM[02918]
AM = M+1                                     // ROM[02919]
A = A-1                                      // ROM[02920]
M = D                                        // ROM[02921]
// ---------------------------
// call
@ Main.main:126                              // ROM[02922]
D = A                                        // ROM[02923]
@ R15                                        // ROM[02924]
M = D                                        // ROM[02925]
@ :call                                      // ROM[02926]
0; JMP                                       // ROM[02927]
( Main.main:126)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02928]
0; JMP                                       // ROM[02929]
// ---------------------------
// ( RA )
( Main.main:125) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[02930]
D = A                                        // ROM[02931]
// ---------------------------
// push D
@ SP                                         // ROM[02932]
AM = M+1                                     // ROM[02933]
A = A-1                                      // ROM[02934]
M = D                                        // ROM[02935]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02936]
D = A                                        // ROM[02937]
@ R13                                        // ROM[02938]
M = D                                        // ROM[02939]
// ---------------------------
// Push RA
@ Main.main:127                              // ROM[02940]
D = A                                        // ROM[02941]
// ---------------------------
// push D
@ SP                                         // ROM[02942]
AM = M+1                                     // ROM[02943]
A = A-1                                      // ROM[02944]
M = D                                        // ROM[02945]
// ---------------------------
// call
@ Main.main:128                              // ROM[02946]
D = A                                        // ROM[02947]
@ R15                                        // ROM[02948]
M = D                                        // ROM[02949]
@ :call                                      // ROM[02950]
0; JMP                                       // ROM[02951]
( Main.main:128)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02952]
0; JMP                                       // ROM[02953]
// ---------------------------
// ( RA )
( Main.main:127) 

// -------------------------------------
// PUSH: <constant, 42>
// -------------------------------------
@ 42                                         // ROM[02954]
D = A                                        // ROM[02955]
// ---------------------------
// push D
@ SP                                         // ROM[02956]
AM = M+1                                     // ROM[02957]
A = A-1                                      // ROM[02958]
M = D                                        // ROM[02959]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[02960]
D = A                                        // ROM[02961]
@ R13                                        // ROM[02962]
M = D                                        // ROM[02963]
// ---------------------------
// Push RA
@ Main.main:129                              // ROM[02964]
D = A                                        // ROM[02965]
// ---------------------------
// push D
@ SP                                         // ROM[02966]
AM = M+1                                     // ROM[02967]
A = A-1                                      // ROM[02968]
M = D                                        // ROM[02969]
// ---------------------------
// call
@ Main.main:130                              // ROM[02970]
D = A                                        // ROM[02971]
@ R15                                        // ROM[02972]
M = D                                        // ROM[02973]
@ :call                                      // ROM[02974]
0; JMP                                       // ROM[02975]
( Main.main:130)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[02976]
0; JMP                                       // ROM[02977]
// ---------------------------
// ( RA )
( Main.main:129) 

// -------------------------------------
// CALL: Main.message(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[02978]
D = A                                        // ROM[02979]
@ R13                                        // ROM[02980]
M = D                                        // ROM[02981]
// ---------------------------
// Push RA
@ Main.main:131                              // ROM[02982]
D = A                                        // ROM[02983]
// ---------------------------
// push D
@ SP                                         // ROM[02984]
AM = M+1                                     // ROM[02985]
A = A-1                                      // ROM[02986]
M = D                                        // ROM[02987]
// ---------------------------
// call
@ Main.main:132                              // ROM[02988]
D = A                                        // ROM[02989]
@ R15                                        // ROM[02990]
M = D                                        // ROM[02991]
@ :call                                      // ROM[02992]
0; JMP                                       // ROM[02993]
( Main.main:132)
// ---------------------------
// goto functionName
@ Main.message                               // ROM[02994]
0; JMP                                       // ROM[02995]
// ---------------------------
// ( RA )
( Main.main:131) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[02996]
AM = M-1                                     // ROM[02997]
D = M                                        // ROM[02998]
// ---------------------------
@ 5                                          // ROM[02999]
M = D                                        // ROM[03000]

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[03001]
D = A                                        // ROM[03002]
// ---------------------------
// push D
@ SP                                         // ROM[03003]
AM = M+1                                     // ROM[03004]
A = A-1                                      // ROM[03005]
M = D                                        // ROM[03006]

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[03007]
D = A                                        // ROM[03008]
@ R13                                        // ROM[03009]
M = D                                        // ROM[03010]
// ---------------------------
// call
@ Main.main:133                              // ROM[03011]
D = A                                        // ROM[03012]
@ R15                                        // ROM[03013]
M = D                                        // ROM[03014]
@ :push_local                                // ROM[03015]
0; JMP                                       // ROM[03016]
( Main.main:133)

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Main.main:134                              // ROM[03017]
D = A                                        // ROM[03018]
@ R15                                        // ROM[03019]
M = D                                        // ROM[03020]
@ :add                                       // ROM[03021]
0; JMP                                       // ROM[03022]
( Main.main:134)

// -------------------------------------
// PUSH: <constant, 4242>
// -------------------------------------
@ 4242                                       // ROM[03023]
D = A                                        // ROM[03024]
// ---------------------------
// push D
@ SP                                         // ROM[03025]
AM = M+1                                     // ROM[03026]
A = A-1                                      // ROM[03027]
M = D                                        // ROM[03028]

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03029]
AM = M-1                                     // ROM[03030]
D = M                                        // ROM[03031]
// ---------------------------
@ 5                                          // ROM[03032]
M = D                                        // ROM[03033]

// -------------------------------------
// POP: <pointer, 1>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03034]
AM = M-1                                     // ROM[03035]
D = M                                        // ROM[03036]
// ---------------------------
@ 4                                          // ROM[03037]
M = D                                        // ROM[03038]

// -------------------------------------
// PUSH: <temp, 0>
// -------------------------------------
@ 5                                          // ROM[03039]
D = M                                        // ROM[03040]
// ---------------------------
// push D
@ SP                                         // ROM[03041]
AM = M+1                                     // ROM[03042]
A = A-1                                      // ROM[03043]
M = D                                        // ROM[03044]

// -------------------------------------
// POP: <that, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[03045]
D = A                                        // ROM[03046]
@ R13                                        // ROM[03047]
M = D                                        // ROM[03048]
// ---------------------------
// call
@ Main.main:135                              // ROM[03049]
D = A                                        // ROM[03050]
@ R15                                        // ROM[03051]
M = D                                        // ROM[03052]
@ :pop_that                                  // ROM[03053]
0; JMP                                       // ROM[03054]
( Main.main:135)

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[03055]
D = A                                        // ROM[03056]
// ---------------------------
// push D
@ SP                                         // ROM[03057]
AM = M+1                                     // ROM[03058]
A = A-1                                      // ROM[03059]
M = D                                        // ROM[03060]

// -------------------------------------
// RETURN: 
// -------------------------------------
// ---------------------------
// call
@ Main.main:136                              // ROM[03061]
D = A                                        // ROM[03062]
@ R15                                        // ROM[03063]
M = D                                        // ROM[03064]
@ :return                                    // ROM[03065]
0; JMP                                       // ROM[03066]
( Main.main:136)

// =========================================================
// FUNCTION: Main.message(0 locals)
// =========================================================

( Main.message )
// ---------------------------
// clear local segment
D = 0                                        // ROM[03067]

// -------------------------------------
// PUSH: <constant, 21>
// -------------------------------------
@ 21                                         // ROM[03068]
D = A                                        // ROM[03069]
// ---------------------------
// push D
@ SP                                         // ROM[03070]
AM = M+1                                     // ROM[03071]
A = A-1                                      // ROM[03072]
M = D                                        // ROM[03073]

// -------------------------------------
// PUSH: <constant, 64>
// -------------------------------------
@ 64                                         // ROM[03074]
D = A                                        // ROM[03075]
// ---------------------------
// push D
@ SP                                         // ROM[03076]
AM = M+1                                     // ROM[03077]
A = A-1                                      // ROM[03078]
M = D                                        // ROM[03079]

// -------------------------------------
// CALL: String.length(0 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 0                                          // ROM[03080]
D = A                                        // ROM[03081]
@ R13                                        // ROM[03082]
M = D                                        // ROM[03083]
// ---------------------------
// Push RA
@ Main.message:137                           // ROM[03084]
D = A                                        // ROM[03085]
// ---------------------------
// push D
@ SP                                         // ROM[03086]
AM = M+1                                     // ROM[03087]
A = A-1                                      // ROM[03088]
M = D                                        // ROM[03089]
// ---------------------------
// call
@ Main.message:138                           // ROM[03090]
D = A                                        // ROM[03091]
@ R15                                        // ROM[03092]
M = D                                        // ROM[03093]
@ :call                                      // ROM[03094]
0; JMP                                       // ROM[03095]
( Main.message:138)
// ---------------------------
// goto functionName
@ String.length                              // ROM[03096]
0; JMP                                       // ROM[03097]
// ---------------------------
// ( RA )
( Main.message:137) 

// -------------------------------------
// ARITHMETIC: sub
// -------------------------------------
// ---------------------------
// call
@ Main.message:139                           // ROM[03098]
D = A                                        // ROM[03099]
@ R15                                        // ROM[03100]
M = D                                        // ROM[03101]
@ :sub                                       // ROM[03102]
0; JMP                                       // ROM[03103]
( Main.message:139)

// -------------------------------------
// PUSH: <constant, 2>
// -------------------------------------
@ 2                                          // ROM[03104]
D = A                                        // ROM[03105]
// ---------------------------
// push D
@ SP                                         // ROM[03106]
AM = M+1                                     // ROM[03107]
A = A-1                                      // ROM[03108]
M = D                                        // ROM[03109]

// -------------------------------------
// CALL: Math.divide(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[03110]
D = A                                        // ROM[03111]
@ R13                                        // ROM[03112]
M = D                                        // ROM[03113]
// ---------------------------
// Push RA
@ Main.message:140                           // ROM[03114]
D = A                                        // ROM[03115]
// ---------------------------
// push D
@ SP                                         // ROM[03116]
AM = M+1                                     // ROM[03117]
A = A-1                                      // ROM[03118]
M = D                                        // ROM[03119]
// ---------------------------
// call
@ Main.message:141                           // ROM[03120]
D = A                                        // ROM[03121]
@ R15                                        // ROM[03122]
M = D                                        // ROM[03123]
@ :call                                      // ROM[03124]
0; JMP                                       // ROM[03125]
( Main.message:141)
// ---------------------------
// goto functionName
@ Math.divide                                // ROM[03126]
0; JMP                                       // ROM[03127]
// ---------------------------
// ( RA )
( Main.message:140) 

// -------------------------------------
// CALL: Output.moveCursor(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[03128]
D = A                                        // ROM[03129]
@ R13                                        // ROM[03130]
M = D                                        // ROM[03131]
// ---------------------------
// Push RA
@ Main.message:142                           // ROM[03132]
D = A                                        // ROM[03133]
// ---------------------------
// push D
@ SP                                         // ROM[03134]
AM = M+1                                     // ROM[03135]
A = A-1                                      // ROM[03136]
M = D                                        // ROM[03137]
// ---------------------------
// call
@ Main.message:143                           // ROM[03138]
D = A                                        // ROM[03139]
@ R15                                        // ROM[03140]
M = D                                        // ROM[03141]
@ :call                                      // ROM[03142]
0; JMP                                       // ROM[03143]
( Main.message:143)
// ---------------------------
// goto functionName
@ Output.moveCursor                          // ROM[03144]
0; JMP                                       // ROM[03145]
// ---------------------------
// ( RA )
( Main.message:142) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03146]
AM = M-1                                     // ROM[03147]
D = M                                        // ROM[03148]
// ---------------------------
@ 5                                          // ROM[03149]
M = D                                        // ROM[03150]

// -------------------------------------
// PUSH: <argument, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[03151]
D = A                                        // ROM[03152]
@ R13                                        // ROM[03153]
M = D                                        // ROM[03154]
// ---------------------------
// call
@ Main.message:144                           // ROM[03155]
D = A                                        // ROM[03156]
@ R15                                        // ROM[03157]
M = D                                        // ROM[03158]
@ :push_argument                             // ROM[03159]
0; JMP                                       // ROM[03160]
( Main.message:144)

// -------------------------------------
// CALL: Output.printString(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[03161]
D = A                                        // ROM[03162]
@ R13                                        // ROM[03163]
M = D                                        // ROM[03164]
// ---------------------------
// Push RA
@ Main.message:145                           // ROM[03165]
D = A                                        // ROM[03166]
// ---------------------------
// push D
@ SP                                         // ROM[03167]
AM = M+1                                     // ROM[03168]
A = A-1                                      // ROM[03169]
M = D                                        // ROM[03170]
// ---------------------------
// call
@ Main.message:146                           // ROM[03171]
D = A                                        // ROM[03172]
@ R15                                        // ROM[03173]
M = D                                        // ROM[03174]
@ :call                                      // ROM[03175]
0; JMP                                       // ROM[03176]
( Main.message:146)
// ---------------------------
// goto functionName
@ Output.printString                         // ROM[03177]
0; JMP                                       // ROM[03178]
// ---------------------------
// ( RA )
( Main.message:145) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03179]
AM = M-1                                     // ROM[03180]
D = M                                        // ROM[03181]
// ---------------------------
@ 5                                          // ROM[03182]
M = D                                        // ROM[03183]

// -------------------------------------
// CALL: String.dispose(0 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 0                                          // ROM[03184]
D = A                                        // ROM[03185]
@ R13                                        // ROM[03186]
M = D                                        // ROM[03187]
// ---------------------------
// Push RA
@ Main.message:147                           // ROM[03188]
D = A                                        // ROM[03189]
// ---------------------------
// push D
@ SP                                         // ROM[03190]
AM = M+1                                     // ROM[03191]
A = A-1                                      // ROM[03192]
M = D                                        // ROM[03193]
// ---------------------------
// call
@ Main.message:148                           // ROM[03194]
D = A                                        // ROM[03195]
@ R15                                        // ROM[03196]
M = D                                        // ROM[03197]
@ :call                                      // ROM[03198]
0; JMP                                       // ROM[03199]
( Main.message:148)
// ---------------------------
// goto functionName
@ String.dispose                             // ROM[03200]
0; JMP                                       // ROM[03201]
// ---------------------------
// ( RA )
( Main.message:147) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03202]
AM = M-1                                     // ROM[03203]
D = M                                        // ROM[03204]
// ---------------------------
@ 5                                          // ROM[03205]
M = D                                        // ROM[03206]

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[03207]
D = A                                        // ROM[03208]
// ---------------------------
// push D
@ SP                                         // ROM[03209]
AM = M+1                                     // ROM[03210]
A = A-1                                      // ROM[03211]
M = D                                        // ROM[03212]

// -------------------------------------
// RETURN: 
// -------------------------------------
// ---------------------------
// call
@ Main.message:149                           // ROM[03213]
D = A                                        // ROM[03214]
@ R15                                        // ROM[03215]
M = D                                        // ROM[03216]
@ :return                                    // ROM[03217]
0; JMP                                       // ROM[03218]
( Main.message:149)

// *********************************************************
// Translation of: ./Cell.vm
// *********************************************************


// =========================================================
// FUNCTION: Cell.new(0 locals)
// =========================================================

( Cell.new )
// ---------------------------
// clear local segment
D = 0                                        // ROM[03219]

// -------------------------------------
// PUSH: <constant, 4>
// -------------------------------------
@ 4                                          // ROM[03220]
D = A                                        // ROM[03221]
// ---------------------------
// push D
@ SP                                         // ROM[03222]
AM = M+1                                     // ROM[03223]
A = A-1                                      // ROM[03224]
M = D                                        // ROM[03225]

// -------------------------------------
// CALL: Memory.alloc(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[03226]
D = A                                        // ROM[03227]
@ R13                                        // ROM[03228]
M = D                                        // ROM[03229]
// ---------------------------
// Push RA
@ Cell.new:0                                 // ROM[03230]
D = A                                        // ROM[03231]
// ---------------------------
// push D
@ SP                                         // ROM[03232]
AM = M+1                                     // ROM[03233]
A = A-1                                      // ROM[03234]
M = D                                        // ROM[03235]
// ---------------------------
// call
@ Cell.new:1                                 // ROM[03236]
D = A                                        // ROM[03237]
@ R15                                        // ROM[03238]
M = D                                        // ROM[03239]
@ :call                                      // ROM[03240]
0; JMP                                       // ROM[03241]
( Cell.new:1)
// ---------------------------
// goto functionName
@ Memory.alloc                               // ROM[03242]
0; JMP                                       // ROM[03243]
// ---------------------------
// ( RA )
( Cell.new:0) 

// -------------------------------------
// POP: <pointer, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03244]
AM = M-1                                     // ROM[03245]
D = M                                        // ROM[03246]
// ---------------------------
@ 3                                          // ROM[03247]
M = D                                        // ROM[03248]

// -------------------------------------
// PUSH: <argument, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[03249]
D = A                                        // ROM[03250]
@ R13                                        // ROM[03251]
M = D                                        // ROM[03252]
// ---------------------------
// call
@ Cell.new:2                                 // ROM[03253]
D = A                                        // ROM[03254]
@ R15                                        // ROM[03255]
M = D                                        // ROM[03256]
@ :push_argument                             // ROM[03257]
0; JMP                                       // ROM[03258]
( Cell.new:2)

// -------------------------------------
// POP: <this, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[03259]
D = A                                        // ROM[03260]
@ R13                                        // ROM[03261]
M = D                                        // ROM[03262]
// ---------------------------
// call
@ Cell.new:3                                 // ROM[03263]
D = A                                        // ROM[03264]
@ R15                                        // ROM[03265]
M = D                                        // ROM[03266]
@ :pop_this                                  // ROM[03267]
0; JMP                                       // ROM[03268]
( Cell.new:3)

// -------------------------------------
// PUSH: <argument, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[03269]
D = A                                        // ROM[03270]
@ R13                                        // ROM[03271]
M = D                                        // ROM[03272]
// ---------------------------
// call
@ Cell.new:4                                 // ROM[03273]
D = A                                        // ROM[03274]
@ R15                                        // ROM[03275]
M = D                                        // ROM[03276]
@ :push_argument                             // ROM[03277]
0; JMP                                       // ROM[03278]
( Cell.new:4)

// -------------------------------------
// POP: <this, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[03279]
D = A                                        // ROM[03280]
@ R13                                        // ROM[03281]
M = D                                        // ROM[03282]
// ---------------------------
// call
@ Cell.new:5                                 // ROM[03283]
D = A                                        // ROM[03284]
@ R15                                        // ROM[03285]
M = D                                        // ROM[03286]
@ :pop_this                                  // ROM[03287]
0; JMP                                       // ROM[03288]
( Cell.new:5)

// -------------------------------------
// PUSH: <argument, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[03289]
D = A                                        // ROM[03290]
@ R13                                        // ROM[03291]
M = D                                        // ROM[03292]
// ---------------------------
// call
@ Cell.new:6                                 // ROM[03293]
D = A                                        // ROM[03294]
@ R15                                        // ROM[03295]
M = D                                        // ROM[03296]
@ :push_argument                             // ROM[03297]
0; JMP                                       // ROM[03298]
( Cell.new:6)

// -------------------------------------
// PUSH: <argument, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[03299]
D = A                                        // ROM[03300]
@ R13                                        // ROM[03301]
M = D                                        // ROM[03302]
// ---------------------------
// call
@ Cell.new:7                                 // ROM[03303]
D = A                                        // ROM[03304]
@ R15                                        // ROM[03305]
M = D                                        // ROM[03306]
@ :push_argument                             // ROM[03307]
0; JMP                                       // ROM[03308]
( Cell.new:7)

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Cell.new:8                                 // ROM[03309]
D = A                                        // ROM[03310]
@ R15                                        // ROM[03311]
M = D                                        // ROM[03312]
@ :add                                       // ROM[03313]
0; JMP                                       // ROM[03314]
( Cell.new:8)

// -------------------------------------
// PUSH: <constant, 1>
// -------------------------------------
@ 1                                          // ROM[03315]
D = A                                        // ROM[03316]
// ---------------------------
// push D
@ SP                                         // ROM[03317]
AM = M+1                                     // ROM[03318]
A = A-1                                      // ROM[03319]
M = D                                        // ROM[03320]

// -------------------------------------
// ARITHMETIC: and
// -------------------------------------
// ---------------------------
// call
@ Cell.new:9                                 // ROM[03321]
D = A                                        // ROM[03322]
@ R15                                        // ROM[03323]
M = D                                        // ROM[03324]
@ :and                                       // ROM[03325]
0; JMP                                       // ROM[03326]
( Cell.new:9)

// -------------------------------------
// ARITHMETIC: neg
// -------------------------------------
@ SP                                         // ROM[03327]
A = M-1                                      // ROM[03328]
M = -M                                       // ROM[03329]

// -------------------------------------
// POP: <this, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[03330]
D = A                                        // ROM[03331]
@ R13                                        // ROM[03332]
M = D                                        // ROM[03333]
// ---------------------------
// call
@ Cell.new:10                                // ROM[03334]
D = A                                        // ROM[03335]
@ R15                                        // ROM[03336]
M = D                                        // ROM[03337]
@ :pop_this                                  // ROM[03338]
0; JMP                                       // ROM[03339]
( Cell.new:10)

// -------------------------------------
// PUSH: <constant, 2>
// -------------------------------------
@ 2                                          // ROM[03340]
D = A                                        // ROM[03341]
// ---------------------------
// push D
@ SP                                         // ROM[03342]
AM = M+1                                     // ROM[03343]
A = A-1                                      // ROM[03344]
M = D                                        // ROM[03345]

// -------------------------------------
// CALL: String.new(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[03346]
D = A                                        // ROM[03347]
@ R13                                        // ROM[03348]
M = D                                        // ROM[03349]
// ---------------------------
// Push RA
@ Cell.new:11                                // ROM[03350]
D = A                                        // ROM[03351]
// ---------------------------
// push D
@ SP                                         // ROM[03352]
AM = M+1                                     // ROM[03353]
A = A-1                                      // ROM[03354]
M = D                                        // ROM[03355]
// ---------------------------
// call
@ Cell.new:12                                // ROM[03356]
D = A                                        // ROM[03357]
@ R15                                        // ROM[03358]
M = D                                        // ROM[03359]
@ :call                                      // ROM[03360]
0; JMP                                       // ROM[03361]
( Cell.new:12)
// ---------------------------
// goto functionName
@ String.new                                 // ROM[03362]
0; JMP                                       // ROM[03363]
// ---------------------------
// ( RA )
( Cell.new:11) 

// -------------------------------------
// POP: <this, 3>
// -------------------------------------
// ---------------------------
// R13 = index
@ 3                                          // ROM[03364]
D = A                                        // ROM[03365]
@ R13                                        // ROM[03366]
M = D                                        // ROM[03367]
// ---------------------------
// call
@ Cell.new:13                                // ROM[03368]
D = A                                        // ROM[03369]
@ R15                                        // ROM[03370]
M = D                                        // ROM[03371]
@ :pop_this                                  // ROM[03372]
0; JMP                                       // ROM[03373]
( Cell.new:13)

// -------------------------------------
// PUSH: <this, 3>
// -------------------------------------
// ---------------------------
// R13 = index
@ 3                                          // ROM[03374]
D = A                                        // ROM[03375]
@ R13                                        // ROM[03376]
M = D                                        // ROM[03377]
// ---------------------------
// call
@ Cell.new:14                                // ROM[03378]
D = A                                        // ROM[03379]
@ R15                                        // ROM[03380]
M = D                                        // ROM[03381]
@ :push_this                                 // ROM[03382]
0; JMP                                       // ROM[03383]
( Cell.new:14)

// -------------------------------------
// PUSH: <constant, 65>
// -------------------------------------
@ 65                                         // ROM[03384]
D = A                                        // ROM[03385]
// ---------------------------
// push D
@ SP                                         // ROM[03386]
AM = M+1                                     // ROM[03387]
A = A-1                                      // ROM[03388]
M = D                                        // ROM[03389]

// -------------------------------------
// PUSH: <this, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[03390]
D = A                                        // ROM[03391]
@ R13                                        // ROM[03392]
M = D                                        // ROM[03393]
// ---------------------------
// call
@ Cell.new:15                                // ROM[03394]
D = A                                        // ROM[03395]
@ R15                                        // ROM[03396]
M = D                                        // ROM[03397]
@ :push_this                                 // ROM[03398]
0; JMP                                       // ROM[03399]
( Cell.new:15)

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Cell.new:16                                // ROM[03400]
D = A                                        // ROM[03401]
@ R15                                        // ROM[03402]
M = D                                        // ROM[03403]
@ :add                                       // ROM[03404]
0; JMP                                       // ROM[03405]
( Cell.new:16)

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[03406]
D = A                                        // ROM[03407]
@ R13                                        // ROM[03408]
M = D                                        // ROM[03409]
// ---------------------------
// Push RA
@ Cell.new:17                                // ROM[03410]
D = A                                        // ROM[03411]
// ---------------------------
// push D
@ SP                                         // ROM[03412]
AM = M+1                                     // ROM[03413]
A = A-1                                      // ROM[03414]
M = D                                        // ROM[03415]
// ---------------------------
// call
@ Cell.new:18                                // ROM[03416]
D = A                                        // ROM[03417]
@ R15                                        // ROM[03418]
M = D                                        // ROM[03419]
@ :call                                      // ROM[03420]
0; JMP                                       // ROM[03421]
( Cell.new:18)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[03422]
0; JMP                                       // ROM[03423]
// ---------------------------
// ( RA )
( Cell.new:17) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03424]
AM = M-1                                     // ROM[03425]
D = M                                        // ROM[03426]
// ---------------------------
@ 5                                          // ROM[03427]
M = D                                        // ROM[03428]

// -------------------------------------
// PUSH: <this, 3>
// -------------------------------------
// ---------------------------
// R13 = index
@ 3                                          // ROM[03429]
D = A                                        // ROM[03430]
@ R13                                        // ROM[03431]
M = D                                        // ROM[03432]
// ---------------------------
// call
@ Cell.new:19                                // ROM[03433]
D = A                                        // ROM[03434]
@ R15                                        // ROM[03435]
M = D                                        // ROM[03436]
@ :push_this                                 // ROM[03437]
0; JMP                                       // ROM[03438]
( Cell.new:19)

// -------------------------------------
// PUSH: <constant, 48>
// -------------------------------------
@ 48                                         // ROM[03439]
D = A                                        // ROM[03440]
// ---------------------------
// push D
@ SP                                         // ROM[03441]
AM = M+1                                     // ROM[03442]
A = A-1                                      // ROM[03443]
M = D                                        // ROM[03444]

// -------------------------------------
// PUSH: <this, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[03445]
D = A                                        // ROM[03446]
@ R13                                        // ROM[03447]
M = D                                        // ROM[03448]
// ---------------------------
// call
@ Cell.new:20                                // ROM[03449]
D = A                                        // ROM[03450]
@ R15                                        // ROM[03451]
M = D                                        // ROM[03452]
@ :push_this                                 // ROM[03453]
0; JMP                                       // ROM[03454]
( Cell.new:20)

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Cell.new:21                                // ROM[03455]
D = A                                        // ROM[03456]
@ R15                                        // ROM[03457]
M = D                                        // ROM[03458]
@ :add                                       // ROM[03459]
0; JMP                                       // ROM[03460]
( Cell.new:21)

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[03461]
D = A                                        // ROM[03462]
@ R13                                        // ROM[03463]
M = D                                        // ROM[03464]
// ---------------------------
// Push RA
@ Cell.new:22                                // ROM[03465]
D = A                                        // ROM[03466]
// ---------------------------
// push D
@ SP                                         // ROM[03467]
AM = M+1                                     // ROM[03468]
A = A-1                                      // ROM[03469]
M = D                                        // ROM[03470]
// ---------------------------
// call
@ Cell.new:23                                // ROM[03471]
D = A                                        // ROM[03472]
@ R15                                        // ROM[03473]
M = D                                        // ROM[03474]
@ :call                                      // ROM[03475]
0; JMP                                       // ROM[03476]
( Cell.new:23)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[03477]
0; JMP                                       // ROM[03478]
// ---------------------------
// ( RA )
( Cell.new:22) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03479]
AM = M-1                                     // ROM[03480]
D = M                                        // ROM[03481]
// ---------------------------
@ 5                                          // ROM[03482]
M = D                                        // ROM[03483]

// -------------------------------------
// PUSH: <pointer, 0>
// -------------------------------------
@ 3                                          // ROM[03484]
D = M                                        // ROM[03485]
// ---------------------------
// push D
@ SP                                         // ROM[03486]
AM = M+1                                     // ROM[03487]
A = A-1                                      // ROM[03488]
M = D                                        // ROM[03489]

// -------------------------------------
// RETURN: 
// -------------------------------------
// ---------------------------
// call
@ Cell.new:24                                // ROM[03490]
D = A                                        // ROM[03491]
@ R15                                        // ROM[03492]
M = D                                        // ROM[03493]
@ :return                                    // ROM[03494]
0; JMP                                       // ROM[03495]
( Cell.new:24)

// =========================================================
// FUNCTION: Cell.dispose(0 locals)
// =========================================================

( Cell.dispose )
// ---------------------------
// clear local segment
D = 0                                        // ROM[03496]

// -------------------------------------
// PUSH: <argument, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[03497]
D = A                                        // ROM[03498]
@ R13                                        // ROM[03499]
M = D                                        // ROM[03500]
// ---------------------------
// call
@ Cell.dispose:25                            // ROM[03501]
D = A                                        // ROM[03502]
@ R15                                        // ROM[03503]
M = D                                        // ROM[03504]
@ :push_argument                             // ROM[03505]
0; JMP                                       // ROM[03506]
( Cell.dispose:25)

// -------------------------------------
// POP: <pointer, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03507]
AM = M-1                                     // ROM[03508]
D = M                                        // ROM[03509]
// ---------------------------
@ 3                                          // ROM[03510]
M = D                                        // ROM[03511]

// -------------------------------------
// PUSH: <this, 3>
// -------------------------------------
// ---------------------------
// R13 = index
@ 3                                          // ROM[03512]
D = A                                        // ROM[03513]
@ R13                                        // ROM[03514]
M = D                                        // ROM[03515]
// ---------------------------
// call
@ Cell.dispose:26                            // ROM[03516]
D = A                                        // ROM[03517]
@ R15                                        // ROM[03518]
M = D                                        // ROM[03519]
@ :push_this                                 // ROM[03520]
0; JMP                                       // ROM[03521]
( Cell.dispose:26)

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[03522]
D = A                                        // ROM[03523]
// ---------------------------
// push D
@ SP                                         // ROM[03524]
AM = M+1                                     // ROM[03525]
A = A-1                                      // ROM[03526]
M = D                                        // ROM[03527]

// -------------------------------------
// ARITHMETIC: eq
// -------------------------------------
// ---------------------------
// call
@ Cell.dispose:27                            // ROM[03528]
D = A                                        // ROM[03529]
@ R15                                        // ROM[03530]
M = D                                        // ROM[03531]
@ :eq                                        // ROM[03532]
0; JMP                                       // ROM[03533]
( Cell.dispose:27)

// -------------------------------------
// ARITHMETIC: not
// -------------------------------------
@ SP                                         // ROM[03534]
A = M-1                                      // ROM[03535]
M = !M                                       // ROM[03536]

// -------------------------------------
// IF-GOTO: IF_TRUE0
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03537]
AM = M-1                                     // ROM[03538]
D = M                                        // ROM[03539]
// ---------------------------
@ Cell.dispose$IF_TRUE0                      // ROM[03540]
D; JNE                                       // ROM[03541]

// -------------------------------------
// GOTO: IF_FALSE0
// -------------------------------------
@ Cell.dispose$IF_FALSE0                     // ROM[03542]
0; JMP                                       // ROM[03543]

// -------------------------------------
// LABEL: IF_TRUE0
// -------------------------------------
( Cell.dispose$IF_TRUE0 )

// -------------------------------------
// PUSH: <this, 3>
// -------------------------------------
// ---------------------------
// R13 = index
@ 3                                          // ROM[03544]
D = A                                        // ROM[03545]
@ R13                                        // ROM[03546]
M = D                                        // ROM[03547]
// ---------------------------
// call
@ Cell.dispose:28                            // ROM[03548]
D = A                                        // ROM[03549]
@ R15                                        // ROM[03550]
M = D                                        // ROM[03551]
@ :push_this                                 // ROM[03552]
0; JMP                                       // ROM[03553]
( Cell.dispose:28)

// -------------------------------------
// CALL: String.dispose(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[03554]
D = A                                        // ROM[03555]
@ R13                                        // ROM[03556]
M = D                                        // ROM[03557]
// ---------------------------
// Push RA
@ Cell.dispose:29                            // ROM[03558]
D = A                                        // ROM[03559]
// ---------------------------
// push D
@ SP                                         // ROM[03560]
AM = M+1                                     // ROM[03561]
A = A-1                                      // ROM[03562]
M = D                                        // ROM[03563]
// ---------------------------
// call
@ Cell.dispose:30                            // ROM[03564]
D = A                                        // ROM[03565]
@ R15                                        // ROM[03566]
M = D                                        // ROM[03567]
@ :call                                      // ROM[03568]
0; JMP                                       // ROM[03569]
( Cell.dispose:30)
// ---------------------------
// goto functionName
@ String.dispose                             // ROM[03570]
0; JMP                                       // ROM[03571]
// ---------------------------
// ( RA )
( Cell.dispose:29) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03572]
AM = M-1                                     // ROM[03573]
D = M                                        // ROM[03574]
// ---------------------------
@ 5                                          // ROM[03575]
M = D                                        // ROM[03576]

// -------------------------------------
// LABEL: IF_FALSE0
// -------------------------------------
( Cell.dispose$IF_FALSE0 )

// -------------------------------------
// PUSH: <pointer, 0>
// -------------------------------------
@ 3                                          // ROM[03577]
D = M                                        // ROM[03578]
// ---------------------------
// push D
@ SP                                         // ROM[03579]
AM = M+1                                     // ROM[03580]
A = A-1                                      // ROM[03581]
M = D                                        // ROM[03582]

// -------------------------------------
// CALL: Memory.deAlloc(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[03583]
D = A                                        // ROM[03584]
@ R13                                        // ROM[03585]
M = D                                        // ROM[03586]
// ---------------------------
// Push RA
@ Cell.dispose:31                            // ROM[03587]
D = A                                        // ROM[03588]
// ---------------------------
// push D
@ SP                                         // ROM[03589]
AM = M+1                                     // ROM[03590]
A = A-1                                      // ROM[03591]
M = D                                        // ROM[03592]
// ---------------------------
// call
@ Cell.dispose:32                            // ROM[03593]
D = A                                        // ROM[03594]
@ R15                                        // ROM[03595]
M = D                                        // ROM[03596]
@ :call                                      // ROM[03597]
0; JMP                                       // ROM[03598]
( Cell.dispose:32)
// ---------------------------
// goto functionName
@ Memory.deAlloc                             // ROM[03599]
0; JMP                                       // ROM[03600]
// ---------------------------
// ( RA )
( Cell.dispose:31) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03601]
AM = M-1                                     // ROM[03602]
D = M                                        // ROM[03603]
// ---------------------------
@ 5                                          // ROM[03604]
M = D                                        // ROM[03605]

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[03606]
D = A                                        // ROM[03607]
// ---------------------------
// push D
@ SP                                         // ROM[03608]
AM = M+1                                     // ROM[03609]
A = A-1                                      // ROM[03610]
M = D                                        // ROM[03611]

// -------------------------------------
// RETURN: 
// -------------------------------------
// ---------------------------
// call
@ Cell.dispose:33                            // ROM[03612]
D = A                                        // ROM[03613]
@ R15                                        // ROM[03614]
M = D                                        // ROM[03615]
@ :return                                    // ROM[03616]
0; JMP                                       // ROM[03617]
( Cell.dispose:33)

// =========================================================
// FUNCTION: Cell.draw(2 locals)
// =========================================================

( Cell.draw )
// ---------------------------
// clear local segment
D = 0                                        // ROM[03618]
// ---------------------------
// push D
@ SP                                         // ROM[03619]
AM = M+1                                     // ROM[03620]
A = A-1                                      // ROM[03621]
M = D                                        // ROM[03622]
// ---------------------------
// push D
@ SP                                         // ROM[03623]
AM = M+1                                     // ROM[03624]
A = A-1                                      // ROM[03625]
M = D                                        // ROM[03626]

// -------------------------------------
// PUSH: <argument, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[03627]
D = A                                        // ROM[03628]
@ R13                                        // ROM[03629]
M = D                                        // ROM[03630]
// ---------------------------
// call
@ Cell.draw:34                               // ROM[03631]
D = A                                        // ROM[03632]
@ R15                                        // ROM[03633]
M = D                                        // ROM[03634]
@ :push_argument                             // ROM[03635]
0; JMP                                       // ROM[03636]
( Cell.draw:34)

// -------------------------------------
// POP: <pointer, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03637]
AM = M-1                                     // ROM[03638]
D = M                                        // ROM[03639]
// ---------------------------
@ 3                                          // ROM[03640]
M = D                                        // ROM[03641]

// -------------------------------------
// PUSH: <this, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[03642]
D = A                                        // ROM[03643]
@ R13                                        // ROM[03644]
M = D                                        // ROM[03645]
// ---------------------------
// call
@ Cell.draw:35                               // ROM[03646]
D = A                                        // ROM[03647]
@ R15                                        // ROM[03648]
M = D                                        // ROM[03649]
@ :push_this                                 // ROM[03650]
0; JMP                                       // ROM[03651]
( Cell.draw:35)

// -------------------------------------
// CALL: Screen.setColor(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[03652]
D = A                                        // ROM[03653]
@ R13                                        // ROM[03654]
M = D                                        // ROM[03655]
// ---------------------------
// Push RA
@ Cell.draw:36                               // ROM[03656]
D = A                                        // ROM[03657]
// ---------------------------
// push D
@ SP                                         // ROM[03658]
AM = M+1                                     // ROM[03659]
A = A-1                                      // ROM[03660]
M = D                                        // ROM[03661]
// ---------------------------
// call
@ Cell.draw:37                               // ROM[03662]
D = A                                        // ROM[03663]
@ R15                                        // ROM[03664]
M = D                                        // ROM[03665]
@ :call                                      // ROM[03666]
0; JMP                                       // ROM[03667]
( Cell.draw:37)
// ---------------------------
// goto functionName
@ Screen.setColor                            // ROM[03668]
0; JMP                                       // ROM[03669]
// ---------------------------
// ( RA )
( Cell.draw:36) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03670]
AM = M-1                                     // ROM[03671]
D = M                                        // ROM[03672]
// ---------------------------
@ 5                                          // ROM[03673]
M = D                                        // ROM[03674]

// -------------------------------------
// PUSH: <argument, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[03675]
D = A                                        // ROM[03676]
@ R13                                        // ROM[03677]
M = D                                        // ROM[03678]
// ---------------------------
// call
@ Cell.draw:38                               // ROM[03679]
D = A                                        // ROM[03680]
@ R15                                        // ROM[03681]
M = D                                        // ROM[03682]
@ :push_argument                             // ROM[03683]
0; JMP                                       // ROM[03684]
( Cell.draw:38)

// -------------------------------------
// PUSH: <constant, 8>
// -------------------------------------
@ 8                                          // ROM[03685]
D = A                                        // ROM[03686]
// ---------------------------
// push D
@ SP                                         // ROM[03687]
AM = M+1                                     // ROM[03688]
A = A-1                                      // ROM[03689]
M = D                                        // ROM[03690]

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[03691]
D = A                                        // ROM[03692]
@ R13                                        // ROM[03693]
M = D                                        // ROM[03694]
// ---------------------------
// Push RA
@ Cell.draw:39                               // ROM[03695]
D = A                                        // ROM[03696]
// ---------------------------
// push D
@ SP                                         // ROM[03697]
AM = M+1                                     // ROM[03698]
A = A-1                                      // ROM[03699]
M = D                                        // ROM[03700]
// ---------------------------
// call
@ Cell.draw:40                               // ROM[03701]
D = A                                        // ROM[03702]
@ R15                                        // ROM[03703]
M = D                                        // ROM[03704]
@ :call                                      // ROM[03705]
0; JMP                                       // ROM[03706]
( Cell.draw:40)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[03707]
0; JMP                                       // ROM[03708]
// ---------------------------
// ( RA )
( Cell.draw:39) 

// -------------------------------------
// PUSH: <this, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[03709]
D = A                                        // ROM[03710]
@ R13                                        // ROM[03711]
M = D                                        // ROM[03712]
// ---------------------------
// call
@ Cell.draw:41                               // ROM[03713]
D = A                                        // ROM[03714]
@ R15                                        // ROM[03715]
M = D                                        // ROM[03716]
@ :push_this                                 // ROM[03717]
0; JMP                                       // ROM[03718]
( Cell.draw:41)

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[03719]
D = A                                        // ROM[03720]
@ R13                                        // ROM[03721]
M = D                                        // ROM[03722]
// ---------------------------
// Push RA
@ Cell.draw:42                               // ROM[03723]
D = A                                        // ROM[03724]
// ---------------------------
// push D
@ SP                                         // ROM[03725]
AM = M+1                                     // ROM[03726]
A = A-1                                      // ROM[03727]
M = D                                        // ROM[03728]
// ---------------------------
// call
@ Cell.draw:43                               // ROM[03729]
D = A                                        // ROM[03730]
@ R15                                        // ROM[03731]
M = D                                        // ROM[03732]
@ :call                                      // ROM[03733]
0; JMP                                       // ROM[03734]
( Cell.draw:43)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[03735]
0; JMP                                       // ROM[03736]
// ---------------------------
// ( RA )
( Cell.draw:42) 

// -------------------------------------
// PUSH: <argument, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[03737]
D = A                                        // ROM[03738]
@ R13                                        // ROM[03739]
M = D                                        // ROM[03740]
// ---------------------------
// call
@ Cell.draw:44                               // ROM[03741]
D = A                                        // ROM[03742]
@ R15                                        // ROM[03743]
M = D                                        // ROM[03744]
@ :push_argument                             // ROM[03745]
0; JMP                                       // ROM[03746]
( Cell.draw:44)

// -------------------------------------
// PUSH: <constant, 11>
// -------------------------------------
@ 11                                         // ROM[03747]
D = A                                        // ROM[03748]
// ---------------------------
// push D
@ SP                                         // ROM[03749]
AM = M+1                                     // ROM[03750]
A = A-1                                      // ROM[03751]
M = D                                        // ROM[03752]

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[03753]
D = A                                        // ROM[03754]
@ R13                                        // ROM[03755]
M = D                                        // ROM[03756]
// ---------------------------
// Push RA
@ Cell.draw:45                               // ROM[03757]
D = A                                        // ROM[03758]
// ---------------------------
// push D
@ SP                                         // ROM[03759]
AM = M+1                                     // ROM[03760]
A = A-1                                      // ROM[03761]
M = D                                        // ROM[03762]
// ---------------------------
// call
@ Cell.draw:46                               // ROM[03763]
D = A                                        // ROM[03764]
@ R15                                        // ROM[03765]
M = D                                        // ROM[03766]
@ :call                                      // ROM[03767]
0; JMP                                       // ROM[03768]
( Cell.draw:46)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[03769]
0; JMP                                       // ROM[03770]
// ---------------------------
// ( RA )
( Cell.draw:45) 

// -------------------------------------
// PUSH: <this, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[03771]
D = A                                        // ROM[03772]
@ R13                                        // ROM[03773]
M = D                                        // ROM[03774]
// ---------------------------
// call
@ Cell.draw:47                               // ROM[03775]
D = A                                        // ROM[03776]
@ R15                                        // ROM[03777]
M = D                                        // ROM[03778]
@ :push_this                                 // ROM[03779]
0; JMP                                       // ROM[03780]
( Cell.draw:47)

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[03781]
D = A                                        // ROM[03782]
@ R13                                        // ROM[03783]
M = D                                        // ROM[03784]
// ---------------------------
// Push RA
@ Cell.draw:48                               // ROM[03785]
D = A                                        // ROM[03786]
// ---------------------------
// push D
@ SP                                         // ROM[03787]
AM = M+1                                     // ROM[03788]
A = A-1                                      // ROM[03789]
M = D                                        // ROM[03790]
// ---------------------------
// call
@ Cell.draw:49                               // ROM[03791]
D = A                                        // ROM[03792]
@ R15                                        // ROM[03793]
M = D                                        // ROM[03794]
@ :call                                      // ROM[03795]
0; JMP                                       // ROM[03796]
( Cell.draw:49)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[03797]
0; JMP                                       // ROM[03798]
// ---------------------------
// ( RA )
( Cell.draw:48) 

// -------------------------------------
// PUSH: <argument, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[03799]
D = A                                        // ROM[03800]
@ R13                                        // ROM[03801]
M = D                                        // ROM[03802]
// ---------------------------
// call
@ Cell.draw:50                               // ROM[03803]
D = A                                        // ROM[03804]
@ R15                                        // ROM[03805]
M = D                                        // ROM[03806]
@ :push_argument                             // ROM[03807]
0; JMP                                       // ROM[03808]
( Cell.draw:50)

// -------------------------------------
// PUSH: <constant, 8>
// -------------------------------------
@ 8                                          // ROM[03809]
D = A                                        // ROM[03810]
// ---------------------------
// push D
@ SP                                         // ROM[03811]
AM = M+1                                     // ROM[03812]
A = A-1                                      // ROM[03813]
M = D                                        // ROM[03814]

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[03815]
D = A                                        // ROM[03816]
@ R13                                        // ROM[03817]
M = D                                        // ROM[03818]
// ---------------------------
// Push RA
@ Cell.draw:51                               // ROM[03819]
D = A                                        // ROM[03820]
// ---------------------------
// push D
@ SP                                         // ROM[03821]
AM = M+1                                     // ROM[03822]
A = A-1                                      // ROM[03823]
M = D                                        // ROM[03824]
// ---------------------------
// call
@ Cell.draw:52                               // ROM[03825]
D = A                                        // ROM[03826]
@ R15                                        // ROM[03827]
M = D                                        // ROM[03828]
@ :call                                      // ROM[03829]
0; JMP                                       // ROM[03830]
( Cell.draw:52)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[03831]
0; JMP                                       // ROM[03832]
// ---------------------------
// ( RA )
( Cell.draw:51) 

// -------------------------------------
// PUSH: <this, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[03833]
D = A                                        // ROM[03834]
@ R13                                        // ROM[03835]
M = D                                        // ROM[03836]
// ---------------------------
// call
@ Cell.draw:53                               // ROM[03837]
D = A                                        // ROM[03838]
@ R15                                        // ROM[03839]
M = D                                        // ROM[03840]
@ :push_this                                 // ROM[03841]
0; JMP                                       // ROM[03842]
( Cell.draw:53)

// -------------------------------------
// PUSH: <constant, 1>
// -------------------------------------
@ 1                                          // ROM[03843]
D = A                                        // ROM[03844]
// ---------------------------
// push D
@ SP                                         // ROM[03845]
AM = M+1                                     // ROM[03846]
A = A-1                                      // ROM[03847]
M = D                                        // ROM[03848]

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Cell.draw:54                               // ROM[03849]
D = A                                        // ROM[03850]
@ R15                                        // ROM[03851]
M = D                                        // ROM[03852]
@ :add                                       // ROM[03853]
0; JMP                                       // ROM[03854]
( Cell.draw:54)

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[03855]
D = A                                        // ROM[03856]
@ R13                                        // ROM[03857]
M = D                                        // ROM[03858]
// ---------------------------
// Push RA
@ Cell.draw:55                               // ROM[03859]
D = A                                        // ROM[03860]
// ---------------------------
// push D
@ SP                                         // ROM[03861]
AM = M+1                                     // ROM[03862]
A = A-1                                      // ROM[03863]
M = D                                        // ROM[03864]
// ---------------------------
// call
@ Cell.draw:56                               // ROM[03865]
D = A                                        // ROM[03866]
@ R15                                        // ROM[03867]
M = D                                        // ROM[03868]
@ :call                                      // ROM[03869]
0; JMP                                       // ROM[03870]
( Cell.draw:56)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[03871]
0; JMP                                       // ROM[03872]
// ---------------------------
// ( RA )
( Cell.draw:55) 

// -------------------------------------
// PUSH: <constant, 1>
// -------------------------------------
@ 1                                          // ROM[03873]
D = A                                        // ROM[03874]
// ---------------------------
// push D
@ SP                                         // ROM[03875]
AM = M+1                                     // ROM[03876]
A = A-1                                      // ROM[03877]
M = D                                        // ROM[03878]

// -------------------------------------
// ARITHMETIC: sub
// -------------------------------------
// ---------------------------
// call
@ Cell.draw:57                               // ROM[03879]
D = A                                        // ROM[03880]
@ R15                                        // ROM[03881]
M = D                                        // ROM[03882]
@ :sub                                       // ROM[03883]
0; JMP                                       // ROM[03884]
( Cell.draw:57)

// -------------------------------------
// PUSH: <argument, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[03885]
D = A                                        // ROM[03886]
@ R13                                        // ROM[03887]
M = D                                        // ROM[03888]
// ---------------------------
// call
@ Cell.draw:58                               // ROM[03889]
D = A                                        // ROM[03890]
@ R15                                        // ROM[03891]
M = D                                        // ROM[03892]
@ :push_argument                             // ROM[03893]
0; JMP                                       // ROM[03894]
( Cell.draw:58)

// -------------------------------------
// PUSH: <constant, 11>
// -------------------------------------
@ 11                                         // ROM[03895]
D = A                                        // ROM[03896]
// ---------------------------
// push D
@ SP                                         // ROM[03897]
AM = M+1                                     // ROM[03898]
A = A-1                                      // ROM[03899]
M = D                                        // ROM[03900]

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[03901]
D = A                                        // ROM[03902]
@ R13                                        // ROM[03903]
M = D                                        // ROM[03904]
// ---------------------------
// Push RA
@ Cell.draw:59                               // ROM[03905]
D = A                                        // ROM[03906]
// ---------------------------
// push D
@ SP                                         // ROM[03907]
AM = M+1                                     // ROM[03908]
A = A-1                                      // ROM[03909]
M = D                                        // ROM[03910]
// ---------------------------
// call
@ Cell.draw:60                               // ROM[03911]
D = A                                        // ROM[03912]
@ R15                                        // ROM[03913]
M = D                                        // ROM[03914]
@ :call                                      // ROM[03915]
0; JMP                                       // ROM[03916]
( Cell.draw:60)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[03917]
0; JMP                                       // ROM[03918]
// ---------------------------
// ( RA )
( Cell.draw:59) 

// -------------------------------------
// PUSH: <this, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[03919]
D = A                                        // ROM[03920]
@ R13                                        // ROM[03921]
M = D                                        // ROM[03922]
// ---------------------------
// call
@ Cell.draw:61                               // ROM[03923]
D = A                                        // ROM[03924]
@ R15                                        // ROM[03925]
M = D                                        // ROM[03926]
@ :push_this                                 // ROM[03927]
0; JMP                                       // ROM[03928]
( Cell.draw:61)

// -------------------------------------
// PUSH: <constant, 1>
// -------------------------------------
@ 1                                          // ROM[03929]
D = A                                        // ROM[03930]
// ---------------------------
// push D
@ SP                                         // ROM[03931]
AM = M+1                                     // ROM[03932]
A = A-1                                      // ROM[03933]
M = D                                        // ROM[03934]

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Cell.draw:62                               // ROM[03935]
D = A                                        // ROM[03936]
@ R15                                        // ROM[03937]
M = D                                        // ROM[03938]
@ :add                                       // ROM[03939]
0; JMP                                       // ROM[03940]
( Cell.draw:62)

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[03941]
D = A                                        // ROM[03942]
@ R13                                        // ROM[03943]
M = D                                        // ROM[03944]
// ---------------------------
// Push RA
@ Cell.draw:63                               // ROM[03945]
D = A                                        // ROM[03946]
// ---------------------------
// push D
@ SP                                         // ROM[03947]
AM = M+1                                     // ROM[03948]
A = A-1                                      // ROM[03949]
M = D                                        // ROM[03950]
// ---------------------------
// call
@ Cell.draw:64                               // ROM[03951]
D = A                                        // ROM[03952]
@ R15                                        // ROM[03953]
M = D                                        // ROM[03954]
@ :call                                      // ROM[03955]
0; JMP                                       // ROM[03956]
( Cell.draw:64)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[03957]
0; JMP                                       // ROM[03958]
// ---------------------------
// ( RA )
( Cell.draw:63) 

// -------------------------------------
// PUSH: <constant, 1>
// -------------------------------------
@ 1                                          // ROM[03959]
D = A                                        // ROM[03960]
// ---------------------------
// push D
@ SP                                         // ROM[03961]
AM = M+1                                     // ROM[03962]
A = A-1                                      // ROM[03963]
M = D                                        // ROM[03964]

// -------------------------------------
// ARITHMETIC: sub
// -------------------------------------
// ---------------------------
// call
@ Cell.draw:65                               // ROM[03965]
D = A                                        // ROM[03966]
@ R15                                        // ROM[03967]
M = D                                        // ROM[03968]
@ :sub                                       // ROM[03969]
0; JMP                                       // ROM[03970]
( Cell.draw:65)

// -------------------------------------
// CALL: Screen.drawRectangle(4 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 4                                          // ROM[03971]
D = A                                        // ROM[03972]
@ R13                                        // ROM[03973]
M = D                                        // ROM[03974]
// ---------------------------
// Push RA
@ Cell.draw:66                               // ROM[03975]
D = A                                        // ROM[03976]
// ---------------------------
// push D
@ SP                                         // ROM[03977]
AM = M+1                                     // ROM[03978]
A = A-1                                      // ROM[03979]
M = D                                        // ROM[03980]
// ---------------------------
// call
@ Cell.draw:67                               // ROM[03981]
D = A                                        // ROM[03982]
@ R15                                        // ROM[03983]
M = D                                        // ROM[03984]
@ :call                                      // ROM[03985]
0; JMP                                       // ROM[03986]
( Cell.draw:67)
// ---------------------------
// goto functionName
@ Screen.drawRectangle                       // ROM[03987]
0; JMP                                       // ROM[03988]
// ---------------------------
// ( RA )
( Cell.draw:66) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[03989]
AM = M-1                                     // ROM[03990]
D = M                                        // ROM[03991]
// ---------------------------
@ 5                                          // ROM[03992]
M = D                                        // ROM[03993]

// -------------------------------------
// PUSH: <this, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[03994]
D = A                                        // ROM[03995]
@ R13                                        // ROM[03996]
M = D                                        // ROM[03997]
// ---------------------------
// call
@ Cell.draw:68                               // ROM[03998]
D = A                                        // ROM[03999]
@ R15                                        // ROM[04000]
M = D                                        // ROM[04001]
@ :push_this                                 // ROM[04002]
0; JMP                                       // ROM[04003]
( Cell.draw:68)

// -------------------------------------
// ARITHMETIC: not
// -------------------------------------
@ SP                                         // ROM[04004]
A = M-1                                      // ROM[04005]
M = !M                                       // ROM[04006]

// -------------------------------------
// POP: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[04007]
D = A                                        // ROM[04008]
@ R13                                        // ROM[04009]
M = D                                        // ROM[04010]
// ---------------------------
// call
@ Cell.draw:69                               // ROM[04011]
D = A                                        // ROM[04012]
@ R15                                        // ROM[04013]
M = D                                        // ROM[04014]
@ :pop_local                                 // ROM[04015]
0; JMP                                       // ROM[04016]
( Cell.draw:69)

// -------------------------------------
// PUSH: <argument, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[04017]
D = A                                        // ROM[04018]
@ R13                                        // ROM[04019]
M = D                                        // ROM[04020]
// ---------------------------
// call
@ Cell.draw:70                               // ROM[04021]
D = A                                        // ROM[04022]
@ R15                                        // ROM[04023]
M = D                                        // ROM[04024]
@ :push_argument                             // ROM[04025]
0; JMP                                       // ROM[04026]
( Cell.draw:70)

// -------------------------------------
// PUSH: <constant, 8>
// -------------------------------------
@ 8                                          // ROM[04027]
D = A                                        // ROM[04028]
// ---------------------------
// push D
@ SP                                         // ROM[04029]
AM = M+1                                     // ROM[04030]
A = A-1                                      // ROM[04031]
M = D                                        // ROM[04032]

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04033]
D = A                                        // ROM[04034]
@ R13                                        // ROM[04035]
M = D                                        // ROM[04036]
// ---------------------------
// Push RA
@ Cell.draw:71                               // ROM[04037]
D = A                                        // ROM[04038]
// ---------------------------
// push D
@ SP                                         // ROM[04039]
AM = M+1                                     // ROM[04040]
A = A-1                                      // ROM[04041]
M = D                                        // ROM[04042]
// ---------------------------
// call
@ Cell.draw:72                               // ROM[04043]
D = A                                        // ROM[04044]
@ R15                                        // ROM[04045]
M = D                                        // ROM[04046]
@ :call                                      // ROM[04047]
0; JMP                                       // ROM[04048]
( Cell.draw:72)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[04049]
0; JMP                                       // ROM[04050]
// ---------------------------
// ( RA )
( Cell.draw:71) 

// -------------------------------------
// PUSH: <argument, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[04051]
D = A                                        // ROM[04052]
@ R13                                        // ROM[04053]
M = D                                        // ROM[04054]
// ---------------------------
// call
@ Cell.draw:73                               // ROM[04055]
D = A                                        // ROM[04056]
@ R15                                        // ROM[04057]
M = D                                        // ROM[04058]
@ :push_argument                             // ROM[04059]
0; JMP                                       // ROM[04060]
( Cell.draw:73)

// -------------------------------------
// PUSH: <constant, 11>
// -------------------------------------
@ 11                                         // ROM[04061]
D = A                                        // ROM[04062]
// ---------------------------
// push D
@ SP                                         // ROM[04063]
AM = M+1                                     // ROM[04064]
A = A-1                                      // ROM[04065]
M = D                                        // ROM[04066]

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04067]
D = A                                        // ROM[04068]
@ R13                                        // ROM[04069]
M = D                                        // ROM[04070]
// ---------------------------
// Push RA
@ Cell.draw:74                               // ROM[04071]
D = A                                        // ROM[04072]
// ---------------------------
// push D
@ SP                                         // ROM[04073]
AM = M+1                                     // ROM[04074]
A = A-1                                      // ROM[04075]
M = D                                        // ROM[04076]
// ---------------------------
// call
@ Cell.draw:75                               // ROM[04077]
D = A                                        // ROM[04078]
@ R15                                        // ROM[04079]
M = D                                        // ROM[04080]
@ :call                                      // ROM[04081]
0; JMP                                       // ROM[04082]
( Cell.draw:75)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[04083]
0; JMP                                       // ROM[04084]
// ---------------------------
// ( RA )
( Cell.draw:74) 

// -------------------------------------
// CALL: Math.min(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04085]
D = A                                        // ROM[04086]
@ R13                                        // ROM[04087]
M = D                                        // ROM[04088]
// ---------------------------
// Push RA
@ Cell.draw:76                               // ROM[04089]
D = A                                        // ROM[04090]
// ---------------------------
// push D
@ SP                                         // ROM[04091]
AM = M+1                                     // ROM[04092]
A = A-1                                      // ROM[04093]
M = D                                        // ROM[04094]
// ---------------------------
// call
@ Cell.draw:77                               // ROM[04095]
D = A                                        // ROM[04096]
@ R15                                        // ROM[04097]
M = D                                        // ROM[04098]
@ :call                                      // ROM[04099]
0; JMP                                       // ROM[04100]
( Cell.draw:77)
// ---------------------------
// goto functionName
@ Math.min                                   // ROM[04101]
0; JMP                                       // ROM[04102]
// ---------------------------
// ( RA )
( Cell.draw:76) 

// -------------------------------------
// PUSH: <constant, 2>
// -------------------------------------
@ 2                                          // ROM[04103]
D = A                                        // ROM[04104]
// ---------------------------
// push D
@ SP                                         // ROM[04105]
AM = M+1                                     // ROM[04106]
A = A-1                                      // ROM[04107]
M = D                                        // ROM[04108]

// -------------------------------------
// CALL: Math.divide(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04109]
D = A                                        // ROM[04110]
@ R13                                        // ROM[04111]
M = D                                        // ROM[04112]
// ---------------------------
// Push RA
@ Cell.draw:78                               // ROM[04113]
D = A                                        // ROM[04114]
// ---------------------------
// push D
@ SP                                         // ROM[04115]
AM = M+1                                     // ROM[04116]
A = A-1                                      // ROM[04117]
M = D                                        // ROM[04118]
// ---------------------------
// call
@ Cell.draw:79                               // ROM[04119]
D = A                                        // ROM[04120]
@ R15                                        // ROM[04121]
M = D                                        // ROM[04122]
@ :call                                      // ROM[04123]
0; JMP                                       // ROM[04124]
( Cell.draw:79)
// ---------------------------
// goto functionName
@ Math.divide                                // ROM[04125]
0; JMP                                       // ROM[04126]
// ---------------------------
// ( RA )
( Cell.draw:78) 

// -------------------------------------
// POP: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[04127]
D = A                                        // ROM[04128]
@ R13                                        // ROM[04129]
M = D                                        // ROM[04130]
// ---------------------------
// call
@ Cell.draw:80                               // ROM[04131]
D = A                                        // ROM[04132]
@ R15                                        // ROM[04133]
M = D                                        // ROM[04134]
@ :pop_local                                 // ROM[04135]
0; JMP                                       // ROM[04136]
( Cell.draw:80)

// -------------------------------------
// LABEL: LOOP1
// -------------------------------------
( Cell.draw$LOOP1 )

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[04137]
D = A                                        // ROM[04138]
@ R13                                        // ROM[04139]
M = D                                        // ROM[04140]
// ---------------------------
// call
@ Cell.draw:81                               // ROM[04141]
D = A                                        // ROM[04142]
@ R15                                        // ROM[04143]
M = D                                        // ROM[04144]
@ :push_local                                // ROM[04145]
0; JMP                                       // ROM[04146]
( Cell.draw:81)

// -------------------------------------
// PUSH: <argument, 3>
// -------------------------------------
// ---------------------------
// R13 = index
@ 3                                          // ROM[04147]
D = A                                        // ROM[04148]
@ R13                                        // ROM[04149]
M = D                                        // ROM[04150]
// ---------------------------
// call
@ Cell.draw:82                               // ROM[04151]
D = A                                        // ROM[04152]
@ R15                                        // ROM[04153]
M = D                                        // ROM[04154]
@ :push_argument                             // ROM[04155]
0; JMP                                       // ROM[04156]
( Cell.draw:82)

// -------------------------------------
// ARITHMETIC: gt
// -------------------------------------
// ---------------------------
// call
@ Cell.draw:83                               // ROM[04157]
D = A                                        // ROM[04158]
@ R15                                        // ROM[04159]
M = D                                        // ROM[04160]
@ :gt                                        // ROM[04161]
0; JMP                                       // ROM[04162]
( Cell.draw:83)

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[04163]
D = A                                        // ROM[04164]
@ R13                                        // ROM[04165]
M = D                                        // ROM[04166]
// ---------------------------
// call
@ Cell.draw:84                               // ROM[04167]
D = A                                        // ROM[04168]
@ R15                                        // ROM[04169]
M = D                                        // ROM[04170]
@ :push_local                                // ROM[04171]
0; JMP                                       // ROM[04172]
( Cell.draw:84)

// -------------------------------------
// PUSH: <argument, 3>
// -------------------------------------
// ---------------------------
// R13 = index
@ 3                                          // ROM[04173]
D = A                                        // ROM[04174]
@ R13                                        // ROM[04175]
M = D                                        // ROM[04176]
// ---------------------------
// call
@ Cell.draw:85                               // ROM[04177]
D = A                                        // ROM[04178]
@ R15                                        // ROM[04179]
M = D                                        // ROM[04180]
@ :push_argument                             // ROM[04181]
0; JMP                                       // ROM[04182]
( Cell.draw:85)

// -------------------------------------
// ARITHMETIC: eq
// -------------------------------------
// ---------------------------
// call
@ Cell.draw:86                               // ROM[04183]
D = A                                        // ROM[04184]
@ R15                                        // ROM[04185]
M = D                                        // ROM[04186]
@ :eq                                        // ROM[04187]
0; JMP                                       // ROM[04188]
( Cell.draw:86)

// -------------------------------------
// ARITHMETIC: or
// -------------------------------------
// ---------------------------
// call
@ Cell.draw:87                               // ROM[04189]
D = A                                        // ROM[04190]
@ R15                                        // ROM[04191]
M = D                                        // ROM[04192]
@ :or                                        // ROM[04193]
0; JMP                                       // ROM[04194]
( Cell.draw:87)

// -------------------------------------
// ARITHMETIC: not
// -------------------------------------
@ SP                                         // ROM[04195]
A = M-1                                      // ROM[04196]
M = !M                                       // ROM[04197]

// -------------------------------------
// IF-GOTO: END1
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[04198]
AM = M-1                                     // ROM[04199]
D = M                                        // ROM[04200]
// ---------------------------
@ Cell.draw$END1                             // ROM[04201]
D; JNE                                       // ROM[04202]

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[04203]
D = A                                        // ROM[04204]
@ R13                                        // ROM[04205]
M = D                                        // ROM[04206]
// ---------------------------
// call
@ Cell.draw:88                               // ROM[04207]
D = A                                        // ROM[04208]
@ R15                                        // ROM[04209]
M = D                                        // ROM[04210]
@ :push_local                                // ROM[04211]
0; JMP                                       // ROM[04212]
( Cell.draw:88)

// -------------------------------------
// CALL: Screen.setColor(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[04213]
D = A                                        // ROM[04214]
@ R13                                        // ROM[04215]
M = D                                        // ROM[04216]
// ---------------------------
// Push RA
@ Cell.draw:89                               // ROM[04217]
D = A                                        // ROM[04218]
// ---------------------------
// push D
@ SP                                         // ROM[04219]
AM = M+1                                     // ROM[04220]
A = A-1                                      // ROM[04221]
M = D                                        // ROM[04222]
// ---------------------------
// call
@ Cell.draw:90                               // ROM[04223]
D = A                                        // ROM[04224]
@ R15                                        // ROM[04225]
M = D                                        // ROM[04226]
@ :call                                      // ROM[04227]
0; JMP                                       // ROM[04228]
( Cell.draw:90)
// ---------------------------
// goto functionName
@ Screen.setColor                            // ROM[04229]
0; JMP                                       // ROM[04230]
// ---------------------------
// ( RA )
( Cell.draw:89) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[04231]
AM = M-1                                     // ROM[04232]
D = M                                        // ROM[04233]
// ---------------------------
@ 5                                          // ROM[04234]
M = D                                        // ROM[04235]

// -------------------------------------
// PUSH: <argument, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[04236]
D = A                                        // ROM[04237]
@ R13                                        // ROM[04238]
M = D                                        // ROM[04239]
// ---------------------------
// call
@ Cell.draw:91                               // ROM[04240]
D = A                                        // ROM[04241]
@ R15                                        // ROM[04242]
M = D                                        // ROM[04243]
@ :push_argument                             // ROM[04244]
0; JMP                                       // ROM[04245]
( Cell.draw:91)

// -------------------------------------
// PUSH: <constant, 8>
// -------------------------------------
@ 8                                          // ROM[04246]
D = A                                        // ROM[04247]
// ---------------------------
// push D
@ SP                                         // ROM[04248]
AM = M+1                                     // ROM[04249]
A = A-1                                      // ROM[04250]
M = D                                        // ROM[04251]

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04252]
D = A                                        // ROM[04253]
@ R13                                        // ROM[04254]
M = D                                        // ROM[04255]
// ---------------------------
// Push RA
@ Cell.draw:92                               // ROM[04256]
D = A                                        // ROM[04257]
// ---------------------------
// push D
@ SP                                         // ROM[04258]
AM = M+1                                     // ROM[04259]
A = A-1                                      // ROM[04260]
M = D                                        // ROM[04261]
// ---------------------------
// call
@ Cell.draw:93                               // ROM[04262]
D = A                                        // ROM[04263]
@ R15                                        // ROM[04264]
M = D                                        // ROM[04265]
@ :call                                      // ROM[04266]
0; JMP                                       // ROM[04267]
( Cell.draw:93)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[04268]
0; JMP                                       // ROM[04269]
// ---------------------------
// ( RA )
( Cell.draw:92) 

// -------------------------------------
// PUSH: <this, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[04270]
D = A                                        // ROM[04271]
@ R13                                        // ROM[04272]
M = D                                        // ROM[04273]
// ---------------------------
// call
@ Cell.draw:94                               // ROM[04274]
D = A                                        // ROM[04275]
@ R15                                        // ROM[04276]
M = D                                        // ROM[04277]
@ :push_this                                 // ROM[04278]
0; JMP                                       // ROM[04279]
( Cell.draw:94)

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04280]
D = A                                        // ROM[04281]
@ R13                                        // ROM[04282]
M = D                                        // ROM[04283]
// ---------------------------
// Push RA
@ Cell.draw:95                               // ROM[04284]
D = A                                        // ROM[04285]
// ---------------------------
// push D
@ SP                                         // ROM[04286]
AM = M+1                                     // ROM[04287]
A = A-1                                      // ROM[04288]
M = D                                        // ROM[04289]
// ---------------------------
// call
@ Cell.draw:96                               // ROM[04290]
D = A                                        // ROM[04291]
@ R15                                        // ROM[04292]
M = D                                        // ROM[04293]
@ :call                                      // ROM[04294]
0; JMP                                       // ROM[04295]
( Cell.draw:96)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[04296]
0; JMP                                       // ROM[04297]
// ---------------------------
// ( RA )
( Cell.draw:95) 

// -------------------------------------
// PUSH: <argument, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[04298]
D = A                                        // ROM[04299]
@ R13                                        // ROM[04300]
M = D                                        // ROM[04301]
// ---------------------------
// call
@ Cell.draw:97                               // ROM[04302]
D = A                                        // ROM[04303]
@ R15                                        // ROM[04304]
M = D                                        // ROM[04305]
@ :push_argument                             // ROM[04306]
0; JMP                                       // ROM[04307]
( Cell.draw:97)

// -------------------------------------
// PUSH: <constant, 8>
// -------------------------------------
@ 8                                          // ROM[04308]
D = A                                        // ROM[04309]
// ---------------------------
// push D
@ SP                                         // ROM[04310]
AM = M+1                                     // ROM[04311]
A = A-1                                      // ROM[04312]
M = D                                        // ROM[04313]

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04314]
D = A                                        // ROM[04315]
@ R13                                        // ROM[04316]
M = D                                        // ROM[04317]
// ---------------------------
// Push RA
@ Cell.draw:98                               // ROM[04318]
D = A                                        // ROM[04319]
// ---------------------------
// push D
@ SP                                         // ROM[04320]
AM = M+1                                     // ROM[04321]
A = A-1                                      // ROM[04322]
M = D                                        // ROM[04323]
// ---------------------------
// call
@ Cell.draw:99                               // ROM[04324]
D = A                                        // ROM[04325]
@ R15                                        // ROM[04326]
M = D                                        // ROM[04327]
@ :call                                      // ROM[04328]
0; JMP                                       // ROM[04329]
( Cell.draw:99)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[04330]
0; JMP                                       // ROM[04331]
// ---------------------------
// ( RA )
( Cell.draw:98) 

// -------------------------------------
// PUSH: <constant, 2>
// -------------------------------------
@ 2                                          // ROM[04332]
D = A                                        // ROM[04333]
// ---------------------------
// push D
@ SP                                         // ROM[04334]
AM = M+1                                     // ROM[04335]
A = A-1                                      // ROM[04336]
M = D                                        // ROM[04337]

// -------------------------------------
// CALL: Math.divide(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04338]
D = A                                        // ROM[04339]
@ R13                                        // ROM[04340]
M = D                                        // ROM[04341]
// ---------------------------
// Push RA
@ Cell.draw:100                              // ROM[04342]
D = A                                        // ROM[04343]
// ---------------------------
// push D
@ SP                                         // ROM[04344]
AM = M+1                                     // ROM[04345]
A = A-1                                      // ROM[04346]
M = D                                        // ROM[04347]
// ---------------------------
// call
@ Cell.draw:101                              // ROM[04348]
D = A                                        // ROM[04349]
@ R15                                        // ROM[04350]
M = D                                        // ROM[04351]
@ :call                                      // ROM[04352]
0; JMP                                       // ROM[04353]
( Cell.draw:101)
// ---------------------------
// goto functionName
@ Math.divide                                // ROM[04354]
0; JMP                                       // ROM[04355]
// ---------------------------
// ( RA )
( Cell.draw:100) 

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Cell.draw:102                              // ROM[04356]
D = A                                        // ROM[04357]
@ R15                                        // ROM[04358]
M = D                                        // ROM[04359]
@ :add                                       // ROM[04360]
0; JMP                                       // ROM[04361]
( Cell.draw:102)

// -------------------------------------
// PUSH: <argument, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[04362]
D = A                                        // ROM[04363]
@ R13                                        // ROM[04364]
M = D                                        // ROM[04365]
// ---------------------------
// call
@ Cell.draw:103                              // ROM[04366]
D = A                                        // ROM[04367]
@ R15                                        // ROM[04368]
M = D                                        // ROM[04369]
@ :push_argument                             // ROM[04370]
0; JMP                                       // ROM[04371]
( Cell.draw:103)

// -------------------------------------
// PUSH: <constant, 11>
// -------------------------------------
@ 11                                         // ROM[04372]
D = A                                        // ROM[04373]
// ---------------------------
// push D
@ SP                                         // ROM[04374]
AM = M+1                                     // ROM[04375]
A = A-1                                      // ROM[04376]
M = D                                        // ROM[04377]

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04378]
D = A                                        // ROM[04379]
@ R13                                        // ROM[04380]
M = D                                        // ROM[04381]
// ---------------------------
// Push RA
@ Cell.draw:104                              // ROM[04382]
D = A                                        // ROM[04383]
// ---------------------------
// push D
@ SP                                         // ROM[04384]
AM = M+1                                     // ROM[04385]
A = A-1                                      // ROM[04386]
M = D                                        // ROM[04387]
// ---------------------------
// call
@ Cell.draw:105                              // ROM[04388]
D = A                                        // ROM[04389]
@ R15                                        // ROM[04390]
M = D                                        // ROM[04391]
@ :call                                      // ROM[04392]
0; JMP                                       // ROM[04393]
( Cell.draw:105)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[04394]
0; JMP                                       // ROM[04395]
// ---------------------------
// ( RA )
( Cell.draw:104) 

// -------------------------------------
// PUSH: <this, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[04396]
D = A                                        // ROM[04397]
@ R13                                        // ROM[04398]
M = D                                        // ROM[04399]
// ---------------------------
// call
@ Cell.draw:106                              // ROM[04400]
D = A                                        // ROM[04401]
@ R15                                        // ROM[04402]
M = D                                        // ROM[04403]
@ :push_this                                 // ROM[04404]
0; JMP                                       // ROM[04405]
( Cell.draw:106)

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04406]
D = A                                        // ROM[04407]
@ R13                                        // ROM[04408]
M = D                                        // ROM[04409]
// ---------------------------
// Push RA
@ Cell.draw:107                              // ROM[04410]
D = A                                        // ROM[04411]
// ---------------------------
// push D
@ SP                                         // ROM[04412]
AM = M+1                                     // ROM[04413]
A = A-1                                      // ROM[04414]
M = D                                        // ROM[04415]
// ---------------------------
// call
@ Cell.draw:108                              // ROM[04416]
D = A                                        // ROM[04417]
@ R15                                        // ROM[04418]
M = D                                        // ROM[04419]
@ :call                                      // ROM[04420]
0; JMP                                       // ROM[04421]
( Cell.draw:108)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[04422]
0; JMP                                       // ROM[04423]
// ---------------------------
// ( RA )
( Cell.draw:107) 

// -------------------------------------
// PUSH: <argument, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[04424]
D = A                                        // ROM[04425]
@ R13                                        // ROM[04426]
M = D                                        // ROM[04427]
// ---------------------------
// call
@ Cell.draw:109                              // ROM[04428]
D = A                                        // ROM[04429]
@ R15                                        // ROM[04430]
M = D                                        // ROM[04431]
@ :push_argument                             // ROM[04432]
0; JMP                                       // ROM[04433]
( Cell.draw:109)

// -------------------------------------
// PUSH: <constant, 11>
// -------------------------------------
@ 11                                         // ROM[04434]
D = A                                        // ROM[04435]
// ---------------------------
// push D
@ SP                                         // ROM[04436]
AM = M+1                                     // ROM[04437]
A = A-1                                      // ROM[04438]
M = D                                        // ROM[04439]

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04440]
D = A                                        // ROM[04441]
@ R13                                        // ROM[04442]
M = D                                        // ROM[04443]
// ---------------------------
// Push RA
@ Cell.draw:110                              // ROM[04444]
D = A                                        // ROM[04445]
// ---------------------------
// push D
@ SP                                         // ROM[04446]
AM = M+1                                     // ROM[04447]
A = A-1                                      // ROM[04448]
M = D                                        // ROM[04449]
// ---------------------------
// call
@ Cell.draw:111                              // ROM[04450]
D = A                                        // ROM[04451]
@ R15                                        // ROM[04452]
M = D                                        // ROM[04453]
@ :call                                      // ROM[04454]
0; JMP                                       // ROM[04455]
( Cell.draw:111)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[04456]
0; JMP                                       // ROM[04457]
// ---------------------------
// ( RA )
( Cell.draw:110) 

// -------------------------------------
// PUSH: <constant, 2>
// -------------------------------------
@ 2                                          // ROM[04458]
D = A                                        // ROM[04459]
// ---------------------------
// push D
@ SP                                         // ROM[04460]
AM = M+1                                     // ROM[04461]
A = A-1                                      // ROM[04462]
M = D                                        // ROM[04463]

// -------------------------------------
// CALL: Math.divide(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04464]
D = A                                        // ROM[04465]
@ R13                                        // ROM[04466]
M = D                                        // ROM[04467]
// ---------------------------
// Push RA
@ Cell.draw:112                              // ROM[04468]
D = A                                        // ROM[04469]
// ---------------------------
// push D
@ SP                                         // ROM[04470]
AM = M+1                                     // ROM[04471]
A = A-1                                      // ROM[04472]
M = D                                        // ROM[04473]
// ---------------------------
// call
@ Cell.draw:113                              // ROM[04474]
D = A                                        // ROM[04475]
@ R15                                        // ROM[04476]
M = D                                        // ROM[04477]
@ :call                                      // ROM[04478]
0; JMP                                       // ROM[04479]
( Cell.draw:113)
// ---------------------------
// goto functionName
@ Math.divide                                // ROM[04480]
0; JMP                                       // ROM[04481]
// ---------------------------
// ( RA )
( Cell.draw:112) 

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Cell.draw:114                              // ROM[04482]
D = A                                        // ROM[04483]
@ R15                                        // ROM[04484]
M = D                                        // ROM[04485]
@ :add                                       // ROM[04486]
0; JMP                                       // ROM[04487]
( Cell.draw:114)

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[04488]
D = A                                        // ROM[04489]
@ R13                                        // ROM[04490]
M = D                                        // ROM[04491]
// ---------------------------
// call
@ Cell.draw:115                              // ROM[04492]
D = A                                        // ROM[04493]
@ R15                                        // ROM[04494]
M = D                                        // ROM[04495]
@ :push_local                                // ROM[04496]
0; JMP                                       // ROM[04497]
( Cell.draw:115)

// -------------------------------------
// CALL: Screen.drawCircle(3 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 3                                          // ROM[04498]
D = A                                        // ROM[04499]
@ R13                                        // ROM[04500]
M = D                                        // ROM[04501]
// ---------------------------
// Push RA
@ Cell.draw:116                              // ROM[04502]
D = A                                        // ROM[04503]
// ---------------------------
// push D
@ SP                                         // ROM[04504]
AM = M+1                                     // ROM[04505]
A = A-1                                      // ROM[04506]
M = D                                        // ROM[04507]
// ---------------------------
// call
@ Cell.draw:117                              // ROM[04508]
D = A                                        // ROM[04509]
@ R15                                        // ROM[04510]
M = D                                        // ROM[04511]
@ :call                                      // ROM[04512]
0; JMP                                       // ROM[04513]
( Cell.draw:117)
// ---------------------------
// goto functionName
@ Screen.drawCircle                          // ROM[04514]
0; JMP                                       // ROM[04515]
// ---------------------------
// ( RA )
( Cell.draw:116) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[04516]
AM = M-1                                     // ROM[04517]
D = M                                        // ROM[04518]
// ---------------------------
@ 5                                          // ROM[04519]
M = D                                        // ROM[04520]

// -------------------------------------
// PUSH: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[04521]
D = A                                        // ROM[04522]
@ R13                                        // ROM[04523]
M = D                                        // ROM[04524]
// ---------------------------
// call
@ Cell.draw:118                              // ROM[04525]
D = A                                        // ROM[04526]
@ R15                                        // ROM[04527]
M = D                                        // ROM[04528]
@ :push_local                                // ROM[04529]
0; JMP                                       // ROM[04530]
( Cell.draw:118)

// -------------------------------------
// ARITHMETIC: not
// -------------------------------------
@ SP                                         // ROM[04531]
A = M-1                                      // ROM[04532]
M = !M                                       // ROM[04533]

// -------------------------------------
// POP: <local, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[04534]
D = A                                        // ROM[04535]
@ R13                                        // ROM[04536]
M = D                                        // ROM[04537]
// ---------------------------
// call
@ Cell.draw:119                              // ROM[04538]
D = A                                        // ROM[04539]
@ R15                                        // ROM[04540]
M = D                                        // ROM[04541]
@ :pop_local                                 // ROM[04542]
0; JMP                                       // ROM[04543]
( Cell.draw:119)

// -------------------------------------
// PUSH: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[04544]
D = A                                        // ROM[04545]
@ R13                                        // ROM[04546]
M = D                                        // ROM[04547]
// ---------------------------
// call
@ Cell.draw:120                              // ROM[04548]
D = A                                        // ROM[04549]
@ R15                                        // ROM[04550]
M = D                                        // ROM[04551]
@ :push_local                                // ROM[04552]
0; JMP                                       // ROM[04553]
( Cell.draw:120)

// -------------------------------------
// PUSH: <constant, 3>
// -------------------------------------
@ 3                                          // ROM[04554]
D = A                                        // ROM[04555]
// ---------------------------
// push D
@ SP                                         // ROM[04556]
AM = M+1                                     // ROM[04557]
A = A-1                                      // ROM[04558]
M = D                                        // ROM[04559]

// -------------------------------------
// ARITHMETIC: sub
// -------------------------------------
// ---------------------------
// call
@ Cell.draw:121                              // ROM[04560]
D = A                                        // ROM[04561]
@ R15                                        // ROM[04562]
M = D                                        // ROM[04563]
@ :sub                                       // ROM[04564]
0; JMP                                       // ROM[04565]
( Cell.draw:121)

// -------------------------------------
// POP: <local, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[04566]
D = A                                        // ROM[04567]
@ R13                                        // ROM[04568]
M = D                                        // ROM[04569]
// ---------------------------
// call
@ Cell.draw:122                              // ROM[04570]
D = A                                        // ROM[04571]
@ R15                                        // ROM[04572]
M = D                                        // ROM[04573]
@ :pop_local                                 // ROM[04574]
0; JMP                                       // ROM[04575]
( Cell.draw:122)

// -------------------------------------
// GOTO: LOOP1
// -------------------------------------
@ Cell.draw$LOOP1                            // ROM[04576]
0; JMP                                       // ROM[04577]

// -------------------------------------
// LABEL: END1
// -------------------------------------
( Cell.draw$END1 )

// -------------------------------------
// PUSH: <this, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[04578]
D = A                                        // ROM[04579]
@ R13                                        // ROM[04580]
M = D                                        // ROM[04581]
// ---------------------------
// call
@ Cell.draw:123                              // ROM[04582]
D = A                                        // ROM[04583]
@ R15                                        // ROM[04584]
M = D                                        // ROM[04585]
@ :push_this                                 // ROM[04586]
0; JMP                                       // ROM[04587]
( Cell.draw:123)

// -------------------------------------
// ARITHMETIC: not
// -------------------------------------
@ SP                                         // ROM[04588]
A = M-1                                      // ROM[04589]
M = !M                                       // ROM[04590]

// -------------------------------------
// CALL: Screen.setColor(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[04591]
D = A                                        // ROM[04592]
@ R13                                        // ROM[04593]
M = D                                        // ROM[04594]
// ---------------------------
// Push RA
@ Cell.draw:124                              // ROM[04595]
D = A                                        // ROM[04596]
// ---------------------------
// push D
@ SP                                         // ROM[04597]
AM = M+1                                     // ROM[04598]
A = A-1                                      // ROM[04599]
M = D                                        // ROM[04600]
// ---------------------------
// call
@ Cell.draw:125                              // ROM[04601]
D = A                                        // ROM[04602]
@ R15                                        // ROM[04603]
M = D                                        // ROM[04604]
@ :call                                      // ROM[04605]
0; JMP                                       // ROM[04606]
( Cell.draw:125)
// ---------------------------
// goto functionName
@ Screen.setColor                            // ROM[04607]
0; JMP                                       // ROM[04608]
// ---------------------------
// ( RA )
( Cell.draw:124) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[04609]
AM = M-1                                     // ROM[04610]
D = M                                        // ROM[04611]
// ---------------------------
@ 5                                          // ROM[04612]
M = D                                        // ROM[04613]

// -------------------------------------
// PUSH: <this, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[04614]
D = A                                        // ROM[04615]
@ R13                                        // ROM[04616]
M = D                                        // ROM[04617]
// ---------------------------
// call
@ Cell.draw:126                              // ROM[04618]
D = A                                        // ROM[04619]
@ R15                                        // ROM[04620]
M = D                                        // ROM[04621]
@ :push_this                                 // ROM[04622]
0; JMP                                       // ROM[04623]
( Cell.draw:126)

// -------------------------------------
// PUSH: <argument, 2>
// -------------------------------------
// ---------------------------
// R13 = index
@ 2                                          // ROM[04624]
D = A                                        // ROM[04625]
@ R13                                        // ROM[04626]
M = D                                        // ROM[04627]
// ---------------------------
// call
@ Cell.draw:127                              // ROM[04628]
D = A                                        // ROM[04629]
@ R15                                        // ROM[04630]
M = D                                        // ROM[04631]
@ :push_argument                             // ROM[04632]
0; JMP                                       // ROM[04633]
( Cell.draw:127)

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04634]
D = A                                        // ROM[04635]
@ R13                                        // ROM[04636]
M = D                                        // ROM[04637]
// ---------------------------
// Push RA
@ Cell.draw:128                              // ROM[04638]
D = A                                        // ROM[04639]
// ---------------------------
// push D
@ SP                                         // ROM[04640]
AM = M+1                                     // ROM[04641]
A = A-1                                      // ROM[04642]
M = D                                        // ROM[04643]
// ---------------------------
// call
@ Cell.draw:129                              // ROM[04644]
D = A                                        // ROM[04645]
@ R15                                        // ROM[04646]
M = D                                        // ROM[04647]
@ :call                                      // ROM[04648]
0; JMP                                       // ROM[04649]
( Cell.draw:129)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[04650]
0; JMP                                       // ROM[04651]
// ---------------------------
// ( RA )
( Cell.draw:128) 

// -------------------------------------
// PUSH: <this, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[04652]
D = A                                        // ROM[04653]
@ R13                                        // ROM[04654]
M = D                                        // ROM[04655]
// ---------------------------
// call
@ Cell.draw:130                              // ROM[04656]
D = A                                        // ROM[04657]
@ R15                                        // ROM[04658]
M = D                                        // ROM[04659]
@ :push_this                                 // ROM[04660]
0; JMP                                       // ROM[04661]
( Cell.draw:130)

// -------------------------------------
// PUSH: <argument, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[04662]
D = A                                        // ROM[04663]
@ R13                                        // ROM[04664]
M = D                                        // ROM[04665]
// ---------------------------
// call
@ Cell.draw:131                              // ROM[04666]
D = A                                        // ROM[04667]
@ R15                                        // ROM[04668]
M = D                                        // ROM[04669]
@ :push_argument                             // ROM[04670]
0; JMP                                       // ROM[04671]
( Cell.draw:131)

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04672]
D = A                                        // ROM[04673]
@ R13                                        // ROM[04674]
M = D                                        // ROM[04675]
// ---------------------------
// Push RA
@ Cell.draw:132                              // ROM[04676]
D = A                                        // ROM[04677]
// ---------------------------
// push D
@ SP                                         // ROM[04678]
AM = M+1                                     // ROM[04679]
A = A-1                                      // ROM[04680]
M = D                                        // ROM[04681]
// ---------------------------
// call
@ Cell.draw:133                              // ROM[04682]
D = A                                        // ROM[04683]
@ R15                                        // ROM[04684]
M = D                                        // ROM[04685]
@ :call                                      // ROM[04686]
0; JMP                                       // ROM[04687]
( Cell.draw:133)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[04688]
0; JMP                                       // ROM[04689]
// ---------------------------
// ( RA )
( Cell.draw:132) 

// -------------------------------------
// CALL: Output.moveCursor(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04690]
D = A                                        // ROM[04691]
@ R13                                        // ROM[04692]
M = D                                        // ROM[04693]
// ---------------------------
// Push RA
@ Cell.draw:134                              // ROM[04694]
D = A                                        // ROM[04695]
// ---------------------------
// push D
@ SP                                         // ROM[04696]
AM = M+1                                     // ROM[04697]
A = A-1                                      // ROM[04698]
M = D                                        // ROM[04699]
// ---------------------------
// call
@ Cell.draw:135                              // ROM[04700]
D = A                                        // ROM[04701]
@ R15                                        // ROM[04702]
M = D                                        // ROM[04703]
@ :call                                      // ROM[04704]
0; JMP                                       // ROM[04705]
( Cell.draw:135)
// ---------------------------
// goto functionName
@ Output.moveCursor                          // ROM[04706]
0; JMP                                       // ROM[04707]
// ---------------------------
// ( RA )
( Cell.draw:134) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[04708]
AM = M-1                                     // ROM[04709]
D = M                                        // ROM[04710]
// ---------------------------
@ 5                                          // ROM[04711]
M = D                                        // ROM[04712]

// -------------------------------------
// PUSH: <this, 3>
// -------------------------------------
// ---------------------------
// R13 = index
@ 3                                          // ROM[04713]
D = A                                        // ROM[04714]
@ R13                                        // ROM[04715]
M = D                                        // ROM[04716]
// ---------------------------
// call
@ Cell.draw:136                              // ROM[04717]
D = A                                        // ROM[04718]
@ R15                                        // ROM[04719]
M = D                                        // ROM[04720]
@ :push_this                                 // ROM[04721]
0; JMP                                       // ROM[04722]
( Cell.draw:136)

// -------------------------------------
// CALL: Output.printString(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[04723]
D = A                                        // ROM[04724]
@ R13                                        // ROM[04725]
M = D                                        // ROM[04726]
// ---------------------------
// Push RA
@ Cell.draw:137                              // ROM[04727]
D = A                                        // ROM[04728]
// ---------------------------
// push D
@ SP                                         // ROM[04729]
AM = M+1                                     // ROM[04730]
A = A-1                                      // ROM[04731]
M = D                                        // ROM[04732]
// ---------------------------
// call
@ Cell.draw:138                              // ROM[04733]
D = A                                        // ROM[04734]
@ R15                                        // ROM[04735]
M = D                                        // ROM[04736]
@ :call                                      // ROM[04737]
0; JMP                                       // ROM[04738]
( Cell.draw:138)
// ---------------------------
// goto functionName
@ Output.printString                         // ROM[04739]
0; JMP                                       // ROM[04740]
// ---------------------------
// ( RA )
( Cell.draw:137) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[04741]
AM = M-1                                     // ROM[04742]
D = M                                        // ROM[04743]
// ---------------------------
@ 5                                          // ROM[04744]
M = D                                        // ROM[04745]

// -------------------------------------
// PUSH: <constant, 10>
// -------------------------------------
@ 10                                         // ROM[04746]
D = A                                        // ROM[04747]
// ---------------------------
// push D
@ SP                                         // ROM[04748]
AM = M+1                                     // ROM[04749]
A = A-1                                      // ROM[04750]
M = D                                        // ROM[04751]

// -------------------------------------
// PUSH: <constant, 3>
// -------------------------------------
@ 3                                          // ROM[04752]
D = A                                        // ROM[04753]
// ---------------------------
// push D
@ SP                                         // ROM[04754]
AM = M+1                                     // ROM[04755]
A = A-1                                      // ROM[04756]
M = D                                        // ROM[04757]

// -------------------------------------
// PUSH: <this, 0>
// -------------------------------------
// ---------------------------
// R13 = index
@ 0                                          // ROM[04758]
D = A                                        // ROM[04759]
@ R13                                        // ROM[04760]
M = D                                        // ROM[04761]
// ---------------------------
// call
@ Cell.draw:139                              // ROM[04762]
D = A                                        // ROM[04763]
@ R15                                        // ROM[04764]
M = D                                        // ROM[04765]
@ :push_this                                 // ROM[04766]
0; JMP                                       // ROM[04767]
( Cell.draw:139)

// -------------------------------------
// CALL: Math.multiply(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04768]
D = A                                        // ROM[04769]
@ R13                                        // ROM[04770]
M = D                                        // ROM[04771]
// ---------------------------
// Push RA
@ Cell.draw:140                              // ROM[04772]
D = A                                        // ROM[04773]
// ---------------------------
// push D
@ SP                                         // ROM[04774]
AM = M+1                                     // ROM[04775]
A = A-1                                      // ROM[04776]
M = D                                        // ROM[04777]
// ---------------------------
// call
@ Cell.draw:141                              // ROM[04778]
D = A                                        // ROM[04779]
@ R15                                        // ROM[04780]
M = D                                        // ROM[04781]
@ :call                                      // ROM[04782]
0; JMP                                       // ROM[04783]
( Cell.draw:141)
// ---------------------------
// goto functionName
@ Math.multiply                              // ROM[04784]
0; JMP                                       // ROM[04785]
// ---------------------------
// ( RA )
( Cell.draw:140) 

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Cell.draw:142                              // ROM[04786]
D = A                                        // ROM[04787]
@ R15                                        // ROM[04788]
M = D                                        // ROM[04789]
@ :add                                       // ROM[04790]
0; JMP                                       // ROM[04791]
( Cell.draw:142)

// -------------------------------------
// PUSH: <constant, 57>
// -------------------------------------
@ 57                                         // ROM[04792]
D = A                                        // ROM[04793]
// ---------------------------
// push D
@ SP                                         // ROM[04794]
AM = M+1                                     // ROM[04795]
A = A-1                                      // ROM[04796]
M = D                                        // ROM[04797]

// -------------------------------------
// PUSH: <this, 1>
// -------------------------------------
// ---------------------------
// R13 = index
@ 1                                          // ROM[04798]
D = A                                        // ROM[04799]
@ R13                                        // ROM[04800]
M = D                                        // ROM[04801]
// ---------------------------
// call
@ Cell.draw:143                              // ROM[04802]
D = A                                        // ROM[04803]
@ R15                                        // ROM[04804]
M = D                                        // ROM[04805]
@ :push_this                                 // ROM[04806]
0; JMP                                       // ROM[04807]
( Cell.draw:143)

// -------------------------------------
// ARITHMETIC: add
// -------------------------------------
// ---------------------------
// call
@ Cell.draw:144                              // ROM[04808]
D = A                                        // ROM[04809]
@ R15                                        // ROM[04810]
M = D                                        // ROM[04811]
@ :add                                       // ROM[04812]
0; JMP                                       // ROM[04813]
( Cell.draw:144)

// -------------------------------------
// CALL: Output.moveCursor(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04814]
D = A                                        // ROM[04815]
@ R13                                        // ROM[04816]
M = D                                        // ROM[04817]
// ---------------------------
// Push RA
@ Cell.draw:145                              // ROM[04818]
D = A                                        // ROM[04819]
// ---------------------------
// push D
@ SP                                         // ROM[04820]
AM = M+1                                     // ROM[04821]
A = A-1                                      // ROM[04822]
M = D                                        // ROM[04823]
// ---------------------------
// call
@ Cell.draw:146                              // ROM[04824]
D = A                                        // ROM[04825]
@ R15                                        // ROM[04826]
M = D                                        // ROM[04827]
@ :call                                      // ROM[04828]
0; JMP                                       // ROM[04829]
( Cell.draw:146)
// ---------------------------
// goto functionName
@ Output.moveCursor                          // ROM[04830]
0; JMP                                       // ROM[04831]
// ---------------------------
// ( RA )
( Cell.draw:145) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[04832]
AM = M-1                                     // ROM[04833]
D = M                                        // ROM[04834]
// ---------------------------
@ 5                                          // ROM[04835]
M = D                                        // ROM[04836]

// -------------------------------------
// PUSH: <constant, 1>
// -------------------------------------
@ 1                                          // ROM[04837]
D = A                                        // ROM[04838]
// ---------------------------
// push D
@ SP                                         // ROM[04839]
AM = M+1                                     // ROM[04840]
A = A-1                                      // ROM[04841]
M = D                                        // ROM[04842]

// -------------------------------------
// CALL: String.new(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[04843]
D = A                                        // ROM[04844]
@ R13                                        // ROM[04845]
M = D                                        // ROM[04846]
// ---------------------------
// Push RA
@ Cell.draw:147                              // ROM[04847]
D = A                                        // ROM[04848]
// ---------------------------
// push D
@ SP                                         // ROM[04849]
AM = M+1                                     // ROM[04850]
A = A-1                                      // ROM[04851]
M = D                                        // ROM[04852]
// ---------------------------
// call
@ Cell.draw:148                              // ROM[04853]
D = A                                        // ROM[04854]
@ R15                                        // ROM[04855]
M = D                                        // ROM[04856]
@ :call                                      // ROM[04857]
0; JMP                                       // ROM[04858]
( Cell.draw:148)
// ---------------------------
// goto functionName
@ String.new                                 // ROM[04859]
0; JMP                                       // ROM[04860]
// ---------------------------
// ( RA )
( Cell.draw:147) 

// -------------------------------------
// PUSH: <constant, 35>
// -------------------------------------
@ 35                                         // ROM[04861]
D = A                                        // ROM[04862]
// ---------------------------
// push D
@ SP                                         // ROM[04863]
AM = M+1                                     // ROM[04864]
A = A-1                                      // ROM[04865]
M = D                                        // ROM[04866]

// -------------------------------------
// CALL: String.appendChar(2 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 2                                          // ROM[04867]
D = A                                        // ROM[04868]
@ R13                                        // ROM[04869]
M = D                                        // ROM[04870]
// ---------------------------
// Push RA
@ Cell.draw:149                              // ROM[04871]
D = A                                        // ROM[04872]
// ---------------------------
// push D
@ SP                                         // ROM[04873]
AM = M+1                                     // ROM[04874]
A = A-1                                      // ROM[04875]
M = D                                        // ROM[04876]
// ---------------------------
// call
@ Cell.draw:150                              // ROM[04877]
D = A                                        // ROM[04878]
@ R15                                        // ROM[04879]
M = D                                        // ROM[04880]
@ :call                                      // ROM[04881]
0; JMP                                       // ROM[04882]
( Cell.draw:150)
// ---------------------------
// goto functionName
@ String.appendChar                          // ROM[04883]
0; JMP                                       // ROM[04884]
// ---------------------------
// ( RA )
( Cell.draw:149) 

// -------------------------------------
// CALL: Output.printString(1 args)
// -------------------------------------
// ---------------------------
// R13 = nArgs
@ 1                                          // ROM[04885]
D = A                                        // ROM[04886]
@ R13                                        // ROM[04887]
M = D                                        // ROM[04888]
// ---------------------------
// Push RA
@ Cell.draw:151                              // ROM[04889]
D = A                                        // ROM[04890]
// ---------------------------
// push D
@ SP                                         // ROM[04891]
AM = M+1                                     // ROM[04892]
A = A-1                                      // ROM[04893]
M = D                                        // ROM[04894]
// ---------------------------
// call
@ Cell.draw:152                              // ROM[04895]
D = A                                        // ROM[04896]
@ R15                                        // ROM[04897]
M = D                                        // ROM[04898]
@ :call                                      // ROM[04899]
0; JMP                                       // ROM[04900]
( Cell.draw:152)
// ---------------------------
// goto functionName
@ Output.printString                         // ROM[04901]
0; JMP                                       // ROM[04902]
// ---------------------------
// ( RA )
( Cell.draw:151) 

// -------------------------------------
// POP: <temp, 0>
// -------------------------------------
// ---------------------------
// pop D
@ SP                                         // ROM[04903]
AM = M-1                                     // ROM[04904]
D = M                                        // ROM[04905]
// ---------------------------
@ 5                                          // ROM[04906]
M = D                                        // ROM[04907]

// -------------------------------------
// PUSH: <constant, 0>
// -------------------------------------
@ 0                                          // ROM[04908]
D = A                                        // ROM[04909]
// ---------------------------
// push D
@ SP                                         // ROM[04910]
AM = M+1                                     // ROM[04911]
A = A-1                                      // ROM[04912]
M = D                                        // ROM[04913]

// -------------------------------------
// RETURN: 
// -------------------------------------
// ---------------------------
// call
@ Cell.draw:153                              // ROM[04914]
D = A                                        // ROM[04915]
@ R15                                        // ROM[04916]
M = D                                        // ROM[04917]
@ :return                                    // ROM[04918]
0; JMP                                       // ROM[04919]
( Cell.draw:153)

// =========================================================
// SUBROUTINES: PUSH
// =========================================================


// =========================================================
// SUBROUTINE: push_local
// =========================================================

( :push_local )
// ---------------------------
// R13 = &segment[N] = segment+N
@ R13                                        // ROM[04920]
D = M                                        // ROM[04921]
@ LCL                                        // ROM[04922]
A = M                                        // ROM[04923]
D = D+A                                      // ROM[04924]
@ R13                                        // ROM[04925]
M = D                                        // ROM[04926]
// ---------------------------
// D = *R13
@ R13                                        // ROM[04927]
A = M                                        // ROM[04928]
D = M                                        // ROM[04929]
// ---------------------------
// push D
@ SP                                         // ROM[04930]
AM = M+1                                     // ROM[04931]
A = A-1                                      // ROM[04932]
M = D                                        // ROM[04933]
// ---------------------------
// return
@ R15                                        // ROM[04934]
A = M                                        // ROM[04935]
0; JMP                                       // ROM[04936]

// =========================================================
// SUBROUTINE: push_argument
// =========================================================

( :push_argument )
// ---------------------------
// R13 = &segment[N] = segment+N
@ R13                                        // ROM[04937]
D = M                                        // ROM[04938]
@ ARG                                        // ROM[04939]
A = M                                        // ROM[04940]
D = D+A                                      // ROM[04941]
@ R13                                        // ROM[04942]
M = D                                        // ROM[04943]
// ---------------------------
// D = *R13
@ R13                                        // ROM[04944]
A = M                                        // ROM[04945]
D = M                                        // ROM[04946]
// ---------------------------
// push D
@ SP                                         // ROM[04947]
AM = M+1                                     // ROM[04948]
A = A-1                                      // ROM[04949]
M = D                                        // ROM[04950]
// ---------------------------
// return
@ R15                                        // ROM[04951]
A = M                                        // ROM[04952]
0; JMP                                       // ROM[04953]

// =========================================================
// SUBROUTINE: push_this
// =========================================================

( :push_this )
// ---------------------------
// R13 = &segment[N] = segment+N
@ R13                                        // ROM[04954]
D = M                                        // ROM[04955]
@ THIS                                       // ROM[04956]
A = M                                        // ROM[04957]
D = D+A                                      // ROM[04958]
@ R13                                        // ROM[04959]
M = D                                        // ROM[04960]
// ---------------------------
// D = *R13
@ R13                                        // ROM[04961]
A = M                                        // ROM[04962]
D = M                                        // ROM[04963]
// ---------------------------
// push D
@ SP                                         // ROM[04964]
AM = M+1                                     // ROM[04965]
A = A-1                                      // ROM[04966]
M = D                                        // ROM[04967]
// ---------------------------
// return
@ R15                                        // ROM[04968]
A = M                                        // ROM[04969]
0; JMP                                       // ROM[04970]

// =========================================================
// SUBROUTINE: push_that
// =========================================================

( :push_that )
// ---------------------------
// R13 = &segment[N] = segment+N
@ R13                                        // ROM[04971]
D = M                                        // ROM[04972]
@ THAT                                       // ROM[04973]
A = M                                        // ROM[04974]
D = D+A                                      // ROM[04975]
@ R13                                        // ROM[04976]
M = D                                        // ROM[04977]
// ---------------------------
// D = *R13
@ R13                                        // ROM[04978]
A = M                                        // ROM[04979]
D = M                                        // ROM[04980]
// ---------------------------
// push D
@ SP                                         // ROM[04981]
AM = M+1                                     // ROM[04982]
A = A-1                                      // ROM[04983]
M = D                                        // ROM[04984]
// ---------------------------
// return
@ R15                                        // ROM[04985]
A = M                                        // ROM[04986]
0; JMP                                       // ROM[04987]

// =========================================================
// SUBROUTINES: POP
// =========================================================


// =========================================================
// SUBROUTINE: pop_local
// =========================================================

( :pop_local )
// ---------------------------
// pop D
@ SP                                         // ROM[04988]
AM = M-1                                     // ROM[04989]
D = M                                        // ROM[04990]
// ---------------------------
// R14 = D
@ R14                                        // ROM[04991]
M = D                                        // ROM[04992]
// ---------------------------
// R13 = &segment[N] = segment+N
@ R13                                        // ROM[04993]
D = M                                        // ROM[04994]
@ LCL                                        // ROM[04995]
A = M                                        // ROM[04996]
D = D+A                                      // ROM[04997]
@ R13                                        // ROM[04998]
M = D                                        // ROM[04999]
// ---------------------------
// D = R14
@ R14                                        // ROM[05000]
D = M                                        // ROM[05001]
// ---------------------------
// *R13 = D
@ R13                                        // ROM[05002]
A = M                                        // ROM[05003]
M = D                                        // ROM[05004]
// ---------------------------
// return
@ R15                                        // ROM[05005]
A = M                                        // ROM[05006]
0; JMP                                       // ROM[05007]

// =========================================================
// SUBROUTINE: pop_argument
// =========================================================

( :pop_argument )
// ---------------------------
// pop D
@ SP                                         // ROM[05008]
AM = M-1                                     // ROM[05009]
D = M                                        // ROM[05010]
// ---------------------------
// R14 = D
@ R14                                        // ROM[05011]
M = D                                        // ROM[05012]
// ---------------------------
// R13 = &segment[N] = segment+N
@ R13                                        // ROM[05013]
D = M                                        // ROM[05014]
@ ARG                                        // ROM[05015]
A = M                                        // ROM[05016]
D = D+A                                      // ROM[05017]
@ R13                                        // ROM[05018]
M = D                                        // ROM[05019]
// ---------------------------
// D = R14
@ R14                                        // ROM[05020]
D = M                                        // ROM[05021]
// ---------------------------
// *R13 = D
@ R13                                        // ROM[05022]
A = M                                        // ROM[05023]
M = D                                        // ROM[05024]
// ---------------------------
// return
@ R15                                        // ROM[05025]
A = M                                        // ROM[05026]
0; JMP                                       // ROM[05027]

// =========================================================
// SUBROUTINE: pop_this
// =========================================================

( :pop_this )
// ---------------------------
// pop D
@ SP                                         // ROM[05028]
AM = M-1                                     // ROM[05029]
D = M                                        // ROM[05030]
// ---------------------------
// R14 = D
@ R14                                        // ROM[05031]
M = D                                        // ROM[05032]
// ---------------------------
// R13 = &segment[N] = segment+N
@ R13                                        // ROM[05033]
D = M                                        // ROM[05034]
@ THIS                                       // ROM[05035]
A = M                                        // ROM[05036]
D = D+A                                      // ROM[05037]
@ R13                                        // ROM[05038]
M = D                                        // ROM[05039]
// ---------------------------
// D = R14
@ R14                                        // ROM[05040]
D = M                                        // ROM[05041]
// ---------------------------
// *R13 = D
@ R13                                        // ROM[05042]
A = M                                        // ROM[05043]
M = D                                        // ROM[05044]
// ---------------------------
// return
@ R15                                        // ROM[05045]
A = M                                        // ROM[05046]
0; JMP                                       // ROM[05047]

// =========================================================
// SUBROUTINE: pop_that
// =========================================================

( :pop_that )
// ---------------------------
// pop D
@ SP                                         // ROM[05048]
AM = M-1                                     // ROM[05049]
D = M                                        // ROM[05050]
// ---------------------------
// R14 = D
@ R14                                        // ROM[05051]
M = D                                        // ROM[05052]
// ---------------------------
// R13 = &segment[N] = segment+N
@ R13                                        // ROM[05053]
D = M                                        // ROM[05054]
@ THAT                                       // ROM[05055]
A = M                                        // ROM[05056]
D = D+A                                      // ROM[05057]
@ R13                                        // ROM[05058]
M = D                                        // ROM[05059]
// ---------------------------
// D = R14
@ R14                                        // ROM[05060]
D = M                                        // ROM[05061]
// ---------------------------
// *R13 = D
@ R13                                        // ROM[05062]
A = M                                        // ROM[05063]
M = D                                        // ROM[05064]
// ---------------------------
// return
@ R15                                        // ROM[05065]
A = M                                        // ROM[05066]
0; JMP                                       // ROM[05067]

// =========================================================
// SUBROUTINES: ARITHMETIC
// =========================================================


// =========================================================
// SUBROUTINE: add
// =========================================================

( :add )
// ---------------------------
// pop D
@ SP                                         // ROM[05068]
AM = M-1                                     // ROM[05069]
D = M                                        // ROM[05070]
// ---------------------------
// R14 = D
@ R14                                        // ROM[05071]
M = D                                        // ROM[05072]
// ---------------------------
// pop D
@ SP                                         // ROM[05073]
AM = M-1                                     // ROM[05074]
D = M                                        // ROM[05075]
// ---------------------------
// D += R14
@ R14                                        // ROM[05076]
D = D+M                                      // ROM[05077]
// ---------------------------
// push D
@ SP                                         // ROM[05078]
AM = M+1                                     // ROM[05079]
A = A-1                                      // ROM[05080]
M = D                                        // ROM[05081]
// ---------------------------
// return
@ R15                                        // ROM[05082]
A = M                                        // ROM[05083]
0; JMP                                       // ROM[05084]

// =========================================================
// SUBROUTINE: sub
// =========================================================

( :sub )
// ---------------------------
// pop D
@ SP                                         // ROM[05085]
AM = M-1                                     // ROM[05086]
D = M                                        // ROM[05087]
// ---------------------------
// R14 = D
@ R14                                        // ROM[05088]
M = D                                        // ROM[05089]
// ---------------------------
// pop D
@ SP                                         // ROM[05090]
AM = M-1                                     // ROM[05091]
D = M                                        // ROM[05092]
// ---------------------------
// D -= R14
@ R14                                        // ROM[05093]
D = D-M                                      // ROM[05094]
// ---------------------------
// push D
@ SP                                         // ROM[05095]
AM = M+1                                     // ROM[05096]
A = A-1                                      // ROM[05097]
M = D                                        // ROM[05098]
// ---------------------------
// return
@ R15                                        // ROM[05099]
A = M                                        // ROM[05100]
0; JMP                                       // ROM[05101]

// =========================================================
// SUBROUTINE: neg
// =========================================================

( :neg )
@ SP                                         // ROM[05102]
A = M-1                                      // ROM[05103]
M = -M                                       // ROM[05104]
// ---------------------------
// return
@ R15                                        // ROM[05105]
A = M                                        // ROM[05106]
0; JMP                                       // ROM[05107]

// =========================================================
// SUBROUTINE: eq
// =========================================================

( :eq )
// ---------------------------
// pop D
@ SP                                         // ROM[05108]
AM = M-1                                     // ROM[05109]
D = M                                        // ROM[05110]
// ---------------------------
// R14 = D
@ R14                                        // ROM[05111]
M = D                                        // ROM[05112]
// ---------------------------
// pop D
@ SP                                         // ROM[05113]
AM = M-1                                     // ROM[05114]
D = M                                        // ROM[05115]
// ---------------------------
// D -= R14
@ R14                                        // ROM[05116]
D = D-M                                      // ROM[05117]
// ---------------------------
// D == 0
@ Cell.draw:154                              // ROM[05118]
D; JEQ                                       // ROM[05119]
D = 0                                        // ROM[05120]
@ Cell.draw:155                              // ROM[05121]
0; JMP                                       // ROM[05122]
(Cell.draw:154)
D = -1                                       // ROM[05123]
(Cell.draw:155)
// ---------------------------
// push D
@ SP                                         // ROM[05124]
AM = M+1                                     // ROM[05125]
A = A-1                                      // ROM[05126]
M = D                                        // ROM[05127]
// ---------------------------
// return
@ R15                                        // ROM[05128]
A = M                                        // ROM[05129]
0; JMP                                       // ROM[05130]

// =========================================================
// SUBROUTINE: lt
// =========================================================

( :lt )
// ---------------------------
// pop D
@ SP                                         // ROM[05131]
AM = M-1                                     // ROM[05132]
D = M                                        // ROM[05133]
// ---------------------------
// R14 = D
@ R14                                        // ROM[05134]
M = D                                        // ROM[05135]
// ---------------------------
// pop D
@ SP                                         // ROM[05136]
AM = M-1                                     // ROM[05137]
D = M                                        // ROM[05138]
// ---------------------------
// D -= R14
@ R14                                        // ROM[05139]
D = D-M                                      // ROM[05140]
// ---------------------------
// D == 0
@ Cell.draw:156                              // ROM[05141]
D; JLT                                       // ROM[05142]
D = 0                                        // ROM[05143]
@ Cell.draw:157                              // ROM[05144]
0; JMP                                       // ROM[05145]
(Cell.draw:156)
D = -1                                       // ROM[05146]
(Cell.draw:157)
// ---------------------------
// push D
@ SP                                         // ROM[05147]
AM = M+1                                     // ROM[05148]
A = A-1                                      // ROM[05149]
M = D                                        // ROM[05150]
// ---------------------------
// return
@ R15                                        // ROM[05151]
A = M                                        // ROM[05152]
0; JMP                                       // ROM[05153]

// =========================================================
// SUBROUTINE: gt
// =========================================================

( :gt )
// ---------------------------
// pop D
@ SP                                         // ROM[05154]
AM = M-1                                     // ROM[05155]
D = M                                        // ROM[05156]
// ---------------------------
// R14 = D
@ R14                                        // ROM[05157]
M = D                                        // ROM[05158]
// ---------------------------
// pop D
@ SP                                         // ROM[05159]
AM = M-1                                     // ROM[05160]
D = M                                        // ROM[05161]
// ---------------------------
// D -= R14
@ R14                                        // ROM[05162]
D = D-M                                      // ROM[05163]
// ---------------------------
// D == 0
@ Cell.draw:158                              // ROM[05164]
D; JGT                                       // ROM[05165]
D = 0                                        // ROM[05166]
@ Cell.draw:159                              // ROM[05167]
0; JMP                                       // ROM[05168]
(Cell.draw:158)
D = -1                                       // ROM[05169]
(Cell.draw:159)
// ---------------------------
// push D
@ SP                                         // ROM[05170]
AM = M+1                                     // ROM[05171]
A = A-1                                      // ROM[05172]
M = D                                        // ROM[05173]
// ---------------------------
// return
@ R15                                        // ROM[05174]
A = M                                        // ROM[05175]
0; JMP                                       // ROM[05176]

// =========================================================
// SUBROUTINE: and
// =========================================================

( :and )
// ---------------------------
// pop D
@ SP                                         // ROM[05177]
AM = M-1                                     // ROM[05178]
D = M                                        // ROM[05179]
// ---------------------------
// R14 = D
@ R14                                        // ROM[05180]
M = D                                        // ROM[05181]
// ---------------------------
// pop D
@ SP                                         // ROM[05182]
AM = M-1                                     // ROM[05183]
D = M                                        // ROM[05184]
// ---------------------------
// D &= R14
@ R14                                        // ROM[05185]
D = D&M                                      // ROM[05186]
// ---------------------------
// push D
@ SP                                         // ROM[05187]
AM = M+1                                     // ROM[05188]
A = A-1                                      // ROM[05189]
M = D                                        // ROM[05190]
// ---------------------------
// return
@ R15                                        // ROM[05191]
A = M                                        // ROM[05192]
0; JMP                                       // ROM[05193]

// =========================================================
// SUBROUTINE: or
// =========================================================

( :or )
// ---------------------------
// pop D
@ SP                                         // ROM[05194]
AM = M-1                                     // ROM[05195]
D = M                                        // ROM[05196]
// ---------------------------
// R14 = D
@ R14                                        // ROM[05197]
M = D                                        // ROM[05198]
// ---------------------------
// pop D
@ SP                                         // ROM[05199]
AM = M-1                                     // ROM[05200]
D = M                                        // ROM[05201]
// ---------------------------
// D |= R14
@ R14                                        // ROM[05202]
D = D|M                                      // ROM[05203]
// ---------------------------
// push D
@ SP                                         // ROM[05204]
AM = M+1                                     // ROM[05205]
A = A-1                                      // ROM[05206]
M = D                                        // ROM[05207]
// ---------------------------
// return
@ R15                                        // ROM[05208]
A = M                                        // ROM[05209]
0; JMP                                       // ROM[05210]

// =========================================================
// SUBROUTINE: not
// =========================================================

( :not )
@ SP                                         // ROM[05211]
A = M-1                                      // ROM[05212]
M = !M                                       // ROM[05213]
// ---------------------------
// return
@ R15                                        // ROM[05214]
A = M                                        // ROM[05215]
0; JMP                                       // ROM[05216]

// =========================================================
// SUBROUTINES: PROGRAM FLOW
// =========================================================


// =========================================================
// SUBROUTINES: FUNCTION CALLING
// =========================================================


// =========================================================
// SUBROUTINE: call
// =========================================================

( :call )
// ---------------------------
// push LCL
@ LCL                                        // ROM[05217]
D = M                                        // ROM[05218]
// ---------------------------
// push D
@ SP                                         // ROM[05219]
AM = M+1                                     // ROM[05220]
A = A-1                                      // ROM[05221]
M = D                                        // ROM[05222]
// ---------------------------
// push ARG
@ ARG                                        // ROM[05223]
D = M                                        // ROM[05224]
// ---------------------------
// push D
@ SP                                         // ROM[05225]
AM = M+1                                     // ROM[05226]
A = A-1                                      // ROM[05227]
M = D                                        // ROM[05228]
// ---------------------------
// push THIS
@ THIS                                       // ROM[05229]
D = M                                        // ROM[05230]
// ---------------------------
// push D
@ SP                                         // ROM[05231]
AM = M+1                                     // ROM[05232]
A = A-1                                      // ROM[05233]
M = D                                        // ROM[05234]
// ---------------------------
// push THAT
@ THAT                                       // ROM[05235]
D = M                                        // ROM[05236]
// ---------------------------
// push D
@ SP                                         // ROM[05237]
AM = M+1                                     // ROM[05238]
A = A-1                                      // ROM[05239]
M = D                                        // ROM[05240]
// ---------------------------
// push SP
@ SP                                         // ROM[05241]
D = M                                        // ROM[05242]
// ---------------------------
// push D
@ SP                                         // ROM[05243]
AM = M+1                                     // ROM[05244]
A = A-1                                      // ROM[05245]
M = D                                        // ROM[05246]
// ---------------------------
// push nArgs
@ R13                                        // ROM[05247]
A = M                                        // ROM[05248]
D = A                                        // ROM[05249]
// ---------------------------
// push D
@ SP                                         // ROM[05250]
AM = M+1                                     // ROM[05251]
A = A-1                                      // ROM[05252]
M = D                                        // ROM[05253]
// ---------------------------
// sub
// ---------------------------
// pop D
@ SP                                         // ROM[05254]
AM = M-1                                     // ROM[05255]
D = M                                        // ROM[05256]
// ---------------------------
// R14 = D
@ R14                                        // ROM[05257]
M = D                                        // ROM[05258]
// ---------------------------
// pop D
@ SP                                         // ROM[05259]
AM = M-1                                     // ROM[05260]
D = M                                        // ROM[05261]
// ---------------------------
// D -= R14
@ R14                                        // ROM[05262]
D = D-M                                      // ROM[05263]
// ---------------------------
// push D
@ SP                                         // ROM[05264]
AM = M+1                                     // ROM[05265]
A = A-1                                      // ROM[05266]
M = D                                        // ROM[05267]
// ---------------------------
// push constant 5
@ 5                                          // ROM[05268]
D = A                                        // ROM[05269]
// ---------------------------
// push D
@ SP                                         // ROM[05270]
AM = M+1                                     // ROM[05271]
A = A-1                                      // ROM[05272]
M = D                                        // ROM[05273]
// ---------------------------
// sub
// ---------------------------
// pop D
@ SP                                         // ROM[05274]
AM = M-1                                     // ROM[05275]
D = M                                        // ROM[05276]
// ---------------------------
// R14 = D
@ R14                                        // ROM[05277]
M = D                                        // ROM[05278]
// ---------------------------
// pop D
@ SP                                         // ROM[05279]
AM = M-1                                     // ROM[05280]
D = M                                        // ROM[05281]
// ---------------------------
// D -= R14
@ R14                                        // ROM[05282]
D = D-M                                      // ROM[05283]
// ---------------------------
// push D
@ SP                                         // ROM[05284]
AM = M+1                                     // ROM[05285]
A = A-1                                      // ROM[05286]
M = D                                        // ROM[05287]
// ---------------------------
// pop ARG
// ---------------------------
// pop D
@ SP                                         // ROM[05288]
AM = M-1                                     // ROM[05289]
D = M                                        // ROM[05290]
@ ARG                                        // ROM[05291]
M = D                                        // ROM[05292]
// ---------------------------
// push SP
@ SP                                         // ROM[05293]
D = M                                        // ROM[05294]
// ---------------------------
// push D
@ SP                                         // ROM[05295]
AM = M+1                                     // ROM[05296]
A = A-1                                      // ROM[05297]
M = D                                        // ROM[05298]
// ---------------------------
// pop LCL
// ---------------------------
// pop D
@ SP                                         // ROM[05299]
AM = M-1                                     // ROM[05300]
D = M                                        // ROM[05301]
@ LCL                                        // ROM[05302]
M = D                                        // ROM[05303]
// ---------------------------
// return
@ R15                                        // ROM[05304]
A = M                                        // ROM[05305]
0; JMP                                       // ROM[05306]

// =========================================================
// SUBROUTINE: return
// =========================================================

( :return )
// ---------------------------
// FRAME = LCL
@ LCL                                        // ROM[05307]
D = M                                        // ROM[05308]
@ R14                                        // ROM[05309]
M = D                                        // ROM[05310]
// ---------------------------
// RA = *(FRAME-5)
@ 5                                          // ROM[05311]
D = A                                        // ROM[05312]
@ R14                                        // ROM[05313]
A = M                                        // ROM[05314]
A = A-D                                      // ROM[05315]
D = M                                        // ROM[05316]
@ R13                                        // ROM[05317]
M = D                                        // ROM[05318]
// ---------------------------
// *ARG = pop()
// ---------------------------
// pop D
@ SP                                         // ROM[05319]
AM = M-1                                     // ROM[05320]
D = M                                        // ROM[05321]
@ ARG                                        // ROM[05322]
A = M                                        // ROM[05323]
M = D                                        // ROM[05324]
// ---------------------------
// SP = ARG+1
@ ARG                                        // ROM[05325]
D = M                                        // ROM[05326]
D = D+1                                      // ROM[05327]
@ SP                                         // ROM[05328]
M = D                                        // ROM[05329]
// ---------------------------
// THAT = *(FRAME-1)
@ 1                                          // ROM[05330]
D = A                                        // ROM[05331]
@ R14                                        // ROM[05332]
A = M                                        // ROM[05333]
A = A-D                                      // ROM[05334]
D = M                                        // ROM[05335]
@ THAT                                       // ROM[05336]
M = D                                        // ROM[05337]
// ---------------------------
// THIS = *(FRAME-2)
@ 2                                          // ROM[05338]
D = A                                        // ROM[05339]
@ R14                                        // ROM[05340]
A = M                                        // ROM[05341]
A = A-D                                      // ROM[05342]
D = M                                        // ROM[05343]
@ THIS                                       // ROM[05344]
M = D                                        // ROM[05345]
// ---------------------------
// ARG = *(FRAME-3)
@ 3                                          // ROM[05346]
D = A                                        // ROM[05347]
@ R14                                        // ROM[05348]
A = M                                        // ROM[05349]
A = A-D                                      // ROM[05350]
D = M                                        // ROM[05351]
@ ARG                                        // ROM[05352]
M = D                                        // ROM[05353]
// ---------------------------
// LCL = *(FRAME-4)
@ 4                                          // ROM[05354]
D = A                                        // ROM[05355]
@ R14                                        // ROM[05356]
A = M                                        // ROM[05357]
A = A-D                                      // ROM[05358]
D = M                                        // ROM[05359]
@ LCL                                        // ROM[05360]
M = D                                        // ROM[05361]
// ---------------------------
// goto RET
@ R13                                        // ROM[05362]
A = M                                        // ROM[05363]
0; JMP                                       // ROM[05364]
// ---------------------------
// return
@ R15                                        // ROM[05365]
A = M                                        // ROM[05366]
0; JMP                                       // ROM[05367]
